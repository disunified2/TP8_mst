(undo-tree-save-format-version . 1)
"f9089bfdfd70b2058cdb09e3cdf3150623bad539"
[nil nil nil nil (26460 19915 435248 625000) 0 nil]
([nil nil ((nil rear-nonsticky nil 666 . 667) (nil fontified nil 126 . 667) (nil fontified nil 125 . 126) (nil fontified nil 87 . 125) (nil fontified nil 86 . 87) (86 . 667) (t 26460 19716 740271 736000)) nil (26460 19915 435243 836000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1002 . 1003) (nil fontified nil 727 . 1003) (nil fontified nil 726 . 727) (nil fontified nil 668 . 726) (nil fontified nil 667 . 668) (667 . 1003) (t 26460 19915 444385 136000)) nil (26460 22873 801056 167000) 0 nil])
([nil nil ((#("/*
 * Increase the value of a key x to k.
 */
void max_heap_increase_key (int *array, int n, int x, int k);

" 0 1 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified t) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 2 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face whitespace-space c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face whitespace-space c-in-sws t fontified t) 6 14 (face font-lock-comment-face c-in-sws t fontified t) 14 15 (face whitespace-space c-in-sws t fontified t) 15 18 (face font-lock-comment-face c-in-sws t fontified t) 18 19 (face whitespace-space c-in-sws t fontified t) 19 24 (face font-lock-comment-face c-in-sws t fontified t) 24 25 (face whitespace-space c-in-sws t fontified t) 25 27 (face font-lock-comment-face c-in-sws t fontified t) 27 28 (face whitespace-space c-in-sws t fontified t) 28 29 (face font-lock-comment-face c-in-sws t fontified t) 29 30 (face whitespace-space c-in-sws t fontified t) 30 33 (face font-lock-comment-face c-in-sws t fontified t) 33 34 (face whitespace-space c-in-sws t fontified t) 34 35 (face font-lock-comment-face c-in-sws t fontified t) 35 36 (face whitespace-space c-in-sws t fontified t) 36 38 (face font-lock-comment-face c-in-sws t fontified t) 38 39 (face whitespace-space c-in-sws t fontified t) 39 42 (face font-lock-comment-face c-in-sws t fontified t) 42 43 (face whitespace-space c-in-sws t fontified t) 43 45 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 45 46 (c-in-sws t fontified t) 46 47 (face font-lock-type-face fontified t c-is-sws t) 47 49 (face font-lock-type-face fontified t) 49 50 (face font-lock-type-face c-type c-decl-id-start fontified t) 50 51 (face whitespace-space fontified t) 51 72 (face font-lock-function-name-face fontified t) 72 73 (face whitespace-space fontified t) 73 74 (c-type c-decl-arg-start fontified t) 74 77 (face font-lock-type-face fontified t) 77 78 (face whitespace-space fontified t) 78 79 (fontified t) 79 84 (face font-lock-variable-name-face fontified t) 84 85 (c-type c-decl-arg-start fontified t) 85 86 (face whitespace-space fontified t) 86 89 (face font-lock-type-face fontified t) 89 90 (face whitespace-space fontified t) 90 91 (face font-lock-variable-name-face fontified t) 91 92 (c-type c-decl-arg-start fontified t) 92 93 (face whitespace-space fontified t) 93 96 (face font-lock-type-face fontified t) 96 97 (face whitespace-space fontified t) 97 98 (face font-lock-variable-name-face fontified t) 98 99 (c-type c-decl-arg-start fontified t) 99 100 (face whitespace-space fontified t) 100 103 (face font-lock-type-face fontified t) 103 104 (face whitespace-space fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 108 (fontified t) 108 109 (fontified t rear-nonsticky t)) . 558) (undo-tree-id0 . -108) (undo-tree-id1 . -108) (undo-tree-id2 . -108) (undo-tree-id3 . -109) (undo-tree-id4 . -42) (undo-tree-id5 . -42) (undo-tree-id6 . -42) (undo-tree-id7 . -42) (undo-tree-id8 . -42) (undo-tree-id9 . -42) (undo-tree-id10 . -42) (undo-tree-id11 . -42) (undo-tree-id12 . -42) (undo-tree-id13 . -42) (undo-tree-id14 . -42) (undo-tree-id15 . -42) (undo-tree-id16 . -42) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -109)) nil (26460 22873 801051 217000) 0 nil])
([nil nil ((#("/*
 * Tell if the array is a heap.
 */
bool is_max_heap (int *array, int n);

/*
 * Maintain the max heap property assuming the children of node i are
 * valid max heaps.
 */
void max_heapify (int *array, int n, int i);

/*
 * Convert array into a max heap.
 */
void build_max_heap (int *array, int n);

/*
 * Sort the array with heap sort.
 */
void heapsort (int *array, int n);

/*
 * Get the value at the top of the heap.
 */
int max_heap_maximum (int *array, int n);

/*
 * Remove and return the maximum value of the heap.
 */
int max_heap_extract_max (int *array, int n);

/*
 * Increase the value of a key x to k.
 */
void max_heap_increase_key (int *array, int n, int x, int k);

/*
 * Insert a key k in the heap (assuming array is large enough).
 */
void max_heap_insert (int *array, int n, int k);

" 0 1 (c-is-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t) 3 4 (c-in-sws t face whitespace-space fontified t) 4 5 (c-in-sws t face font-lock-comment-face fontified t) 5 6 (c-in-sws t face whitespace-space fontified t) 6 10 (c-in-sws t face font-lock-comment-face fontified t) 10 11 (c-in-sws t face whitespace-space fontified t) 11 13 (c-in-sws t face font-lock-comment-face fontified t) 13 14 (c-in-sws t face whitespace-space fontified t) 14 17 (c-in-sws t face font-lock-comment-face fontified t) 17 18 (c-in-sws t face whitespace-space fontified t) 18 23 (c-in-sws t face font-lock-comment-face fontified t) 23 24 (c-in-sws t face whitespace-space fontified t) 24 26 (c-in-sws t face font-lock-comment-face fontified t) 26 27 (c-in-sws t face whitespace-space fontified t) 27 28 (c-in-sws t face font-lock-comment-face fontified t) 28 29 (c-in-sws t face whitespace-space fontified t) 29 35 (c-in-sws t face font-lock-comment-face fontified t) 35 36 (c-in-sws t face whitespace-space fontified t) 36 37 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 37 38 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 38 39 (c-is-sws t fontified t) 39 40 (face font-lock-type-face fontified t c-is-sws t) 40 42 (face font-lock-type-face fontified t) 42 43 (face font-lock-type-face c-type c-decl-id-start fontified t) 43 44 (face whitespace-space fontified t) 44 55 (face font-lock-function-name-face fontified t) 55 56 (face whitespace-space fontified t) 56 57 (c-type c-decl-arg-start fontified t) 57 60 (face font-lock-type-face fontified t) 60 61 (face whitespace-space fontified t) 61 62 (fontified t) 62 67 (face font-lock-variable-name-face fontified t) 67 68 (c-type c-decl-arg-start fontified t) 68 69 (face whitespace-space fontified t) 69 72 (face font-lock-type-face fontified t) 72 73 (face whitespace-space fontified t) 73 74 (face font-lock-variable-name-face fontified t) 74 78 (fontified t) 78 79 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 79 80 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 80 81 (c-in-sws t face font-lock-comment-face fontified t) 81 82 (c-in-sws t face whitespace-space fontified t) 82 83 (c-in-sws t face font-lock-comment-face fontified t) 83 84 (c-in-sws t face whitespace-space fontified t) 84 92 (c-in-sws t face font-lock-comment-face fontified t) 92 93 (c-in-sws t face whitespace-space fontified t) 93 96 (c-in-sws t face font-lock-comment-face fontified t) 96 97 (c-in-sws t face whitespace-space fontified t) 97 100 (c-in-sws t face font-lock-comment-face fontified t) 100 101 (c-in-sws t face whitespace-space fontified t) 101 105 (c-in-sws t face font-lock-comment-face fontified t) 105 106 (c-in-sws t face whitespace-space fontified t) 106 114 (c-in-sws t face font-lock-comment-face fontified t) 114 115 (c-in-sws t face whitespace-space fontified t) 115 123 (c-in-sws t face font-lock-comment-face fontified t) 123 124 (c-in-sws t face whitespace-space fontified t) 124 127 (c-in-sws t face font-lock-comment-face fontified t) 127 128 (c-in-sws t face whitespace-space fontified t) 128 136 (c-in-sws t face font-lock-comment-face fontified t) 136 137 (c-in-sws t face whitespace-space fontified t) 137 139 (c-in-sws t face font-lock-comment-face fontified t) 139 140 (c-in-sws t face whitespace-space fontified t) 140 144 (c-in-sws t face font-lock-comment-face fontified t) 144 145 (c-in-sws t face whitespace-space fontified t) 145 146 (c-in-sws t face font-lock-comment-face fontified t) 146 147 (c-in-sws t face whitespace-space fontified t) 147 151 (c-in-sws t face font-lock-comment-face fontified t) 151 152 (c-in-sws t face whitespace-space fontified t) 152 153 (c-in-sws t face font-lock-comment-face fontified t) 153 154 (c-in-sws t face whitespace-space fontified t) 154 159 (c-in-sws t face font-lock-comment-face fontified t) 159 160 (c-in-sws t face whitespace-space fontified t) 160 163 (c-in-sws t face font-lock-comment-face fontified t) 163 164 (c-in-sws t face whitespace-space fontified t) 164 171 (c-in-sws t face font-lock-comment-face fontified t) 171 172 (c-in-sws t face whitespace-space fontified t) 172 174 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 174 175 (c-in-sws t fontified t) 175 176 (face font-lock-type-face c-is-sws t fontified t) 176 178 (face font-lock-type-face fontified t) 178 179 (face font-lock-type-face c-type c-decl-id-start fontified t) 179 180 (face whitespace-space fontified t) 180 191 (face font-lock-function-name-face fontified t) 191 192 (face whitespace-space fontified t) 192 193 (c-type c-decl-arg-start fontified t) 193 196 (face font-lock-type-face fontified t) 196 197 (face whitespace-space fontified t) 197 198 (fontified t) 198 203 (face font-lock-variable-name-face fontified t) 203 204 (c-type c-decl-arg-start fontified t) 204 205 (face whitespace-space fontified t) 205 208 (face font-lock-type-face fontified t) 208 209 (face whitespace-space fontified t) 209 210 (face font-lock-variable-name-face fontified t) 210 211 (c-type c-decl-arg-start fontified t) 211 212 (face whitespace-space fontified t) 212 215 (face font-lock-type-face fontified t) 215 216 (face whitespace-space fontified t) 216 217 (face font-lock-variable-name-face fontified t) 217 221 (fontified t) 221 222 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 222 223 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 223 224 (c-in-sws t face font-lock-comment-face fontified t) 224 225 (c-in-sws t face whitespace-space fontified t) 225 226 (c-in-sws t face font-lock-comment-face fontified t) 226 227 (c-in-sws t face whitespace-space fontified t) 227 234 (c-in-sws t face font-lock-comment-face fontified t) 234 235 (c-in-sws t face whitespace-space fontified t) 235 240 (c-in-sws t face font-lock-comment-face fontified t) 240 241 (c-in-sws t face whitespace-space fontified t) 241 245 (c-in-sws t face font-lock-comment-face fontified t) 245 246 (c-in-sws t face whitespace-space fontified t) 246 247 (c-in-sws t face font-lock-comment-face fontified t) 247 248 (c-in-sws t face whitespace-space fontified t) 248 251 (c-in-sws t face font-lock-comment-face fontified t) 251 252 (c-in-sws t face whitespace-space fontified t) 252 258 (c-in-sws t face font-lock-comment-face fontified t) 258 259 (c-in-sws t face whitespace-space fontified t) 259 261 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 261 262 (c-in-sws t fontified t) 262 263 (face font-lock-type-face c-is-sws t fontified t) 263 265 (face font-lock-type-face fontified t) 265 266 (face font-lock-type-face c-type c-decl-id-start fontified t) 266 267 (face whitespace-space fontified t) 267 281 (face font-lock-function-name-face fontified t) 281 282 (face whitespace-space fontified t) 282 283 (c-type c-decl-arg-start fontified t) 283 286 (face font-lock-type-face fontified t) 286 287 (face whitespace-space fontified t) 287 288 (fontified t) 288 293 (face font-lock-variable-name-face fontified t) 293 294 (c-type c-decl-arg-start fontified t) 294 295 (face whitespace-space fontified t) 295 298 (face font-lock-type-face fontified t) 298 299 (face whitespace-space fontified t) 299 300 (face font-lock-variable-name-face fontified t) 300 304 (fontified t) 304 305 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 305 306 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 306 307 (c-in-sws t face font-lock-comment-face fontified t) 307 308 (c-in-sws t face whitespace-space fontified t) 308 309 (c-in-sws t face font-lock-comment-face fontified t) 309 310 (c-in-sws t face whitespace-space fontified t) 310 314 (c-in-sws t face font-lock-comment-face fontified t) 314 315 (c-in-sws t face whitespace-space fontified t) 315 318 (c-in-sws t face font-lock-comment-face fontified t) 318 319 (c-in-sws t face whitespace-space fontified t) 319 324 (c-in-sws t face font-lock-comment-face fontified t) 324 325 (c-in-sws t face whitespace-space fontified t) 325 329 (c-in-sws t face font-lock-comment-face fontified t) 329 330 (c-in-sws t face whitespace-space fontified t) 330 334 (c-in-sws t face font-lock-comment-face fontified t) 334 335 (c-in-sws t face whitespace-space fontified t) 335 341 (c-in-sws t face font-lock-comment-face fontified t) 341 342 (c-in-sws t face whitespace-space fontified t) 342 344 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 344 345 (c-in-sws t fontified t) 345 346 (face font-lock-type-face c-is-sws t fontified t) 346 348 (face font-lock-type-face fontified t) 348 349 (face font-lock-type-face c-type c-decl-id-start fontified t) 349 350 (face whitespace-space fontified t) 350 358 (face font-lock-function-name-face fontified t) 358 359 (face whitespace-space fontified t) 359 360 (c-type c-decl-arg-start fontified t) 360 363 (face font-lock-type-face fontified t) 363 364 (face whitespace-space fontified t) 364 365 (fontified t) 365 370 (face font-lock-variable-name-face fontified t) 370 371 (c-type c-decl-arg-start fontified t) 371 372 (face whitespace-space fontified t) 372 375 (face font-lock-type-face fontified t) 375 376 (face whitespace-space fontified t) 376 377 (face font-lock-variable-name-face fontified t) 377 381 (fontified t) 381 382 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 382 383 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 383 384 (c-in-sws t face font-lock-comment-face fontified t) 384 385 (c-in-sws t face whitespace-space fontified t) 385 386 (c-in-sws t face font-lock-comment-face fontified t) 386 387 (c-in-sws t face whitespace-space fontified t) 387 390 (c-in-sws t face font-lock-comment-face fontified t) 390 391 (c-in-sws t face whitespace-space fontified t) 391 394 (c-in-sws t face font-lock-comment-face fontified t) 394 395 (c-in-sws t face whitespace-space fontified t) 395 400 (c-in-sws t face font-lock-comment-face fontified t) 400 401 (c-in-sws t face whitespace-space fontified t) 401 403 (c-in-sws t face font-lock-comment-face fontified t) 403 404 (c-in-sws t face whitespace-space fontified t) 404 407 (c-in-sws t face font-lock-comment-face fontified t) 407 408 (c-in-sws t face whitespace-space fontified t) 408 411 (c-in-sws t face font-lock-comment-face fontified t) 411 412 (c-in-sws t face whitespace-space fontified t) 412 414 (c-in-sws t face font-lock-comment-face fontified t) 414 415 (c-in-sws t face whitespace-space fontified t) 415 418 (c-in-sws t face font-lock-comment-face fontified t) 418 419 (c-in-sws t face whitespace-space fontified t) 419 425 (c-in-sws t face font-lock-comment-face fontified t) 425 426 (c-in-sws t face whitespace-space fontified t) 426 428 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 428 429 (c-in-sws t fontified t) 429 430 (face font-lock-type-face c-is-sws t fontified t) 430 431 (face font-lock-type-face fontified t) 431 432 (face font-lock-type-face c-type c-decl-id-start fontified t) 432 433 (face whitespace-space fontified t) 433 449 (face font-lock-function-name-face fontified t) 449 450 (face whitespace-space fontified t) 450 451 (c-type c-decl-arg-start fontified t) 451 454 (face font-lock-type-face fontified t) 454 455 (face whitespace-space fontified t) 455 456 (fontified t) 456 461 (face font-lock-variable-name-face fontified t) 461 462 (c-type c-decl-arg-start fontified t) 462 463 (face whitespace-space fontified t) 463 466 (face font-lock-type-face fontified t) 466 467 (face whitespace-space fontified t) 467 468 (face font-lock-variable-name-face fontified t) 468 472 (fontified t) 472 473 (face font-lock-comment-delimiter-face c-in-sws t fontified t c-is-sws t) 473 474 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 474 475 (face font-lock-comment-face c-in-sws t fontified t) 475 476 (face whitespace-space fontified t c-in-sws t) 476 477 (face font-lock-comment-face fontified t c-in-sws t) 477 478 (face whitespace-space fontified t c-in-sws t) 478 484 (face font-lock-comment-face fontified t c-in-sws t) 484 485 (face whitespace-space fontified t c-in-sws t) 485 488 (face font-lock-comment-face fontified t c-in-sws t) 488 489 (face whitespace-space fontified t c-in-sws t) 489 495 (face font-lock-comment-face fontified t c-in-sws t) 495 496 (face whitespace-space fontified t c-in-sws t) 496 499 (face font-lock-comment-face fontified t c-in-sws t) 499 500 (face whitespace-space fontified t c-in-sws t) 500 507 (face font-lock-comment-face fontified t c-in-sws t) 507 508 (face whitespace-space fontified t c-in-sws t) 508 513 (face font-lock-comment-face fontified t c-in-sws t) 513 514 (face whitespace-space fontified t c-in-sws t) 514 516 (face font-lock-comment-face fontified t c-in-sws t) 516 517 (face whitespace-space fontified t c-in-sws t) 517 520 (face font-lock-comment-face fontified t c-in-sws t) 520 521 (face whitespace-space fontified t c-in-sws t) 521 527 (face font-lock-comment-face fontified t c-in-sws t) 527 528 (face whitespace-space fontified t c-in-sws t) 528 529 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 529 530 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 530 531 (fontified t c-is-sws t) 531 532 (face font-lock-type-face fontified t c-is-sws t) 532 533 (face font-lock-type-face fontified t) 533 534 (face font-lock-type-face c-type c-decl-id-start fontified t) 534 535 (face whitespace-space fontified t) 535 555 (face font-lock-function-name-face fontified t) 555 556 (face whitespace-space fontified t) 556 557 (c-type c-decl-arg-start fontified t) 557 560 (face font-lock-type-face fontified t) 560 561 (face whitespace-space fontified t) 561 562 (fontified t) 562 567 (face font-lock-variable-name-face fontified t) 567 568 (c-type c-decl-arg-start fontified t) 568 569 (face whitespace-space fontified t) 569 572 (face font-lock-type-face fontified t) 572 573 (face whitespace-space fontified t) 573 574 (face font-lock-variable-name-face fontified t) 574 578 (fontified t) 578 579 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 579 580 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 580 581 (face font-lock-comment-face fontified t c-in-sws t) 581 582 (face whitespace-space fontified t c-in-sws t) 582 583 (face font-lock-comment-face fontified t c-in-sws t) 583 584 (face whitespace-space fontified t c-in-sws t) 584 592 (face font-lock-comment-face fontified t c-in-sws t) 592 593 (face whitespace-space fontified t c-in-sws t) 593 596 (face font-lock-comment-face fontified t c-in-sws t) 596 597 (face whitespace-space fontified t c-in-sws t) 597 602 (face font-lock-comment-face fontified t c-in-sws t) 602 603 (face whitespace-space fontified t c-in-sws t) 603 605 (face font-lock-comment-face fontified t c-in-sws t) 605 606 (face whitespace-space fontified t c-in-sws t) 606 607 (face font-lock-comment-face fontified t c-in-sws t) 607 608 (face whitespace-space fontified t c-in-sws t) 608 611 (face font-lock-comment-face fontified t c-in-sws t) 611 612 (face whitespace-space fontified t c-in-sws t) 612 613 (face font-lock-comment-face fontified t c-in-sws t) 613 614 (face whitespace-space fontified t c-in-sws t) 614 616 (face font-lock-comment-face fontified t c-in-sws t) 616 617 (face whitespace-space fontified t c-in-sws t) 617 620 (face font-lock-comment-face fontified t c-in-sws t) 620 621 (face whitespace-space fontified t c-in-sws t) 621 623 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 623 624 (fontified t c-in-sws t) 624 625 (face font-lock-type-face fontified t c-is-sws t) 625 627 (face font-lock-type-face fontified t) 627 628 (face font-lock-type-face c-type c-decl-id-start fontified t) 628 629 (face whitespace-space fontified t) 629 650 (face font-lock-function-name-face fontified t) 650 651 (face whitespace-space fontified t) 651 652 (c-type c-decl-arg-start fontified t) 652 655 (face font-lock-type-face fontified t) 655 656 (face whitespace-space fontified t) 656 657 (fontified t) 657 662 (face font-lock-variable-name-face fontified t) 662 663 (c-type c-decl-arg-start fontified t) 663 664 (face whitespace-space fontified t) 664 667 (face font-lock-type-face fontified t) 667 668 (face whitespace-space fontified t) 668 669 (face font-lock-variable-name-face fontified t) 669 670 (c-type c-decl-arg-start fontified t) 670 671 (face whitespace-space fontified t) 671 674 (face font-lock-type-face fontified t) 674 675 (face whitespace-space fontified t) 675 676 (face font-lock-variable-name-face fontified t) 676 677 (c-type c-decl-arg-start fontified t) 677 678 (face whitespace-space fontified t) 678 681 (face font-lock-type-face fontified t) 681 682 (face whitespace-space fontified t) 682 683 (face font-lock-variable-name-face fontified t) 683 687 (fontified t) 687 688 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 688 689 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 689 690 (face font-lock-comment-face fontified t c-in-sws t) 690 691 (face whitespace-space fontified t c-in-sws t) 691 692 (face font-lock-comment-face fontified t c-in-sws t) 692 693 (face whitespace-space fontified t c-in-sws t) 693 699 (face font-lock-comment-face fontified t c-in-sws t) 699 700 (face whitespace-space fontified t c-in-sws t) 700 701 (face font-lock-comment-face fontified t c-in-sws t) 701 702 (face whitespace-space fontified t c-in-sws t) 702 705 (face font-lock-comment-face fontified t c-in-sws t) 705 706 (face whitespace-space fontified t c-in-sws t) 706 707 (face font-lock-comment-face fontified t c-in-sws t) 707 708 (face whitespace-space fontified t c-in-sws t) 708 710 (face font-lock-comment-face fontified t c-in-sws t) 710 711 (face whitespace-space fontified t c-in-sws t) 711 714 (face font-lock-comment-face fontified t c-in-sws t) 714 715 (face whitespace-space fontified t c-in-sws t) 715 719 (face font-lock-comment-face fontified t c-in-sws t) 719 720 (face whitespace-space fontified t c-in-sws t) 720 729 (face font-lock-comment-face fontified t c-in-sws t) 729 730 (face whitespace-space fontified t c-in-sws t) 730 735 (face font-lock-comment-face fontified t c-in-sws t) 735 736 (face whitespace-space fontified t c-in-sws t) 736 738 (face font-lock-comment-face fontified t c-in-sws t) 738 739 (face whitespace-space fontified t c-in-sws t) 739 744 (face font-lock-comment-face fontified t c-in-sws t) 744 745 (face whitespace-space fontified t c-in-sws t) 745 754 (face font-lock-comment-face fontified t c-in-sws t) 754 755 (face whitespace-space fontified t c-in-sws t) 755 757 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 757 758 (fontified t c-in-sws t) 758 759 (face font-lock-type-face fontified t c-is-sws t) 759 761 (face font-lock-type-face fontified t) 761 762 (face font-lock-type-face c-type c-decl-id-start fontified t) 762 763 (face whitespace-space fontified t) 763 778 (face font-lock-function-name-face fontified t) 778 779 (face whitespace-space fontified t) 779 780 (c-type c-decl-arg-start fontified t) 780 783 (face font-lock-type-face fontified t) 783 784 (face whitespace-space fontified t) 784 785 (fontified t) 785 790 (face font-lock-variable-name-face fontified t) 790 791 (c-type c-decl-arg-start fontified t) 791 792 (face whitespace-space fontified t) 792 795 (face font-lock-type-face fontified t) 795 796 (face whitespace-space fontified t) 796 797 (face font-lock-variable-name-face fontified t) 797 798 (c-type c-decl-arg-start fontified t) 798 799 (face whitespace-space fontified t) 799 802 (face font-lock-type-face fontified t) 802 803 (face whitespace-space fontified t) 803 804 (face font-lock-variable-name-face fontified t) 804 807 (fontified t) 807 808 (fontified t rear-nonsticky t)) . 86) (undo-tree-id59 . -807) (undo-tree-id60 . -807) (undo-tree-id61 . -807) (undo-tree-id62 . -471) (undo-tree-id63 . -471) (undo-tree-id64 . -471) (undo-tree-id65 . -472) (undo-tree-id66 . -472) (undo-tree-id67 . -471) (t 26460 22873 845611 910000)) nil (26460 23074 883566 780000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1967 . 1968) (nil fontified nil 1200 . 1968) (nil fontified nil 1199 . 1200) (nil fontified nil 1161 . 1199) (nil fontified nil 1160 . 1161) (1160 . 1968)) nil (26460 23074 883560 169000) 0 nil])
([nil nil ((#("x" 0 1 (face font-lock-function-name-face fontified t)) . 1209) (1210 . 1211) 1209 (#("a" 0 1 (face font-lock-function-name-face fontified t)) . 1208) (1209 . 1210) 1208 (#("m" 0 1 (face font-lock-function-name-face fontified t)) . 1207) (1208 . 1209) 1207) nil (26460 23074 883558 275000) 0 nil])
([nil nil ((1310 . 1311)) nil (26460 23074 883556 327000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-comment-face fontified t)) . 1310)) nil (26460 23074 883555 523000) 0 nil])
([nil nil ((1258 . 1260) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1258) (undo-tree-id57 . -1) (#("x" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1259) (undo-tree-id58 . -1) 1260) nil (26460 23074 883554 264000) 0 nil])
([nil nil ((1341 . 1343) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1341) (undo-tree-id52 . -1) (#("x" 0 1 (face font-lock-function-name-face fontified t)) . -1342) (undo-tree-id53 . -1) 1343 (1321 . 1323) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -1321) (undo-tree-id54 . -1) 1322 (1321 . 1322) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1321) (undo-tree-id55 . -1) (#("x" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -1322) (undo-tree-id56 . -1) 1323) nil (26460 23074 883550 640000) 0 nil])
([nil nil ((#("max" 0 3 (face font-lock-function-name-face fontified t)) . -1923) (1926 . 1929) (#("max" 0 3 (face font-lock-function-name-face fontified t)) . -1789) (1792 . 1795) (#("max" 0 3 (face font-lock-function-name-face fontified nil)) . -1712) (1715 . 1718) (#("max" 0 3 (face font-lock-function-name-face fontified t)) . -1695) (1698 . 1701) (#("max" 0 3 (face font-lock-comment-face fontified t c-in-sws t)) . -1660) (1663 . 1666) (#("max" 0 3 (face font-lock-function-name-face fontified nil)) . -1602) (1605 . 1608) (#("max" 0 3 (face font-lock-function-name-face fontified t)) . -1593) (1596 . 1599) (#("max" 0 3 (face font-lock-function-name-face fontified t)) . -1433) (1436 . 1439) (nil c-in-sws t 1408 . 1411) (nil fontified t 1408 . 1411) (nil face font-lock-comment-face 1408 . 1411) (#("max" 0 3 (face font-lock-comment-face fontified t c-in-sws t)) . -1408) (1411 . 1414)) nil (26460 23074 883533 817000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . 1745) (1746 . 1747) 1745 (#("I" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 1744) (t 26460 23074 891392 197000) (1745 . 1746) 1744 (t 26460 23074 891392 197000)) nil (26460 23215 435525 420000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-function-name-face fontified t)) . 1799) (1800 . 1801) 1799 (#("i" 0 1 (face font-lock-function-name-face fontified t)) . 1798) (1799 . 1800) 1798) nil (26460 23215 435519 613000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1158 . 1159) (#("
" 0 1 (fontified nil)) . -1231) (1158 . 1232) 1121 (t 26460 23215 444245 910000)) nil (26460 23504 594914 193000) 0 nil])
([nil nil ((#("void graph_prim (const graph * self);
" 0 1 (face font-lock-type-face fontified t c-is-sws t) 1 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (face whitespace-space fontified t) 5 15 (face font-lock-function-name-face fontified t) 15 16 (face whitespace-space fontified t) 16 17 (c-type c-decl-arg-start fontified t) 17 22 (face font-lock-keyword-face fontified t) 22 23 (face whitespace-space fontified t) 23 28 (face font-lock-type-face fontified t) 28 29 (face whitespace-space fontified t) 29 30 (fontified t) 30 31 (face whitespace-space fontified t) 31 35 (face font-lock-variable-name-face fontified t) 35 37 (fontified t) 37 38 (rear-nonsticky t fontified t)) . 1121) (undo-tree-id438 . -37) (undo-tree-id439 . -38) (undo-tree-id440 . -38) (undo-tree-id441 . -38) (undo-tree-id442 . -38) (undo-tree-id443 . -38) (undo-tree-id444 . -38) (undo-tree-id445 . -38) (undo-tree-id446 . -38) (undo-tree-id447 . -38) (undo-tree-id448 . -38) (undo-tree-id449 . -38) (undo-tree-id450 . -38) (undo-tree-id451 . -38) (undo-tree-id452 . -38) (undo-tree-id453 . -38) (undo-tree-id454 . -38) (undo-tree-id455 . -38) (undo-tree-id456 . -38) (undo-tree-id457 . -38) (undo-tree-id458 . -38) (undo-tree-id459 . -38) (undo-tree-id460 . -38) (undo-tree-id461 . -38) (undo-tree-id462 . -38) (undo-tree-id463 . -38) (undo-tree-id464 . -38) (undo-tree-id465 . -38) (undo-tree-id466 . -38) (undo-tree-id467 . -38) (undo-tree-id468 . -38) (undo-tree-id469 . -38) (undo-tree-id470 . -38) (undo-tree-id471 . -38) (undo-tree-id472 . -38) (undo-tree-id473 . -38) (undo-tree-id474 . -38) (undo-tree-id475 . -38) (undo-tree-id476 . -38) (undo-tree-id477 . -38) (undo-tree-id478 . -38) (undo-tree-id479 . -38) (undo-tree-id480 . -38) (undo-tree-id481 . -38) (undo-tree-id482 . -38) (undo-tree-id483 . -38) (undo-tree-id484 . -38) (undo-tree-id485 . -38) (undo-tree-id486 . -38) (undo-tree-id487 . -38) (undo-tree-id488 . -38) (undo-tree-id489 . -38) (undo-tree-id490 . -38) (undo-tree-id491 . -38) (undo-tree-id492 . -38) (undo-tree-id493 . -38) (undo-tree-id494 . -38) (undo-tree-id495 . -38) (undo-tree-id496 . -38) (undo-tree-id497 . -38) (undo-tree-id498 . -38) (undo-tree-id499 . -38) (undo-tree-id500 . -38) (undo-tree-id501 . -38) (undo-tree-id502 . -38) (undo-tree-id503 . -38) (undo-tree-id504 . -38) (undo-tree-id505 . -38) (undo-tree-id506 . -38) (undo-tree-id507 . -38)) nil (26460 23504 594910 900000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-space c-in-sws t fontified t)) . -1143) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("(" 0 1 (c-in-sws t face font-lock-comment-face fontified nil)) . -1144) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#(")" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 1145) (undo-tree-id432 . -1) (1144 . 1146) (#("(" 0 1 (face whitespace-space fontified nil)) . -1144) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (1144 . 1145) (1123 . 1144) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1123) (undo-tree-id435 . -1) (#(" " 0 1 (face whitespace-space fontified t)) . -1124) (undo-tree-id436 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1125) (undo-tree-id437 . -1) 1126 (1116 . 1126) (1193 . 1194)) nil (26460 23504 594854 285000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . 1991) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . 1991) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . 1991) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . 1991) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . 1991) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . 1991) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . 1991) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . 1991) (1986 . 1991) (t 26460 23504 640957 470000)) nil (26460 23595 987635 884000) 0 nil])
([nil nil ((2000 . 2010) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2000) (undo-tree-id508 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -2001) (undo-tree-id509 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -2002) (undo-tree-id510 . -1) 2003) nil (26460 23595 987630 640000) 0 nil])
([nil nil ((2012 . 2013) (#("*" 0 1 (fontified t)) . -2012) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) 2013 (2012 . 2013) (2043 . 2045) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -2043) (undo-tree-id649 . -1) (undo-tree-id650 . -1) 2044 (2039 . 2044) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2039) (undo-tree-id651 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2040) (undo-tree-id652 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -2041) (undo-tree-id653 . -1) 2042 (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2042) (undo-tree-id654 . -1) 2043 (2039 . 2043) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2039) (undo-tree-id655 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2040) (undo-tree-id656 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -2041) (undo-tree-id657 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2042) (undo-tree-id658 . -1) (undo-tree-id659 . -1) 2043 (2039 . 2043) (#("k" 0 1 (face font-lock-variable-name-face fontified t)) . 2039) (#(" " 0 1 (face whitespace-space fontified t)) . 2039) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . 2039) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . 2039) (#("i" 0 1 (face font-lock-type-face fontified t)) . 2039) (2038 . 2039) (#("*" 0 1 (fontified t)) . -2038) (undo-tree-id660 . -1) 2039 (2037 . 2039) (2026 . 2037) (t 26460 23596 35868 816000)) nil (26460 23624 649077 565000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . 2037) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (t 26460 23624 659841 236000)) nil (26460 23640 486162 533000) 0 nil])
([nil nil ((1906 . 1910) (#(" " 0 1 (face whitespace-space fontified t)) . 1906) (#("t" 0 1 (face font-lock-type-face fontified t)) . 1906) (#("n" 0 1 (face font-lock-type-face fontified t)) . 1906) (#("i" 0 1 (face font-lock-type-face fontified t)) . 1906) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (1884 . 1885) (1872 . 1882) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1872) (undo-tree-id695 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1873) (undo-tree-id696 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1874) (undo-tree-id697 . -1) 1875 (#("p" 0 1 (face font-lock-function-name-face fontified t)) . 1857) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . 1857) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . 1857) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . 1857) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . 1857) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . 1857) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . 1857) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . 1857) (1855 . 1857) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -1855) (undo-tree-id698 . -1) 1856 (1852 . 1856) (t 26460 23640 496826 12000)) nil (26460 23720 342920 574000) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-comment-face fontified t)) . 1936) (#(" " 0 1 (face whitespace-space fontified t)) . 1936) (#("y" 0 1 (face font-lock-comment-face fontified t)) . 1936) (#("e" 0 1 (face font-lock-comment-face fontified t)) . 1936) (#("k" 0 1 (face font-lock-comment-face fontified t)) . 1936) (1930 . 1936) (t 26460 23720 346748 937000)) nil (26460 23730 953595 626000) 0 nil])
([nil nil ((1836 . 1844) (#(" " 0 1 (face whitespace-space fontified t)) . -1836) (undo-tree-id699 . -1) 1837 (1835 . 1837) (t 26460 23731 1724 174000)) nil (26460 23745 605701 726000) 0 nil])
([nil nil ((1730 . 1734) (#("q" 0 1 (face font-lock-comment-face fontified t)) . -1730) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -1731) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -1732) (undo-tree-id810 . -1) (undo-tree-id811 . -1) 1733 (1722 . 1733) (t 26460 23745 654690 547000)) nil (26460 24344 987656 535000) 0 nil])
([nil nil ((1749 . 1751) (#("f" 0 1 (face font-lock-comment-face fontified t)) . 1749) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1749) (undo-tree-id703 . -1) 1750) nil (26460 24344 987544 179000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . 1775) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . 1775) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . 1775) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . 1775) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . 1775) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . 1775) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . 1775) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . 1775) (1770 . 1775) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1770) (undo-tree-id702 . -1) 1771 (1770 . 1771)) nil (26460 24344 987541 171000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 1803) (#(" " 0 1 (face whitespace-space fontified t)) . 1803) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . 1803) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . 1803) (#("i" 0 1 (face font-lock-type-face fontified t)) . 1803) (1802 . 1803) (1800 . 1802) (1797 . 1800) (1794 . 1797) (#("ç" 0 1 (face font-lock-type-face fontified t)) . -1794) (undo-tree-id700 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1795) (undo-tree-id701 . -1) 1796 (1789 . 1796)) nil (26460 24344 987535 158000) 0 nil])
([nil nil ((#("int" 0 1 (face font-lock-type-face fontified t c-is-sws t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1766) (undo-tree-id813 . -2) (undo-tree-id814 . -3) (t 26460 24345 36606 222000)) nil (26460 24353 89832 800000) 0 nil])
([nil nil ((1777 . 1778) (1776 . 1777) (1768 . 1776) (#("p" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1768) (undo-tree-id812 . -1) 1769 (1766 . 1769)) nil (26460 24353 89826 763000) 0 nil])
([nil nil ((1656 . 1661) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -1656) (undo-tree-id834 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -1657) (undo-tree-id835 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -1658) (undo-tree-id836 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -1659) (undo-tree-id837 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -1660) (undo-tree-id838 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1661) (undo-tree-id839 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1662) (undo-tree-id840 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -1663) (undo-tree-id841 . -1) 1664 (t 26460 24353 94594 237000)) nil (26460 24870 883586 334000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1663 . 1664) (nil fontified nil 1653 . 1664) (nil fontified nil 1652 . 1653) (1652 . 1664)) nil (26460 24870 883578 5000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face fontified t c-is-sws t)) . 1664)) nil (26460 24870 883577 111000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . 1664)) nil (26460 24870 883576 477000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . 1664)) nil (26460 24870 883575 914000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-space fontified t)) . 1692) (1691 . 1692) (1680 . 1691) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1680) (undo-tree-id831 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1681) (undo-tree-id832 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1682) (undo-tree-id833 . -1) 1683) nil (26460 24870 883574 545000) 0 nil])
([nil nil ((#("/*
 * Tell if the array is a heap.
 */
bool is_min_heap (int *array, int n);

" 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face whitespace-space fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face whitespace-space fontified t c-in-sws t) 6 10 (face font-lock-comment-face fontified t c-in-sws t) 10 11 (face whitespace-space fontified t c-in-sws t) 11 13 (face font-lock-comment-face fontified t c-in-sws t) 13 14 (face whitespace-space fontified t c-in-sws t) 14 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face whitespace-space fontified t c-in-sws t) 18 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face whitespace-space fontified t c-in-sws t) 24 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face whitespace-space fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face whitespace-space fontified t c-in-sws t) 29 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face whitespace-space fontified t c-in-sws t) 36 37 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 37 38 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 38 39 (fontified t c-is-sws t) 39 40 (face font-lock-type-face fontified t c-is-sws t) 40 42 (face font-lock-type-face fontified t) 42 43 (face font-lock-type-face c-type c-decl-id-start fontified t) 43 44 (face whitespace-space fontified t) 44 47 (face font-lock-function-name-face fontified t) 47 48 (face font-lock-function-name-face fontified t) 48 49 (face font-lock-function-name-face fontified t) 49 50 (face font-lock-function-name-face fontified t) 50 55 (face font-lock-function-name-face fontified t) 55 56 (face whitespace-space fontified t) 56 57 (c-type c-decl-arg-start fontified t) 57 60 (face font-lock-type-face fontified t) 60 61 (face whitespace-space fontified t) 61 62 (fontified t) 62 67 (face font-lock-variable-name-face fontified t) 67 68 (c-type c-decl-arg-start fontified t) 68 69 (face whitespace-space fontified t) 69 72 (face font-lock-type-face fontified t) 72 73 (face whitespace-space fontified t) 73 74 (face font-lock-variable-name-face fontified t) 74 76 (fontified t) 76 78 (fontified t)) . 1223) (undo-tree-id827 . -77) (undo-tree-id828 . -77) (undo-tree-id829 . -77) (undo-tree-id830 . -35)) nil (26460 24870 883571 296000) 0 nil])
([nil nil ((#("
/*
 * Convert array into a min heap.
 */
void build_min_heap (int *array, int n);

/*
 * Sort the array with heap sort.
 */
void heapsort (int *array, int n);

" 0 1 (fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face whitespace-space fontified t c-in-sws t) 5 6 (face font-lock-comment-face fontified t c-in-sws t) 6 7 (face whitespace-space fontified t c-in-sws t) 7 14 (face font-lock-comment-face fontified t c-in-sws t) 14 15 (face whitespace-space fontified t c-in-sws t) 15 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face whitespace-space fontified t c-in-sws t) 21 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face whitespace-space fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face whitespace-space fontified t c-in-sws t) 28 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face whitespace-space fontified t c-in-sws t) 32 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (face whitespace-space fontified t c-in-sws t) 39 40 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 40 41 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 41 42 (fontified t c-is-sws t) 42 43 (face font-lock-type-face fontified t c-is-sws t) 43 45 (face font-lock-type-face fontified t) 45 46 (face font-lock-type-face c-type c-decl-id-start fontified t) 46 47 (face whitespace-space fontified t) 47 53 (face font-lock-function-name-face fontified t) 53 56 (face font-lock-function-name-face fontified t) 56 61 (face font-lock-function-name-face fontified t) 61 62 (face whitespace-space fontified t) 62 63 (c-type c-decl-arg-start fontified t) 63 66 (face font-lock-type-face fontified t) 66 67 (face whitespace-space fontified t) 67 68 (fontified t) 68 73 (face font-lock-variable-name-face fontified t) 73 74 (c-type c-decl-arg-start fontified t) 74 75 (face whitespace-space fontified t) 75 78 (face font-lock-type-face fontified t) 78 79 (face whitespace-space fontified t) 79 80 (face font-lock-variable-name-face fontified t) 80 82 (fontified t) 82 84 (fontified t) 84 85 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 85 86 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 86 87 (face font-lock-comment-face fontified t c-in-sws t) 87 88 (face whitespace-space fontified t c-in-sws t) 88 89 (face font-lock-comment-face fontified t c-in-sws t) 89 90 (face whitespace-space fontified t c-in-sws t) 90 94 (face font-lock-comment-face fontified t c-in-sws t) 94 95 (face whitespace-space fontified t c-in-sws t) 95 98 (face font-lock-comment-face fontified t c-in-sws t) 98 99 (face whitespace-space fontified t c-in-sws t) 99 104 (face font-lock-comment-face fontified t c-in-sws t) 104 105 (face whitespace-space fontified t c-in-sws t) 105 109 (face font-lock-comment-face fontified t c-in-sws t) 109 110 (face whitespace-space fontified t c-in-sws t) 110 114 (face font-lock-comment-face fontified t c-in-sws t) 114 115 (face whitespace-space fontified t c-in-sws t) 115 121 (face font-lock-comment-face fontified t c-in-sws t) 121 122 (face whitespace-space fontified t c-in-sws t) 122 124 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 124 125 (fontified t c-in-sws t) 125 126 (face font-lock-type-face fontified t c-is-sws t) 126 128 (face font-lock-type-face fontified t) 128 129 (face font-lock-type-face c-type c-decl-id-start fontified t) 129 130 (face whitespace-space fontified t) 130 138 (face font-lock-function-name-face fontified t) 138 139 (face whitespace-space fontified t) 139 140 (c-type c-decl-arg-start fontified t) 140 143 (face font-lock-type-face fontified t) 143 144 (face whitespace-space fontified t) 144 145 (fontified t) 145 150 (face font-lock-variable-name-face fontified t) 150 151 (c-type c-decl-arg-start fontified t) 151 152 (face whitespace-space fontified t) 152 155 (face font-lock-type-face fontified t) 155 156 (face whitespace-space fontified t) 156 157 (face font-lock-variable-name-face fontified t) 157 161 (fontified t)) . 1365) (undo-tree-id822 . -160) (undo-tree-id823 . -160) (undo-tree-id824 . -160) (undo-tree-id825 . -1) (undo-tree-id826 . -160) 1525) nil (26460 24870 883567 881000) 0 nil])
([nil nil ((1365 . 1366)) nil (26460 24870 899040 628000) 0 nil])
([nil nil ((1352 . 1353) (#("**" 0 1 (fontified nil) 1 2 (fontified nil)) . 1352) (#(" " 0 1 (face whitespace-space fontified nil)) . 1353) (1340 . 1353) (#("int" 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil)) . 1340) (1325 . 1330) (#("min" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 3 (face font-lock-function-name-face fontified t)) . 1325) (undo-tree-id844 . -3) (undo-tree-id845 . -3) (undo-tree-id846 . -3) (undo-tree-id847 . -3) (undo-tree-id848 . -3) (undo-tree-id849 . -3) (undo-tree-id850 . -3) (undo-tree-id851 . -3) (undo-tree-id852 . -3) (undo-tree-id853 . -3) (undo-tree-id854 . -3) (undo-tree-id855 . -3) (undo-tree-id856 . -3) (undo-tree-id857 . -3) (undo-tree-id858 . -3) (undo-tree-id859 . -3) (undo-tree-id860 . -3) (undo-tree-id861 . -3) (undo-tree-id862 . -3) (undo-tree-id863 . -3) (undo-tree-id864 . -3) (undo-tree-id865 . -3) (undo-tree-id866 . -3) (undo-tree-id867 . -3) (undo-tree-id868 . -3) (undo-tree-id869 . -3) (undo-tree-id870 . -3) (undo-tree-id871 . -3) (undo-tree-id872 . -3) (undo-tree-id873 . -3) (undo-tree-id874 . -3) (undo-tree-id875 . -3) (undo-tree-id876 . -3) (undo-tree-id877 . -3) (undo-tree-id878 . -3) (undo-tree-id879 . -3)) ((1325 . 1328) (#("queue" 0 1 (face font-lock-function-name-face fontified nil) 1 2 (face font-lock-function-name-face fontified nil) 2 3 (face font-lock-function-name-face fontified nil) 3 4 (face font-lock-function-name-face fontified nil) 4 5 (face font-lock-function-name-face fontified nil)) . 1325) (1340 . 1343) (#("graph" 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face fontified nil)) . 1340) (undo-tree-id842 . -5) (#("_node " 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face fontified nil) 5 6 (face whitespace-space fontified nil)) . 1345) (undo-tree-id843 . -4) (#("**" 0 1 (fontified nil) 1 2 (fontified nil)) . 1351) (1353 . 1354) (1352 . 1354) (#("*" 0 1 (fontified t)) . 1352)) (26460 24871 102276 353000) 0 nil])
([nil nil ((1191 . 1868) (#(" weights, graph_node *source);

/*
 * Maintain the min heap property assuming the children of node i are
 * valid min heaps.
 */
void queue_heapify (graph_node **array, int n, int i);

/*
 * Get the value at the top of the heap.
 */
graph_node * queue_minimum (graph_node **array, int n);

/*
 * Remove and return the vertex with minimum value in the heap.
 */
graph_node * queue_extract_min (graph_node ** array, int n);

/*
 * Decrease the value of a key at index x to k.
 */
void queue_decrease_key (graph_node **array, int n, int x, int k);

/*
 * Insert a vertex in the heap (assuming array is large enough).
 */
void queue_insert (graph_node **array, int n, graph_node" 0 1 (face whitespace-space fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 7 (face font-lock-variable-name-face fontified t) 7 8 (face font-lock-variable-name-face fontified t) 8 9 (c-type c-decl-arg-start fontified t) 9 10 (face whitespace-space fontified t) 10 17 (face font-lock-type-face fontified t) 17 20 (face font-lock-type-face fontified t) 20 21 (face whitespace-space fontified t) 21 22 (fontified t) 22 28 (face font-lock-variable-name-face fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 33 34 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face whitespace-space fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face whitespace-space fontified t c-in-sws t) 38 46 (face font-lock-comment-face fontified t c-in-sws t) 46 47 (face whitespace-space fontified t c-in-sws t) 47 50 (face font-lock-comment-face fontified t c-in-sws t) 50 51 (face whitespace-space fontified t c-in-sws t) 51 52 (face font-lock-comment-face fontified t c-in-sws t) 52 53 (face font-lock-comment-face fontified t c-in-sws t) 53 54 (face font-lock-comment-face fontified t c-in-sws t) 54 55 (face whitespace-space fontified t c-in-sws t) 55 59 (face font-lock-comment-face fontified t c-in-sws t) 59 60 (face whitespace-space fontified t c-in-sws t) 60 68 (face font-lock-comment-face fontified t c-in-sws t) 68 69 (face whitespace-space fontified t c-in-sws t) 69 77 (face font-lock-comment-face fontified t c-in-sws t) 77 78 (face whitespace-space fontified t c-in-sws t) 78 81 (face font-lock-comment-face fontified t c-in-sws t) 81 82 (face whitespace-space fontified t c-in-sws t) 82 90 (face font-lock-comment-face fontified t c-in-sws t) 90 91 (face whitespace-space fontified t c-in-sws t) 91 93 (face font-lock-comment-face fontified t c-in-sws t) 93 94 (face whitespace-space fontified t c-in-sws t) 94 98 (face font-lock-comment-face fontified t c-in-sws t) 98 99 (face whitespace-space fontified t c-in-sws t) 99 100 (face font-lock-comment-face fontified t c-in-sws t) 100 101 (face whitespace-space fontified t c-in-sws t) 101 104 (face font-lock-comment-face fontified t c-in-sws t) 104 105 (face font-lock-comment-face fontified t c-in-sws t) 105 106 (face whitespace-space fontified t c-in-sws t) 106 107 (face font-lock-comment-face fontified t c-in-sws t) 107 108 (face whitespace-space fontified t c-in-sws t) 108 113 (face font-lock-comment-face fontified t c-in-sws t) 113 114 (face whitespace-space fontified t c-in-sws t) 114 115 (face font-lock-comment-face fontified t c-in-sws t) 115 116 (face font-lock-comment-face fontified t c-in-sws t) 116 117 (face font-lock-comment-face fontified t c-in-sws t) 117 118 (face whitespace-space fontified t c-in-sws t) 118 125 (face font-lock-comment-face fontified t c-in-sws t) 125 126 (face whitespace-space fontified t c-in-sws t) 126 127 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 127 128 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 128 129 (fontified t c-is-sws t) 129 130 (face font-lock-type-face fontified t c-is-sws t) 130 132 (face font-lock-type-face fontified t) 132 133 (face font-lock-type-face c-type c-decl-id-start fontified t) 133 134 (face whitespace-space fontified t) 134 135 (face font-lock-function-name-face fontified t) 135 136 (face font-lock-function-name-face fontified t) 136 137 (face font-lock-function-name-face fontified t) 137 138 (face font-lock-function-name-face fontified t) 138 139 (face font-lock-function-name-face fontified t) 139 147 (face font-lock-function-name-face fontified t) 147 148 (face whitespace-space fontified t) 148 149 (fontified t) 149 150 (face font-lock-type-face fontified t) 150 151 (face font-lock-type-face fontified t) 151 152 (face font-lock-type-face fontified t) 152 153 (face font-lock-type-face fontified t) 153 154 (face font-lock-type-face fontified t) 154 155 (face font-lock-type-face fontified t) 155 156 (face font-lock-type-face fontified t) 156 157 (face font-lock-type-face fontified t) 157 158 (face font-lock-type-face fontified t) 158 159 (face font-lock-type-face fontified t) 159 160 (face whitespace-space fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 167 (face font-lock-variable-name-face fontified t) 167 168 (fontified t) 168 169 (face whitespace-space fontified t) 169 172 (face font-lock-type-face fontified t) 172 173 (face whitespace-space fontified t) 173 174 (face font-lock-variable-name-face fontified t) 174 175 (c-type c-decl-arg-start fontified t) 175 176 (face whitespace-space fontified t) 176 179 (face font-lock-type-face fontified t) 179 180 (face whitespace-space fontified t) 180 181 (face font-lock-variable-name-face fontified t) 181 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 186 187 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 187 188 (face font-lock-comment-face fontified t c-in-sws t) 188 189 (face whitespace-space fontified t c-in-sws t) 189 190 (face font-lock-comment-face fontified t c-in-sws t) 190 191 (face whitespace-space fontified t c-in-sws t) 191 194 (face font-lock-comment-face fontified t c-in-sws t) 194 195 (face whitespace-space fontified t c-in-sws t) 195 198 (face font-lock-comment-face fontified t c-in-sws t) 198 199 (face whitespace-space fontified t c-in-sws t) 199 204 (face font-lock-comment-face fontified t c-in-sws t) 204 205 (face whitespace-space fontified t c-in-sws t) 205 207 (face font-lock-comment-face fontified t c-in-sws t) 207 208 (face whitespace-space fontified t c-in-sws t) 208 211 (face font-lock-comment-face fontified t c-in-sws t) 211 212 (face whitespace-space fontified t c-in-sws t) 212 215 (face font-lock-comment-face fontified t c-in-sws t) 215 216 (face whitespace-space fontified t c-in-sws t) 216 218 (face font-lock-comment-face fontified t c-in-sws t) 218 219 (face whitespace-space fontified t c-in-sws t) 219 222 (face font-lock-comment-face fontified t c-in-sws t) 222 223 (face whitespace-space fontified t c-in-sws t) 223 229 (face font-lock-comment-face fontified t c-in-sws t) 229 230 (face whitespace-space fontified t c-in-sws t) 230 232 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 232 233 (c-in-sws t fontified t) 233 234 (face font-lock-type-face fontified t c-is-sws t) 234 242 (face font-lock-type-face fontified t) 242 243 (face font-lock-type-face c-type c-decl-id-start fontified t) 243 244 (face whitespace-space fontified t) 244 245 (fontified t rear-nonsticky t) 245 246 (face whitespace-space fontified t) 246 247 (face font-lock-function-name-face fontified t) 247 248 (face font-lock-function-name-face fontified t) 248 249 (face font-lock-function-name-face fontified t) 249 250 (face font-lock-function-name-face fontified t) 250 251 (face font-lock-function-name-face fontified t) 251 252 (face font-lock-function-name-face fontified t) 252 255 (face font-lock-function-name-face fontified t) 255 259 (face font-lock-function-name-face fontified t) 259 260 (face whitespace-space fontified t) 260 261 (c-type c-decl-arg-start fontified t) 261 262 (face font-lock-type-face fontified t) 262 263 (face font-lock-type-face fontified t) 263 264 (face font-lock-type-face fontified t) 264 265 (face font-lock-type-face fontified t) 265 266 (face font-lock-type-face fontified t) 266 267 (face font-lock-type-face fontified t) 267 268 (face font-lock-type-face fontified t) 268 269 (face font-lock-type-face fontified t) 269 270 (face font-lock-type-face fontified t) 270 271 (face font-lock-type-face fontified t) 271 272 (face whitespace-space fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 279 (face font-lock-variable-name-face fontified t) 279 280 (c-type c-decl-arg-start fontified t) 280 281 (face whitespace-space fontified t) 281 284 (face font-lock-type-face fontified t) 284 285 (face whitespace-space fontified t) 285 286 (face font-lock-variable-name-face fontified t) 286 287 (fontified t) 287 288 (fontified t) 288 289 (fontified t) 289 290 (fontified t) 290 291 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 291 292 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 292 293 (face font-lock-comment-face fontified t c-in-sws t) 293 294 (face whitespace-space fontified t c-in-sws t) 294 295 (face font-lock-comment-face fontified t c-in-sws t) 295 296 (face whitespace-space fontified t c-in-sws t) 296 302 (face font-lock-comment-face fontified t c-in-sws t) 302 303 (face whitespace-space fontified t c-in-sws t) 303 306 (face font-lock-comment-face fontified t c-in-sws t) 306 307 (face whitespace-space fontified t c-in-sws t) 307 313 (face font-lock-comment-face fontified t c-in-sws t) 313 314 (face whitespace-space fontified t c-in-sws t) 314 317 (face font-lock-comment-face fontified t c-in-sws t) 317 318 (face whitespace-space fontified t c-in-sws t) 318 319 (face font-lock-comment-face fontified t c-in-sws t) 319 320 (face font-lock-comment-face fontified t c-in-sws t) 320 321 (face font-lock-comment-face fontified t c-in-sws t) 321 322 (face font-lock-comment-face fontified t c-in-sws t) 322 323 (face font-lock-comment-face fontified t c-in-sws t) 323 324 (face font-lock-comment-face fontified t c-in-sws t) 324 325 (face whitespace-space fontified t c-in-sws t) 325 326 (face font-lock-comment-face fontified t c-in-sws t) 326 327 (face font-lock-comment-face fontified t c-in-sws t) 327 328 (face font-lock-comment-face fontified t c-in-sws t) 328 329 (face font-lock-comment-face fontified t c-in-sws t) 329 330 (face whitespace-space fontified t c-in-sws t) 330 333 (face font-lock-comment-face fontified t c-in-sws t) 333 337 (face font-lock-comment-face fontified t c-in-sws t) 337 338 (face whitespace-space fontified t c-in-sws t) 338 343 (face font-lock-comment-face fontified t c-in-sws t) 343 344 (face whitespace-space fontified t c-in-sws t) 344 345 (face font-lock-comment-face fontified t c-in-sws t) 345 346 (face font-lock-comment-face fontified t c-in-sws t) 346 347 (face whitespace-space fontified t c-in-sws t) 347 350 (face font-lock-comment-face fontified t c-in-sws t) 350 351 (face whitespace-space fontified t c-in-sws t) 351 357 (face font-lock-comment-face fontified t c-in-sws t) 357 358 (face whitespace-space fontified t c-in-sws t) 358 359 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 359 360 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 360 361 (fontified t c-is-sws t) 361 362 (face font-lock-type-face fontified t c-is-sws t) 362 363 (face font-lock-type-face fontified t) 363 364 (face font-lock-type-face fontified t) 364 365 (face font-lock-type-face fontified t) 365 366 (face font-lock-type-face fontified t) 366 367 (face font-lock-type-face fontified t) 367 368 (face font-lock-type-face fontified t) 368 369 (face font-lock-type-face fontified t) 369 370 (face font-lock-type-face fontified t) 370 371 (face font-lock-type-face c-type c-decl-id-start fontified t) 371 372 (face whitespace-space fontified t) 372 373 (fontified t) 373 374 (face whitespace-space fontified t c-is-sws t) 374 375 (face font-lock-function-name-face fontified t c-is-sws t) 375 376 (face font-lock-function-name-face fontified t) 376 377 (face font-lock-function-name-face fontified t) 377 378 (face font-lock-function-name-face fontified t) 378 379 (face font-lock-function-name-face fontified t) 379 388 (face font-lock-function-name-face fontified t) 388 391 (face font-lock-function-name-face fontified t) 391 392 (face whitespace-space fontified t) 392 393 (c-type c-decl-arg-start fontified t) 393 394 (face font-lock-type-face fontified t) 394 395 (face font-lock-type-face fontified t) 395 396 (face font-lock-type-face fontified t) 396 397 (face font-lock-type-face fontified t) 397 398 (face font-lock-type-face fontified t) 398 399 (face font-lock-type-face fontified t) 399 400 (face font-lock-type-face fontified t) 400 401 (face font-lock-type-face fontified t) 401 403 (face font-lock-type-face fontified t) 403 404 (face whitespace-space fontified t) 404 405 (fontified t) 405 406 (fontified t) 406 407 (face whitespace-space fontified t) 407 412 (face font-lock-variable-name-face fontified t) 412 413 (c-type c-decl-arg-start fontified t) 413 414 (face whitespace-space fontified t) 414 417 (face font-lock-type-face fontified t) 417 418 (face whitespace-space fontified t) 418 419 (face font-lock-variable-name-face fontified t) 419 421 (fontified t) 421 422 (fontified t) 422 423 (fontified t) 423 424 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 424 425 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 425 426 (face font-lock-comment-face fontified t c-in-sws t) 426 427 (face whitespace-space fontified t c-in-sws t) 427 428 (face font-lock-comment-face fontified t c-in-sws t) 428 429 (face whitespace-space fontified t c-in-sws t) 429 430 (face font-lock-comment-face fontified t c-in-sws t) 430 431 (face font-lock-comment-face fontified t c-in-sws t) 431 437 (face font-lock-comment-face fontified t c-in-sws t) 437 438 (face whitespace-space fontified t c-in-sws t) 438 441 (face font-lock-comment-face fontified t c-in-sws t) 441 442 (face whitespace-space fontified t c-in-sws t) 442 447 (face font-lock-comment-face fontified t c-in-sws t) 447 448 (face whitespace-space fontified t c-in-sws t) 448 450 (face font-lock-comment-face fontified t c-in-sws t) 450 451 (face whitespace-space fontified t c-in-sws t) 451 452 (face font-lock-comment-face fontified t c-in-sws t) 452 453 (face whitespace-space fontified t c-in-sws t) 453 456 (face font-lock-comment-face fontified t c-in-sws t) 456 457 (face whitespace-space fontified t c-in-sws t) 457 458 (face font-lock-comment-face fontified t c-in-sws t) 458 459 (face font-lock-comment-face fontified t c-in-sws t) 459 460 (face whitespace-space fontified t c-in-sws t) 460 461 (face font-lock-comment-face fontified t c-in-sws t) 461 462 (face font-lock-comment-face fontified t c-in-sws t) 462 463 (face font-lock-comment-face fontified t c-in-sws t) 463 464 (face font-lock-comment-face fontified t c-in-sws t) 464 465 (face font-lock-comment-face fontified t c-in-sws t) 465 466 (face whitespace-space fontified t c-in-sws t) 466 467 (face font-lock-comment-face fontified t c-in-sws t) 467 468 (face whitespace-space fontified t c-in-sws t) 468 470 (face font-lock-comment-face fontified t c-in-sws t) 470 471 (face whitespace-space fontified t c-in-sws t) 471 474 (face font-lock-comment-face fontified t c-in-sws t) 474 475 (face whitespace-space fontified t c-in-sws t) 475 476 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 476 477 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 477 478 (fontified t c-is-sws t) 478 479 (face font-lock-type-face fontified t c-is-sws t) 479 481 (face font-lock-type-face fontified t) 481 482 (face font-lock-type-face c-type c-decl-id-start fontified t) 482 483 (face whitespace-space fontified t) 483 484 (face font-lock-function-name-face fontified t) 484 485 (face font-lock-function-name-face fontified t) 485 486 (face font-lock-function-name-face fontified t) 486 487 (face font-lock-function-name-face fontified t) 487 488 (face font-lock-function-name-face fontified t) 488 489 (face font-lock-function-name-face fontified t) 489 490 (face font-lock-function-name-face fontified t) 490 491 (face font-lock-function-name-face fontified t) 491 501 (face font-lock-function-name-face fontified t) 501 502 (face whitespace-space fontified t) 502 503 (fontified t) 503 504 (face font-lock-type-face fontified t) 504 505 (face font-lock-type-face fontified t) 505 506 (face font-lock-type-face fontified t) 506 507 (face font-lock-type-face fontified t) 507 508 (face font-lock-type-face fontified t) 508 509 (face font-lock-type-face fontified t) 509 510 (face font-lock-type-face fontified t) 510 511 (face font-lock-type-face fontified t) 511 512 (face font-lock-type-face fontified t) 512 513 (face font-lock-type-face fontified t) 513 514 (face whitespace-space fontified t) 514 515 (fontified t) 515 516 (fontified t) 516 521 (face font-lock-variable-name-face fontified t) 521 522 (fontified t) 522 523 (face whitespace-space fontified t) 523 526 (face font-lock-type-face fontified t) 526 527 (face whitespace-space fontified t) 527 528 (face font-lock-variable-name-face fontified t) 528 529 (c-type c-decl-arg-start fontified t) 529 530 (face whitespace-space fontified t) 530 533 (face font-lock-type-face fontified t) 533 534 (face whitespace-space fontified t) 534 535 (face font-lock-variable-name-face fontified t) 535 536 (c-type c-decl-arg-start fontified t) 536 537 (face whitespace-space fontified t) 537 538 (face font-lock-type-face fontified t) 538 539 (face font-lock-type-face fontified t) 539 540 (face font-lock-type-face fontified t) 540 541 (face whitespace-space fontified t) 541 542 (face font-lock-variable-name-face fontified t) 542 544 (fontified t) 544 545 (fontified t) 545 546 (fontified t) 546 547 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 547 548 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 548 549 (face font-lock-comment-face fontified t c-in-sws t) 549 550 (face whitespace-space fontified t c-in-sws t) 550 551 (face font-lock-comment-face fontified t c-in-sws t) 551 552 (face whitespace-space fontified t c-in-sws t) 552 558 (face font-lock-comment-face fontified t c-in-sws t) 558 559 (face whitespace-space fontified t c-in-sws t) 559 560 (face font-lock-comment-face fontified t c-in-sws t) 560 561 (face whitespace-space fontified t c-in-sws t) 561 562 (face font-lock-comment-face fontified t c-in-sws t) 562 563 (face font-lock-comment-face fontified t c-in-sws t) 563 564 (face font-lock-comment-face fontified t c-in-sws t) 564 565 (face font-lock-comment-face fontified t c-in-sws t) 565 566 (face font-lock-comment-face fontified t c-in-sws t) 566 567 (face font-lock-comment-face fontified t c-in-sws t) 567 568 (face whitespace-space fontified t c-in-sws t) 568 570 (face font-lock-comment-face fontified t c-in-sws t) 570 571 (face whitespace-space fontified t c-in-sws t) 571 574 (face font-lock-comment-face fontified t c-in-sws t) 574 575 (face whitespace-space fontified t c-in-sws t) 575 579 (face font-lock-comment-face fontified t c-in-sws t) 579 580 (face whitespace-space fontified t c-in-sws t) 580 589 (face font-lock-comment-face fontified t c-in-sws t) 589 590 (face whitespace-space fontified t c-in-sws t) 590 595 (face font-lock-comment-face fontified t c-in-sws t) 595 596 (face whitespace-space fontified t c-in-sws t) 596 598 (face font-lock-comment-face fontified t c-in-sws t) 598 599 (face whitespace-space fontified t c-in-sws t) 599 604 (face font-lock-comment-face fontified t c-in-sws t) 604 605 (face whitespace-space fontified t c-in-sws t) 605 614 (face font-lock-comment-face fontified t c-in-sws t) 614 615 (face whitespace-space fontified t c-in-sws t) 615 616 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 616 617 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 617 618 (fontified t c-is-sws t) 618 619 (face font-lock-type-face fontified t c-is-sws t) 619 621 (face font-lock-type-face fontified t) 621 622 (face font-lock-type-face c-type c-decl-id-start fontified t) 622 623 (face whitespace-space fontified t) 623 624 (face font-lock-function-name-face fontified t) 624 625 (face font-lock-function-name-face fontified t) 625 626 (face font-lock-function-name-face fontified t) 626 627 (face font-lock-function-name-face fontified t) 627 628 (face font-lock-function-name-face fontified t) 628 635 (face font-lock-function-name-face fontified t) 635 636 (face whitespace-space fontified t) 636 637 (c-type c-decl-arg-start fontified t) 637 638 (face font-lock-type-face fontified t) 638 639 (face font-lock-type-face fontified t) 639 641 (face font-lock-type-face fontified t) 641 642 (face font-lock-type-face fontified t) 642 643 (face font-lock-type-face fontified t) 643 644 (face font-lock-type-face fontified t) 644 645 (face font-lock-type-face fontified t) 645 646 (face font-lock-type-face fontified t) 646 647 (face font-lock-type-face fontified t) 647 648 (face whitespace-space fontified t) 648 649 (fontified t) 649 650 (fontified t) 650 655 (face font-lock-variable-name-face fontified t) 655 656 (c-type c-decl-arg-start fontified t) 656 657 (face whitespace-space fontified t) 657 660 (face font-lock-type-face fontified t) 660 661 (face whitespace-space fontified t) 661 662 (face font-lock-variable-name-face fontified t) 662 663 (c-type c-decl-arg-start fontified t) 663 664 (face whitespace-space fontified t) 664 665 (face font-lock-type-face fontified t) 665 666 (face font-lock-type-face fontified t) 666 667 (face font-lock-type-face fontified t) 667 668 (face font-lock-type-face fontified t) 668 669 (face font-lock-type-face fontified t) 669 670 (face font-lock-type-face fontified t) 670 671 (face font-lock-type-face fontified t) 671 672 (face font-lock-type-face fontified t) 672 673 (face font-lock-type-face fontified t) 673 674 (face font-lock-type-face fontified t)) . 1191) (undo-tree-id1195 . -32) (undo-tree-id1196 . -161) (undo-tree-id1197 . -184) (undo-tree-id1198 . 489) (undo-tree-id1199 . -184) (undo-tree-id1200 . -184) (undo-tree-id1201 . -161) (undo-tree-id1202 . -32) (undo-tree-id1203 . 500) (undo-tree-id1204 . -32) (undo-tree-id1205 . -372) (undo-tree-id1206 . -184) (undo-tree-id1207 . -184) (undo-tree-id1208 . -184) (undo-tree-id1209 . -175) (undo-tree-id1210 . -161) (undo-tree-id1211 . -161) (undo-tree-id1212 . -161) (undo-tree-id1213 . -161) (undo-tree-id1214 . -161) (undo-tree-id1215 . -175) (undo-tree-id1216 . -161) (undo-tree-id1217 . -161) (undo-tree-id1218 . -161) (undo-tree-id1219 . -161) (t 26460 24871 965891 50000)) nil (26460 25132 542004 546000) 0 nil])
([nil nil ((#("/*
 * Run Prim's algorithm to set parent given weights on the edges
 */
void graph_prim (const graph * self, int **weights, graph_node * source);

" 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face whitespace-space fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face whitespace-space fontified t c-in-sws t) 6 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face whitespace-space fontified t c-in-sws t) 10 14 (face font-lock-comment-face fontified t c-in-sws t) 14 15 (face font-lock-comment-face fontified t c-in-sws t) 15 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face whitespace-space fontified t c-in-sws t) 17 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face whitespace-space fontified t c-in-sws t) 27 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face whitespace-space fontified t c-in-sws t) 30 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face whitespace-space fontified t c-in-sws t) 34 40 (face font-lock-comment-face fontified t c-in-sws t) 40 41 (face whitespace-space c-in-sws t fontified t) 41 42 (face font-lock-comment-face c-in-sws t fontified t) 42 43 (face font-lock-comment-face c-in-sws t fontified t) 43 44 (face font-lock-comment-face c-in-sws t fontified t) 44 45 (face font-lock-comment-face c-in-sws t fontified t) 45 46 (face font-lock-comment-face c-in-sws t fontified t) 46 47 (face whitespace-space c-in-sws t fontified t) 47 48 (face font-lock-comment-face c-in-sws t fontified t) 48 49 (face font-lock-comment-face c-in-sws t fontified t) 49 50 (face font-lock-comment-face c-in-sws t fontified t) 50 51 (face font-lock-comment-face c-in-sws t fontified t) 51 52 (face font-lock-comment-face c-in-sws t fontified t) 52 53 (face font-lock-comment-face c-in-sws t fontified t) 53 54 (face font-lock-comment-face c-in-sws t fontified t) 54 55 (face whitespace-space c-in-sws t fontified t) 55 56 (face font-lock-comment-face c-in-sws t fontified t) 56 57 (face font-lock-comment-face c-in-sws t fontified t) 57 58 (face whitespace-space c-in-sws t fontified t) 58 59 (face font-lock-comment-face c-in-sws t fontified t) 59 60 (face font-lock-comment-face c-in-sws t fontified t) 60 61 (face font-lock-comment-face c-in-sws t fontified t) 61 62 (face whitespace-space c-in-sws t fontified t) 62 63 (face font-lock-comment-face c-in-sws t fontified t) 63 64 (face font-lock-comment-face c-in-sws t fontified t) 64 65 (face font-lock-comment-face c-in-sws t fontified t) 65 66 (face font-lock-comment-face c-in-sws t fontified t) 66 67 (face font-lock-comment-face c-in-sws t fontified t) 67 68 (c-in-sws t face font-lock-comment-face fontified t) 68 69 (c-in-sws t face whitespace-space fontified t) 69 70 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 70 71 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 71 72 (fontified t c-is-sws t) 72 73 (face font-lock-type-face fontified t c-is-sws t) 73 75 (face font-lock-type-face fontified t) 75 76 (face font-lock-type-face c-type c-decl-id-start fontified t) 76 77 (face whitespace-space fontified t) 77 83 (face font-lock-function-name-face fontified t) 83 87 (face font-lock-function-name-face fontified t) 87 88 (face whitespace-space fontified t) 88 89 (c-type c-decl-arg-start fontified t) 89 94 (face font-lock-keyword-face fontified t) 94 95 (face whitespace-space fontified t) 95 100 (face font-lock-type-face fontified t) 100 101 (face whitespace-space fontified t) 101 102 (fontified t) 102 103 (face whitespace-space fontified t) 103 107 (face font-lock-variable-name-face fontified t) 107 108 (c-type c-decl-arg-start fontified t) 108 109 (face whitespace-space fontified t) 109 110 (face font-lock-type-face fontified t) 110 111 (face font-lock-type-face fontified t) 111 112 (face font-lock-type-face fontified t) 112 113 (face whitespace-space fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 122 (face font-lock-variable-name-face fontified t) 122 123 (c-type c-decl-arg-start fontified t) 123 124 (face whitespace-space fontified t) 124 134 (face font-lock-type-face fontified t) 134 135 (face whitespace-space fontified t) 135 136 (fontified t) 136 137 (face whitespace-space fontified t) 137 143 (face font-lock-variable-name-face fontified t) 143 147 (fontified t)) . 1076) (undo-tree-id880 . -115) (undo-tree-id881 . -146) (undo-tree-id882 . -146) (undo-tree-id883 . -146) (undo-tree-id884 . -115) (undo-tree-id885 . -115) (undo-tree-id886 . -115) (undo-tree-id887 . -115) (undo-tree-id888 . -115) (undo-tree-id889 . -115) (undo-tree-id890 . -115) (undo-tree-id891 . -115) (undo-tree-id892 . -115) (undo-tree-id893 . -115) (undo-tree-id894 . -115) (undo-tree-id895 . -115) (undo-tree-id896 . -115) (undo-tree-id897 . -115) (undo-tree-id898 . -115) (undo-tree-id899 . -115) (undo-tree-id900 . -146) (undo-tree-id901 . -147) (undo-tree-id902 . -147) (undo-tree-id903 . -147) (undo-tree-id904 . -147) (undo-tree-id905 . -147) (undo-tree-id906 . -147) (undo-tree-id907 . -147) (undo-tree-id908 . -147) (undo-tree-id909 . -147) (undo-tree-id910 . -147) (undo-tree-id911 . -147) (undo-tree-id912 . -147) (undo-tree-id913 . -147) (undo-tree-id914 . -147) (undo-tree-id915 . -147) (undo-tree-id916 . -147) (undo-tree-id917 . -147) (undo-tree-id918 . -147) (undo-tree-id919 . -147) (undo-tree-id920 . -147) (undo-tree-id921 . -147) (undo-tree-id922 . -147) (undo-tree-id923 . -147) (undo-tree-id924 . -147) (undo-tree-id925 . -147) (undo-tree-id926 . -147) (undo-tree-id927 . -147) (undo-tree-id928 . -147) (undo-tree-id929 . -147) (undo-tree-id930 . -147) (undo-tree-id931 . -147) (undo-tree-id932 . -146) (undo-tree-id933 . -146) (undo-tree-id934 . -146) (undo-tree-id935 . -146) (undo-tree-id936 . -146) (undo-tree-id937 . -146) (undo-tree-id938 . -146) (undo-tree-id939 . -146) (undo-tree-id940 . -146) (undo-tree-id941 . -146) (undo-tree-id942 . -146) (undo-tree-id943 . -146) (undo-tree-id944 . -146) (undo-tree-id945 . -146) (undo-tree-id946 . -146) (undo-tree-id947 . -146) (undo-tree-id948 . -146) (undo-tree-id949 . -146) (undo-tree-id950 . -146) (undo-tree-id951 . -146) (undo-tree-id952 . -146) (undo-tree-id953 . -146) (undo-tree-id954 . -146) (undo-tree-id955 . -146) (undo-tree-id956 . -146) (undo-tree-id957 . -146) (undo-tree-id958 . -146) (undo-tree-id959 . -146) (undo-tree-id960 . -146) (undo-tree-id961 . -146) (undo-tree-id962 . -146) (undo-tree-id963 . -72) (undo-tree-id964 . -72) (undo-tree-id965 . -72) (undo-tree-id966 . -72) (undo-tree-id967 . -72) (undo-tree-id968 . -72) (undo-tree-id969 . -72) (undo-tree-id970 . -72) (undo-tree-id971 . -72) (undo-tree-id972 . -72) (undo-tree-id973 . -72) (undo-tree-id974 . -72) (undo-tree-id975 . -72) (undo-tree-id976 . -72) (undo-tree-id977 . -72) (undo-tree-id978 . -72) (undo-tree-id979 . -72) (undo-tree-id980 . -72) (undo-tree-id981 . -72) (undo-tree-id982 . -72) (undo-tree-id983 . -72) (undo-tree-id984 . -72) (undo-tree-id985 . -72) (undo-tree-id986 . -72) (undo-tree-id987 . -72) (undo-tree-id988 . -72) (undo-tree-id989 . -72) (undo-tree-id990 . -72) (undo-tree-id991 . -72) (undo-tree-id992 . -72) (undo-tree-id993 . -72) (undo-tree-id994 . -68) (undo-tree-id995 . -68) (undo-tree-id996 . -68) (undo-tree-id997 . -68) (undo-tree-id998 . -68) (undo-tree-id999 . -68) (undo-tree-id1000 . -68) (undo-tree-id1001 . -68) (undo-tree-id1002 . -68) (undo-tree-id1003 . -68) (undo-tree-id1004 . -68) (undo-tree-id1005 . -68) (undo-tree-id1006 . -68) (undo-tree-id1007 . -68) (undo-tree-id1008 . -68) (undo-tree-id1009 . -68) (undo-tree-id1010 . -68) (undo-tree-id1011 . -68) (undo-tree-id1012 . -68) (undo-tree-id1013 . -68) (undo-tree-id1014 . -68) (undo-tree-id1015 . -68) (undo-tree-id1016 . -68) (undo-tree-id1017 . -68) (undo-tree-id1018 . -68) (undo-tree-id1019 . -68) (undo-tree-id1020 . -68) (undo-tree-id1021 . -68) (undo-tree-id1022 . -68) (undo-tree-id1023 . -68) (undo-tree-id1024 . -68) (undo-tree-id1025 . -3) (undo-tree-id1026 . -3) (undo-tree-id1027 . -3) (undo-tree-id1028 . -3) (undo-tree-id1029 . -3) (undo-tree-id1030 . -3) (undo-tree-id1031 . -3) (undo-tree-id1032 . -3) (undo-tree-id1033 . -3) (undo-tree-id1034 . -3) (undo-tree-id1035 . -3) (undo-tree-id1036 . -3) (undo-tree-id1037 . -3) (undo-tree-id1038 . -3) (undo-tree-id1039 . -3) (undo-tree-id1040 . -3) (undo-tree-id1041 . -3) (undo-tree-id1042 . -3) (undo-tree-id1043 . -3) (undo-tree-id1044 . -3) (undo-tree-id1045 . -3) (undo-tree-id1046 . -3) (undo-tree-id1047 . -3) (undo-tree-id1048 . -3) (undo-tree-id1049 . -3) (undo-tree-id1050 . -3) (undo-tree-id1051 . -3) (undo-tree-id1052 . -3) (undo-tree-id1053 . -3) (undo-tree-id1054 . -3) (undo-tree-id1055 . -3) (undo-tree-id1056 . -3) (undo-tree-id1057 . -3) (undo-tree-id1058 . -3) (undo-tree-id1059 . -3) (undo-tree-id1060 . -3) (undo-tree-id1061 . -3) (undo-tree-id1062 . -3) (undo-tree-id1063 . -3) (undo-tree-id1064 . -3) (undo-tree-id1065 . -3) (undo-tree-id1066 . -3) (undo-tree-id1067 . -3) (undo-tree-id1068 . -3) (undo-tree-id1069 . -3) (undo-tree-id1070 . -3) (undo-tree-id1071 . -3) (undo-tree-id1072 . -3) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3) (undo-tree-id1077 . -3) (undo-tree-id1078 . -3) (undo-tree-id1079 . -3) (undo-tree-id1080 . -3) (undo-tree-id1081 . -3) (undo-tree-id1082 . -3) (undo-tree-id1083 . -3) (undo-tree-id1084 . -3) (undo-tree-id1085 . -3) (undo-tree-id1086 . -3) (undo-tree-id1087 . -3) (undo-tree-id1088 . -3) (undo-tree-id1089 . -3) (undo-tree-id1090 . -68) (undo-tree-id1091 . -68) (undo-tree-id1092 . -68) (undo-tree-id1093 . -68) (undo-tree-id1094 . -68) (undo-tree-id1095 . -68) (undo-tree-id1096 . -68) (undo-tree-id1097 . -68) (undo-tree-id1098 . -68) (undo-tree-id1099 . -68) (undo-tree-id1100 . -68) (undo-tree-id1101 . -68) (undo-tree-id1102 . -68) (undo-tree-id1103 . -68) (undo-tree-id1104 . -68) (undo-tree-id1105 . -68) (undo-tree-id1106 . -68) (undo-tree-id1107 . -68) (undo-tree-id1108 . -68) (undo-tree-id1109 . -68) (undo-tree-id1110 . -68) (undo-tree-id1111 . -68) (undo-tree-id1112 . -68) (undo-tree-id1113 . -68) (undo-tree-id1114 . -68) (undo-tree-id1115 . -68) (undo-tree-id1116 . -68) (undo-tree-id1117 . -68) (undo-tree-id1118 . -68) (undo-tree-id1119 . -68) (undo-tree-id1120 . -68) (undo-tree-id1121 . -68) (undo-tree-id1122 . -68) (undo-tree-id1123 . -68) (undo-tree-id1124 . -72) (undo-tree-id1125 . -72) (undo-tree-id1126 . -72) (undo-tree-id1127 . -72) (undo-tree-id1128 . -72) (undo-tree-id1129 . -72) (undo-tree-id1130 . -72) (undo-tree-id1131 . -72) (undo-tree-id1132 . -72) (undo-tree-id1133 . -72) (undo-tree-id1134 . -72) (undo-tree-id1135 . -72) (undo-tree-id1136 . -72) (undo-tree-id1137 . -72) (undo-tree-id1138 . -72) (undo-tree-id1139 . -72) (undo-tree-id1140 . -72) (undo-tree-id1141 . -72) (undo-tree-id1142 . -72) (undo-tree-id1143 . -72) (undo-tree-id1144 . -72) (undo-tree-id1145 . -72) (undo-tree-id1146 . -72) (undo-tree-id1147 . -72) (undo-tree-id1148 . -72) (undo-tree-id1149 . -72) (undo-tree-id1150 . -72) (undo-tree-id1151 . -72) (undo-tree-id1152 . -72) (undo-tree-id1153 . -72) (undo-tree-id1154 . -72) (undo-tree-id1155 . -72) (undo-tree-id1156 . -72) (undo-tree-id1157 . -72) (undo-tree-id1158 . -146) (undo-tree-id1159 . -146) (undo-tree-id1160 . -146) (undo-tree-id1161 . -146) (undo-tree-id1162 . -146) (undo-tree-id1163 . -146) (undo-tree-id1164 . -146) (undo-tree-id1165 . -146) (undo-tree-id1166 . -146) (undo-tree-id1167 . -146) (undo-tree-id1168 . -146) (undo-tree-id1169 . -146) (undo-tree-id1170 . -146) (undo-tree-id1171 . -146) (undo-tree-id1172 . -146) (undo-tree-id1173 . -146) (undo-tree-id1174 . -146) (undo-tree-id1175 . -146) (undo-tree-id1176 . -146) (undo-tree-id1177 . -146) (undo-tree-id1178 . -146) (undo-tree-id1179 . -146) (undo-tree-id1180 . -146) (undo-tree-id1181 . -146) (undo-tree-id1182 . -146) (undo-tree-id1183 . -146) (undo-tree-id1184 . -146) (undo-tree-id1185 . -146) (undo-tree-id1186 . -146) (undo-tree-id1187 . -146) (undo-tree-id1188 . -146) (undo-tree-id1189 . -146) (undo-tree-id1190 . -146) (undo-tree-id1191 . -146) (undo-tree-id1192 . -146) (undo-tree-id1193 . -146) (undo-tree-id1194 . -147) 1222 (t 26460 25076 474637 333000)) nil (26460 25132 541978 316000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1879 . 1880) (nil fontified nil 1806 . 1880) (nil fontified nil 1805 . 1806) (nil fontified nil 1748 . 1805) (nil fontified nil 1747 . 1748) (nil fontified nil 1734 . 1747) (nil fontified nil 1733 . 1734) (1733 . 1880)) nil (26460 25132 541672 795000) 0 nil])
([nil nil ((nil rear-nonsticky nil 178 . 179) (#("
" 0 1 (fontified nil)) . -210) (176 . 211) 175 (t 26460 25132 592569 47000)) nil (26460 25420 329747 289000) 0 nil])
([nil nil ((#("struct sgraph_node " 0 6 (face font-lock-keyword-face fontified t) 6 7 (face whitespace-space fontified t) 7 17 (face font-lock-type-face fontified t) 17 18 (face font-lock-type-face c-type c-decl-id-start fontified t) 18 19 (face whitespace-space fontified t)) . 179) (undo-tree-id1324 . -18) (undo-tree-id1325 . -18) (undo-tree-id1326 . -18) (undo-tree-id1327 . -18) (undo-tree-id1328 . -6) (undo-tree-id1329 . -6) (undo-tree-id1330 . -6) (undo-tree-id1331 . -6) (undo-tree-id1332 . -6) (undo-tree-id1333 . -6) (undo-tree-id1334 . -6) (undo-tree-id1335 . -6) (undo-tree-id1336 . -6) (undo-tree-id1337 . -6) (undo-tree-id1338 . -6) (undo-tree-id1339 . -6) (undo-tree-id1340 . -6) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6) (undo-tree-id1344 . -6) (undo-tree-id1345 . -6) (undo-tree-id1346 . -6) (undo-tree-id1347 . -6) (undo-tree-id1348 . -6) (undo-tree-id1349 . -6) (undo-tree-id1350 . -6) (undo-tree-id1351 . -6) (undo-tree-id1352 . -6) (undo-tree-id1353 . -6) (undo-tree-id1354 . -6) (undo-tree-id1355 . -6) (undo-tree-id1356 . -6) (undo-tree-id1357 . -6) (undo-tree-id1358 . -6) (undo-tree-id1359 . -6) (undo-tree-id1360 . -6) (undo-tree-id1361 . -6) (undo-tree-id1362 . -13) (undo-tree-id1363 . -13) (undo-tree-id1364 . -13) (undo-tree-id1365 . -13) (undo-tree-id1366 . -13) (undo-tree-id1367 . -13) (undo-tree-id1368 . -13) (undo-tree-id1369 . -13) (undo-tree-id1370 . -13) (undo-tree-id1371 . -13) (undo-tree-id1372 . -13) (undo-tree-id1373 . -13) (undo-tree-id1374 . -13) (undo-tree-id1375 . -13) (undo-tree-id1376 . -13) (undo-tree-id1377 . -13) (undo-tree-id1378 . -13) (undo-tree-id1379 . -13) (undo-tree-id1380 . -13) (undo-tree-id1381 . -13) (undo-tree-id1382 . -13) (undo-tree-id1383 . -13) (undo-tree-id1384 . -13) (undo-tree-id1385 . -13) (undo-tree-id1386 . -13) (undo-tree-id1387 . -13) (undo-tree-id1388 . -13) (undo-tree-id1389 . -13) (undo-tree-id1390 . -13) (undo-tree-id1391 . -13) (undo-tree-id1392 . -13) (undo-tree-id1393 . -13) (undo-tree-id1394 . -13) (undo-tree-id1395 . -13) (undo-tree-id1396 . -18) (undo-tree-id1397 . -18) (undo-tree-id1398 . -18) (undo-tree-id1399 . -18) (undo-tree-id1400 . -18) (undo-tree-id1401 . -18) (undo-tree-id1402 . -18) (undo-tree-id1403 . -18) (undo-tree-id1404 . -18) (undo-tree-id1405 . -18) (undo-tree-id1406 . -18) (undo-tree-id1407 . -18) (undo-tree-id1408 . -18) (undo-tree-id1409 . -18) (undo-tree-id1410 . -18) (undo-tree-id1411 . -18) (undo-tree-id1412 . -18) (undo-tree-id1413 . -18) (undo-tree-id1414 . -18) (undo-tree-id1415 . -18) (undo-tree-id1416 . -18) (undo-tree-id1417 . -18) (undo-tree-id1418 . -18) (undo-tree-id1419 . -18) (undo-tree-id1420 . -18) (undo-tree-id1421 . -18) (undo-tree-id1422 . -18) (undo-tree-id1423 . -18) (undo-tree-id1424 . -18) (undo-tree-id1425 . -18) (undo-tree-id1426 . -18) (undo-tree-id1427 . -18) (undo-tree-id1428 . -18) (undo-tree-id1429 . -18) (undo-tree-id1430 . -18) (undo-tree-id1431 . -19) 197) nil (26460 25420 329743 33000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 184) (181 . 183) (#(" " 0 1 (face whitespace-space fontified t)) . -181) (undo-tree-id1323 . -1) 182 (179 . 182)) nil (26460 25420 329606 76000) 0 nil])
([nil nil ((#("neighbors" 0 9 (face font-lock-variable-name-face fontified t)) . 184) (undo-tree-id1220 . -8) (undo-tree-id1221 . 8) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -9)) nil (26460 25420 329601 205000) 0 nil])
([nil nil ((184 . 191)) nil (26460 25420 329489 406000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -858) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) 859 (847 . 859) (846 . 847) (t 26460 25420 343225 308000)) nil (26460 25430 42130 295000) 0 nil])
([nil nil ((1539 . 1540) (#(" " 0 1 (face whitespace-space fontified t c-in-sws t)) . -1539) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1540) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1541) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (#(" " 0 1 (face whitespace-space fontified t c-in-sws t)) . -1542) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (#("k" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1543) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (#("." 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1544) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) 1545 (t 26460 25430 55213 855000)) nil (26460 25676 137382 146000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-arg-start fontified t)) . -1603) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (#(" " 0 1 (face whitespace-space fontified t)) . -1604) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (#("i" 0 1 (fontified t)) . -1605) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (#("n" 0 1 (fontified t)) . -1606) (undo-tree-id1552 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1607) (undo-tree-id1553 . -1) (#(" " 0 1 (face whitespace-space fontified t)) . -1608) (undo-tree-id1554 . -1) (#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -1609) (undo-tree-id1555 . -1) 1610) nil (26460 25676 136831 728000) 0 nil])
([nil nil ((1529 . 1535) (1527 . 1529) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1527) (undo-tree-id1434 . -1) 1528 (1520 . 1528) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1520) (undo-tree-id1435 . -1) 1521 (1520 . 1521) (#("o" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1520) (undo-tree-id1436 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1521) (undo-tree-id1437 . -1) (#(" " 0 1 (face whitespace-space fontified t c-in-sws t)) . -1522) (undo-tree-id1438 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1523) (undo-tree-id1439 . -1) (#(" " 0 1 (face whitespace-space fontified t c-in-sws t)) . -1524) (undo-tree-id1440 . -1) (#("k" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1525) (undo-tree-id1441 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1526) (undo-tree-id1442 . -1) (#("y" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1527) (undo-tree-id1443 . -1) 1528) nil (26460 25676 136705 460000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-space fontified t)) . -1609) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) 1610 (1609 . 1610) (t 26460 25676 150925 890000)) nil (26460 25719 87196 89000) 0 nil])
([nil nil ((#("int" 0 3 (face font-lock-type-face fontified t)) . 1865) (undo-tree-id2395 . -2) (t 26460 25719 102875 996000)) nil (26460 25895 387782 412000) 0 nil])
([nil nil ((#(" **" 0 1 (face whitespace-space fontified t) 1 3 (fontified t)) . 1865) (undo-tree-id2394 . -2)) nil (26460 25895 387780 645000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 1865)) nil (26460 25895 387779 203000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1865) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1)) nil (26460 25895 387778 147000) 0 nil])
([nil nil ((#("ights" 0 5 (fontified t)) . 1865) (undo-tree-id2390 . -4) (undo-tree-id2391 . -5)) nil (26460 25895 387776 45000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-arg-start fontified t)) . 1865) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1)) nil (26460 25895 387773 395000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-space fontified t)) . 1865) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1)) nil (26460 25895 387768 645000) 0 nil])
([nil nil ((#("/*
 * Run breadth-first search to set d and parent starting with the
 * given source
 */
void graph_bfs (const graph * self, graph_node * source);

/*
 * Run depth-first search to set d, f and parent
 */
void graph_dfs (const graph * self);

" 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face whitespace-space fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face whitespace-space fontified t c-in-sws t) 6 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face whitespace-space fontified t c-in-sws t) 10 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face whitespace-space fontified t c-in-sws t) 24 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face whitespace-space fontified t c-in-sws t) 31 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face whitespace-space fontified t c-in-sws t) 34 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face whitespace-space fontified t c-in-sws t) 38 39 (face font-lock-comment-face fontified t c-in-sws t) 39 40 (face whitespace-space fontified t c-in-sws t) 40 43 (face font-lock-comment-face fontified t c-in-sws t) 43 44 (face whitespace-space fontified t c-in-sws t) 44 50 (face font-lock-comment-face fontified t c-in-sws t) 50 51 (face whitespace-space fontified t c-in-sws t) 51 59 (face font-lock-comment-face fontified t c-in-sws t) 59 60 (face whitespace-space fontified t c-in-sws t) 60 64 (face font-lock-comment-face fontified t c-in-sws t) 64 65 (face whitespace-space fontified t c-in-sws t) 65 69 (face font-lock-comment-face fontified t c-in-sws t) 69 70 (face whitespace-space fontified t c-in-sws t) 70 71 (face font-lock-comment-face fontified t c-in-sws t) 71 72 (face whitespace-space fontified t c-in-sws t) 72 77 (face font-lock-comment-face fontified t c-in-sws t) 77 78 (face whitespace-space fontified t c-in-sws t) 78 85 (face font-lock-comment-face fontified t c-in-sws t) 85 86 (face whitespace-space fontified t c-in-sws t) 86 88 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 88 89 (fontified t c-in-sws t) 89 90 (face font-lock-type-face fontified t c-is-sws t) 90 92 (face font-lock-type-face fontified t) 92 93 (face font-lock-type-face c-type c-decl-id-start fontified t) 93 94 (face whitespace-space fontified t) 94 103 (face font-lock-function-name-face fontified t) 103 104 (face whitespace-space fontified t) 104 105 (c-type c-decl-arg-start fontified t) 105 110 (face font-lock-keyword-face fontified t) 110 111 (face whitespace-space fontified t) 111 116 (face font-lock-type-face fontified t) 116 117 (face whitespace-space fontified t) 117 118 (fontified t) 118 119 (face whitespace-space fontified t) 119 123 (face font-lock-variable-name-face fontified t) 123 124 (c-type c-decl-arg-start fontified t) 124 125 (face whitespace-space fontified t) 125 135 (face font-lock-type-face fontified t) 135 136 (face whitespace-space fontified t) 136 137 (fontified t) 137 138 (face whitespace-space fontified t) 138 144 (face font-lock-variable-name-face fontified t) 144 148 (fontified t) 148 149 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 149 150 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 150 151 (face font-lock-comment-face fontified t c-in-sws t) 151 152 (face whitespace-space fontified t c-in-sws t) 152 153 (face font-lock-comment-face fontified t c-in-sws t) 153 154 (face whitespace-space fontified t c-in-sws t) 154 157 (face font-lock-comment-face fontified t c-in-sws t) 157 158 (face whitespace-space fontified t c-in-sws t) 158 169 (face font-lock-comment-face fontified t c-in-sws t) 169 170 (face whitespace-space fontified t c-in-sws t) 170 176 (face font-lock-comment-face fontified t c-in-sws t) 176 177 (face whitespace-space fontified t c-in-sws t) 177 179 (face font-lock-comment-face fontified t c-in-sws t) 179 180 (face whitespace-space fontified t c-in-sws t) 180 183 (face font-lock-comment-face fontified t c-in-sws t) 183 184 (face whitespace-space fontified t c-in-sws t) 184 186 (face font-lock-comment-face fontified t c-in-sws t) 186 187 (face whitespace-space fontified t c-in-sws t) 187 188 (face font-lock-comment-face fontified t c-in-sws t) 188 189 (face whitespace-space fontified t c-in-sws t) 189 192 (face font-lock-comment-face fontified t c-in-sws t) 192 193 (face whitespace-space fontified t c-in-sws t) 193 200 (face font-lock-comment-face fontified t c-in-sws t) 200 201 (face whitespace-space fontified t c-in-sws t) 201 203 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 203 204 (fontified t c-in-sws t) 204 205 (face font-lock-type-face fontified t c-is-sws t) 205 207 (face font-lock-type-face fontified t) 207 208 (face font-lock-type-face c-type c-decl-id-start fontified t) 208 209 (face whitespace-space fontified t) 209 218 (face font-lock-function-name-face fontified t) 218 219 (face whitespace-space fontified t) 219 220 (c-type c-decl-arg-start fontified t) 220 225 (face font-lock-keyword-face fontified t) 225 226 (face whitespace-space fontified t) 226 231 (face font-lock-type-face fontified t) 231 232 (face whitespace-space fontified t) 232 233 (fontified t) 233 234 (face whitespace-space fontified t) 234 238 (face font-lock-variable-name-face fontified t) 238 242 (fontified t)) . 862) (undo-tree-id2396 . -241) (undo-tree-id2397 . -241) (undo-tree-id2398 . -241) (undo-tree-id2399 . -242) (undo-tree-id2400 . -242) (undo-tree-id2401 . -242) (undo-tree-id2402 . -242) (undo-tree-id2403 . -241) (undo-tree-id2404 . -241) (undo-tree-id2405 . -241) (undo-tree-id2406 . -241) (undo-tree-id2407 . -147) (undo-tree-id2408 . -147) (undo-tree-id2409 . -147) (undo-tree-id2410 . -147) (undo-tree-id2411 . -147) (undo-tree-id2412 . -147) (undo-tree-id2413 . -147) (undo-tree-id2414 . -147) (undo-tree-id2415 . -147) (undo-tree-id2416 . -147) (undo-tree-id2417 . -147) (undo-tree-id2418 . -147) (undo-tree-id2419 . -147) (undo-tree-id2420 . -147) (undo-tree-id2421 . -147) (undo-tree-id2422 . -147) (undo-tree-id2423 . -147) (undo-tree-id2424 . -147) (undo-tree-id2425 . -147) (undo-tree-id2426 . -147) (undo-tree-id2427 . -147) (undo-tree-id2428 . -147) (undo-tree-id2429 . -147) (undo-tree-id2430 . -147) (undo-tree-id2431 . -147) (undo-tree-id2432 . -147) (undo-tree-id2433 . -147) (undo-tree-id2434 . -147) (undo-tree-id2435 . -147) (undo-tree-id2436 . -147) (undo-tree-id2437 . -147) (undo-tree-id2438 . -147) (undo-tree-id2439 . -147) (undo-tree-id2440 . -147) (undo-tree-id2441 . -241) (undo-tree-id2442 . -241) (undo-tree-id2443 . -241) (undo-tree-id2444 . -241) (undo-tree-id2445 . -241) (undo-tree-id2446 . -241) (undo-tree-id2447 . -241) (undo-tree-id2448 . -241) (undo-tree-id2449 . -241) (undo-tree-id2450 . -241) (undo-tree-id2451 . -241) (undo-tree-id2452 . -241) (undo-tree-id2453 . -241) (undo-tree-id2454 . -241) (undo-tree-id2455 . -241) (undo-tree-id2456 . -241) (undo-tree-id2457 . -241) (undo-tree-id2458 . -241) (undo-tree-id2459 . -241) (undo-tree-id2460 . -241) (undo-tree-id2461 . -241) (undo-tree-id2462 . -241) (undo-tree-id2463 . -241) (undo-tree-id2464 . -241) (undo-tree-id2465 . -241) (undo-tree-id2466 . -241) (undo-tree-id2467 . -241) (undo-tree-id2468 . -241) (undo-tree-id2469 . -241) (undo-tree-id2470 . -241) (undo-tree-id2471 . -241) (undo-tree-id2472 . -241) (undo-tree-id2473 . -241) (undo-tree-id2474 . -241) (undo-tree-id2475 . -242) (undo-tree-id2476 . -242) (undo-tree-id2477 . -242) (undo-tree-id2478 . -242) (undo-tree-id2479 . -242) (undo-tree-id2480 . -242) (undo-tree-id2481 . -242) (undo-tree-id2482 . -242) (undo-tree-id2483 . -242) (undo-tree-id2484 . -242) (undo-tree-id2485 . -242) (undo-tree-id2486 . -242) (undo-tree-id2487 . -242) (undo-tree-id2488 . -242) (undo-tree-id2489 . -242) (undo-tree-id2490 . -242) (undo-tree-id2491 . -242) (undo-tree-id2492 . -242) (undo-tree-id2493 . -242) (undo-tree-id2494 . -242) (undo-tree-id2495 . -242) (undo-tree-id2496 . -242) (undo-tree-id2497 . -242) (undo-tree-id2498 . -242) (undo-tree-id2499 . -242) (undo-tree-id2500 . -242) (undo-tree-id2501 . -242) (undo-tree-id2502 . -242) (undo-tree-id2503 . -242) (undo-tree-id2504 . -242) (undo-tree-id2505 . -242) (undo-tree-id2506 . -242) (undo-tree-id2507 . -242) (undo-tree-id2508 . -242) (undo-tree-id2509 . -241) (undo-tree-id2510 . -241) (undo-tree-id2511 . -241) (undo-tree-id2512 . -241) (undo-tree-id2513 . -241) (undo-tree-id2514 . -241) (undo-tree-id2515 . -241) (undo-tree-id2516 . -241) (undo-tree-id2517 . -241) (undo-tree-id2518 . -241) (undo-tree-id2519 . -241) (undo-tree-id2520 . -241) (undo-tree-id2521 . -241) (undo-tree-id2522 . -241) (undo-tree-id2523 . -241) (undo-tree-id2524 . -241) (undo-tree-id2525 . -241) (undo-tree-id2526 . -241) (undo-tree-id2527 . -241) (undo-tree-id2528 . -241) (undo-tree-id2529 . -241) (undo-tree-id2530 . -241) (undo-tree-id2531 . -241) (undo-tree-id2532 . -241) (undo-tree-id2533 . -241) (undo-tree-id2534 . -241) (undo-tree-id2535 . -241) (undo-tree-id2536 . -241) (undo-tree-id2537 . -241) (undo-tree-id2538 . -241) (undo-tree-id2539 . -241) (undo-tree-id2540 . -241) (undo-tree-id2541 . -241) (undo-tree-id2542 . -241) (undo-tree-id2543 . -241) (undo-tree-id2544 . -241) (undo-tree-id2545 . -242) 1103 (t 26460 25895 438973 795000)) nil (26460 26289 923486 778000) 0 nil])
([nil nil ((nil fontified t 847 . 868) (847 . 868) (t 26460 26289 938138 71000)) nil (26460 29012 850442 497000) 0 nil])
([nil nil ((#("/*
 * Get the number of vertices in the graph
 */
size_t graph_size (const graph * self);

" 0 1 (face font-lock-comment-delimiter-face c-in-sws t c-is-sws t fontified t) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 2 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face whitespace-space c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face whitespace-space c-in-sws t fontified t) 6 9 (face font-lock-comment-face c-in-sws t fontified t) 9 10 (face whitespace-space c-in-sws t fontified t) 10 13 (face font-lock-comment-face c-in-sws t fontified t) 13 14 (face whitespace-space c-in-sws t fontified t) 14 20 (face font-lock-comment-face c-in-sws t fontified t) 20 21 (face whitespace-space c-in-sws t fontified t) 21 23 (face font-lock-comment-face c-in-sws t fontified t) 23 24 (face whitespace-space c-in-sws t fontified t) 24 32 (face font-lock-comment-face c-in-sws t fontified t) 32 33 (face whitespace-space c-in-sws t fontified t) 33 35 (face font-lock-comment-face c-in-sws t fontified t) 35 36 (face whitespace-space c-in-sws t fontified t) 36 39 (face font-lock-comment-face c-in-sws t fontified t) 39 40 (face whitespace-space c-in-sws t fontified t) 40 46 (face font-lock-comment-face c-in-sws t fontified t) 46 47 (face whitespace-space c-in-sws t fontified t) 47 48 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 48 49 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 49 50 (c-is-sws t fontified t) 50 51 (face font-lock-type-face fontified t c-is-sws t) 51 55 (face font-lock-type-face fontified t) 55 56 (face font-lock-type-face c-type c-decl-id-start fontified t) 56 57 (face whitespace-space fontified t) 57 67 (face font-lock-function-name-face fontified t) 67 68 (face whitespace-space fontified t) 68 69 (c-type c-decl-arg-start fontified t) 69 74 (face font-lock-keyword-face fontified t) 74 75 (face whitespace-space fontified t) 75 80 (face font-lock-type-face fontified t) 80 81 (face whitespace-space fontified t) 81 82 (fontified t) 82 83 (face whitespace-space fontified t) 83 87 (face font-lock-variable-name-face fontified t) 87 90 (fontified t) 90 91 (fontified t)) . 553) (undo-tree-id2688 . -90) (undo-tree-id2689 . -90) (undo-tree-id2690 . -90) (undo-tree-id2691 . -90) (undo-tree-id2692 . -90) (undo-tree-id2693 . -90) (undo-tree-id2694 . -90) (undo-tree-id2695 . -90) (undo-tree-id2696 . -90) (undo-tree-id2697 . -90) (undo-tree-id2698 . -90) (undo-tree-id2699 . -90) (undo-tree-id2700 . -90) (undo-tree-id2701 . -90) (undo-tree-id2702 . -90) (undo-tree-id2703 . -90) (undo-tree-id2704 . -90) (undo-tree-id2705 . -90) (undo-tree-id2706 . -90) (undo-tree-id2707 . -90) (undo-tree-id2708 . -90) (undo-tree-id2709 . -90) (undo-tree-id2710 . -90) (undo-tree-id2711 . -90) (undo-tree-id2712 . -90) (undo-tree-id2713 . -90) (undo-tree-id2714 . -90) (undo-tree-id2715 . -90) (undo-tree-id2716 . -90) (undo-tree-id2717 . -90) (undo-tree-id2718 . -90) (undo-tree-id2719 . -90) (undo-tree-id2720 . -90) (undo-tree-id2721 . -90) (undo-tree-id2722 . -90) (undo-tree-id2723 . -90) (undo-tree-id2724 . -90) (undo-tree-id2725 . -90) (undo-tree-id2726 . -90) (undo-tree-id2727 . -90) (undo-tree-id2728 . -90) (undo-tree-id2729 . -90) (undo-tree-id2730 . -90) (undo-tree-id2731 . -90) (undo-tree-id2732 . -90) (undo-tree-id2733 . -90) (undo-tree-id2734 . -90) (undo-tree-id2735 . -90) (undo-tree-id2736 . -90) (undo-tree-id2737 . -90) (undo-tree-id2738 . -90) (undo-tree-id2739 . -90) (undo-tree-id2740 . -90) (undo-tree-id2741 . -90) (undo-tree-id2742 . -90) (undo-tree-id2743 . -90) (undo-tree-id2744 . -90) (undo-tree-id2745 . -90) (undo-tree-id2746 . -90) (undo-tree-id2747 . -90) (undo-tree-id2748 . -90) (undo-tree-id2749 . -90) (undo-tree-id2750 . -90) (undo-tree-id2751 . -90) (undo-tree-id2752 . -90) (undo-tree-id2753 . -90) (undo-tree-id2754 . -90) (undo-tree-id2755 . -90) (undo-tree-id2756 . -90) (undo-tree-id2757 . -90) (undo-tree-id2758 . -90) (undo-tree-id2759 . -90) (undo-tree-id2760 . -90) (undo-tree-id2761 . -90) (undo-tree-id2762 . -90) (undo-tree-id2763 . -90) (undo-tree-id2764 . -90) (undo-tree-id2765 . -90) (undo-tree-id2766 . -90) (undo-tree-id2767 . -90) (undo-tree-id2768 . -90) (undo-tree-id2769 . -90) (undo-tree-id2770 . -90) (undo-tree-id2771 . -90) (undo-tree-id2772 . -90) (undo-tree-id2773 . -90) (undo-tree-id2774 . -90) (undo-tree-id2775 . -90) (undo-tree-id2776 . -90) (undo-tree-id2777 . -90) (undo-tree-id2778 . -90) (undo-tree-id2779 . -90) (undo-tree-id2780 . -90) (undo-tree-id2781 . -90) (undo-tree-id2782 . -90) (undo-tree-id2783 . -90) (undo-tree-id2784 . -90) (undo-tree-id2785 . -90) (undo-tree-id2786 . -90) (undo-tree-id2787 . -90) (undo-tree-id2788 . -90) (undo-tree-id2789 . -90) (undo-tree-id2790 . -90) (undo-tree-id2791 . -90) (undo-tree-id2792 . -90) (undo-tree-id2793 . -90) (undo-tree-id2794 . -90) (undo-tree-id2795 . -90) (undo-tree-id2796 . -90) (undo-tree-id2797 . -90) (undo-tree-id2798 . -90) (undo-tree-id2799 . -90) (undo-tree-id2800 . -90) (undo-tree-id2801 . -90) (undo-tree-id2802 . -90) (undo-tree-id2803 . -90) (undo-tree-id2804 . -90) (undo-tree-id2805 . -90) (undo-tree-id2806 . -90) (undo-tree-id2807 . -90) (undo-tree-id2808 . -90) (undo-tree-id2809 . -90) (undo-tree-id2810 . -90) (undo-tree-id2811 . -90) (undo-tree-id2812 . -90) (undo-tree-id2813 . -90) (undo-tree-id2814 . -90) (undo-tree-id2815 . -90) (undo-tree-id2816 . -90) (undo-tree-id2817 . -90) (undo-tree-id2818 . -90) (undo-tree-id2819 . -90) (undo-tree-id2820 . -90) (undo-tree-id2821 . -90) (undo-tree-id2822 . -90) (undo-tree-id2823 . -90) (undo-tree-id2824 . -90) (undo-tree-id2825 . -90) (undo-tree-id2826 . -90) (undo-tree-id2827 . -90) (undo-tree-id2828 . -90) (undo-tree-id2829 . -90) (undo-tree-id2830 . -90) (undo-tree-id2831 . -90) (undo-tree-id2832 . -90) (undo-tree-id2833 . -90) (undo-tree-id2834 . -90) (undo-tree-id2835 . -90) (undo-tree-id2836 . -90) (undo-tree-id2837 . -90) (undo-tree-id2838 . -90) (undo-tree-id2839 . -90) (undo-tree-id2840 . -90) (undo-tree-id2841 . -90) (undo-tree-id2842 . -90) (undo-tree-id2843 . -90) (undo-tree-id2844 . -90) (undo-tree-id2845 . -90) (undo-tree-id2846 . -90) (undo-tree-id2847 . -90) (undo-tree-id2848 . -90) (undo-tree-id2849 . -90) (undo-tree-id2850 . -90) (undo-tree-id2851 . -90) (undo-tree-id2852 . -90) (undo-tree-id2853 . -50) (undo-tree-id2854 . -50) (undo-tree-id2855 . -50) (undo-tree-id2856 . -50) (undo-tree-id2857 . -50) (undo-tree-id2858 . -50) (undo-tree-id2859 . -50) (undo-tree-id2860 . -50) (undo-tree-id2861 . -50) (undo-tree-id2862 . -50) (undo-tree-id2863 . -50) (undo-tree-id2864 . -50) (undo-tree-id2865 . -50) (undo-tree-id2866 . -50) (undo-tree-id2867 . -50) (undo-tree-id2868 . -50) (undo-tree-id2869 . -50) (undo-tree-id2870 . -50) (undo-tree-id2871 . -50) (undo-tree-id2872 . -50) (undo-tree-id2873 . -50) (undo-tree-id2874 . -50) (undo-tree-id2875 . -50) (undo-tree-id2876 . -50) (undo-tree-id2877 . -50) (undo-tree-id2878 . -50) (undo-tree-id2879 . -50) (undo-tree-id2880 . -50) (undo-tree-id2881 . -50) (undo-tree-id2882 . -50) (undo-tree-id2883 . -50) (undo-tree-id2884 . -46) (undo-tree-id2885 . -46) (undo-tree-id2886 . -46) (undo-tree-id2887 . -46) (undo-tree-id2888 . -46) (undo-tree-id2889 . -46) (undo-tree-id2890 . -46) (undo-tree-id2891 . -46) (undo-tree-id2892 . -46) (undo-tree-id2893 . -46) (undo-tree-id2894 . -46) (undo-tree-id2895 . -46) (undo-tree-id2896 . -46) (undo-tree-id2897 . -46) (undo-tree-id2898 . -46) (undo-tree-id2899 . -46) (undo-tree-id2900 . -46) (undo-tree-id2901 . -46) (undo-tree-id2902 . -46) (undo-tree-id2903 . -46) (undo-tree-id2904 . -46) (undo-tree-id2905 . -46) (undo-tree-id2906 . -46) (undo-tree-id2907 . -46) (undo-tree-id2908 . -46) (undo-tree-id2909 . -46) (undo-tree-id2910 . -46) (undo-tree-id2911 . -46) (undo-tree-id2912 . -46) (undo-tree-id2913 . -46) (undo-tree-id2914 . -46) (undo-tree-id2915 . -3) (undo-tree-id2916 . -3) (undo-tree-id2917 . -3) (undo-tree-id2918 . -3) (undo-tree-id2919 . -3) (undo-tree-id2920 . -3) (undo-tree-id2921 . -3) (undo-tree-id2922 . -3) (undo-tree-id2923 . -3) (undo-tree-id2924 . -3) (undo-tree-id2925 . -3) (undo-tree-id2926 . -3) (undo-tree-id2927 . -3) (undo-tree-id2928 . -3) (undo-tree-id2929 . -3) (undo-tree-id2930 . -3) (undo-tree-id2931 . -3) (undo-tree-id2932 . -3) (undo-tree-id2933 . -3) (undo-tree-id2934 . -3) (undo-tree-id2935 . -3) (undo-tree-id2936 . -3) (undo-tree-id2937 . -3) (undo-tree-id2938 . -3) (undo-tree-id2939 . -3) (undo-tree-id2940 . -3) (undo-tree-id2941 . -3) (undo-tree-id2942 . -3) (undo-tree-id2943 . -3) (undo-tree-id2944 . -3) (undo-tree-id2945 . -3) (undo-tree-id2946 . -90)) ((553 . 644)) (26460 29016 611883 557000) 0 nil])
([nil nil ((1521 . 1524) (#("graph" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 3 (face font-lock-function-name-face fontified t) 3 4 (face font-lock-function-name-face fontified t) 4 5 (face font-lock-function-name-face fontified t)) . 1521) (undo-tree-id2947 . -5) (undo-tree-id2948 . -5) (undo-tree-id2949 . -5) (undo-tree-id2950 . -5) (undo-tree-id2951 . -5) (undo-tree-id2952 . -5) (undo-tree-id2953 . -5) (undo-tree-id2954 . -5) (undo-tree-id2955 . -5) (undo-tree-id2956 . -5) (undo-tree-id2957 . -5) (undo-tree-id2958 . -5) (undo-tree-id2959 . -5) (undo-tree-id2960 . -5) (undo-tree-id2961 . -5) (undo-tree-id2962 . -5) (undo-tree-id2963 . -5) (undo-tree-id2964 . -5) (undo-tree-id2965 . -5) (undo-tree-id2966 . -5) (undo-tree-id2967 . -5) (undo-tree-id2968 . -5) (undo-tree-id2969 . -5) (undo-tree-id2970 . -5) (undo-tree-id2971 . -5) (undo-tree-id2972 . -5) (undo-tree-id2973 . -5) (undo-tree-id2974 . -5) (undo-tree-id2975 . -5) (undo-tree-id2976 . -5) (undo-tree-id2977 . -5) (undo-tree-id2978 . -5) (undo-tree-id2979 . -5) (undo-tree-id2980 . -5) (undo-tree-id2981 . -5) (undo-tree-id2982 . -5) (undo-tree-id2983 . -5) (undo-tree-id2984 . -5) (undo-tree-id2985 . -5) (undo-tree-id2986 . -5) (undo-tree-id2987 . -5) (undo-tree-id2988 . -5) (undo-tree-id2989 . -5) (undo-tree-id2990 . -5) (undo-tree-id2991 . -5) (undo-tree-id2992 . -5) (undo-tree-id2993 . -5) (undo-tree-id2994 . -5) (undo-tree-id2995 . -5) (undo-tree-id2996 . -5) (undo-tree-id2997 . -5) (undo-tree-id2998 . -5) (undo-tree-id2999 . -5) (undo-tree-id3000 . -5) (undo-tree-id3001 . -5) (undo-tree-id3002 . -5) (undo-tree-id3003 . -5) (undo-tree-id3004 . -5) (undo-tree-id3005 . -5) (undo-tree-id3006 . -5) (undo-tree-id3007 . -5) (undo-tree-id3008 . -5) (undo-tree-id3009 . -5) (undo-tree-id3010 . -5) (undo-tree-id3011 . -5) (undo-tree-id3012 . -5) (undo-tree-id3013 . -5) (undo-tree-id3014 . -5)) ((1521 . 1526) (#("mst" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 3 (face font-lock-function-name-face fontified t)) . 1521)) (26460 29017 111150 591000) 0 nil])
([nil nil ((#("queue_" 0 6 (face font-lock-function-name-face fontified nil)) . 1391) (1397 . 1406) (#("queue_" 0 6 (face font-lock-function-name-face fontified nil)) . 1254) (1260 . 1269) (#("queue_" 0 6 (face font-lock-function-name-face fontified nil)) . 1140) (1146 . 1155) (#("queue_" 0 6 (face font-lock-function-name-face fontified nil)) . 1009) (1015 . 1024) (#("queue_" 0 6 (face font-lock-function-name-face fontified nil)) . 894) (undo-tree-id3015 . -6) (undo-tree-id3016 . -6) (undo-tree-id3017 . -6) (undo-tree-id3018 . -6) (undo-tree-id3019 . -6) (undo-tree-id3020 . -6) (undo-tree-id3021 . -6) (undo-tree-id3022 . -6) (undo-tree-id3023 . -6) (undo-tree-id3024 . -6) (undo-tree-id3025 . -6) (undo-tree-id3026 . -6) (undo-tree-id3027 . -6) (undo-tree-id3028 . -6) (undo-tree-id3029 . -6) (undo-tree-id3030 . -6) (undo-tree-id3031 . -6) (undo-tree-id3032 . -6) (undo-tree-id3033 . -6) (undo-tree-id3034 . -6) (undo-tree-id3035 . -6) (undo-tree-id3036 . -6) (undo-tree-id3037 . -6) (undo-tree-id3038 . -6) (undo-tree-id3039 . -6) (undo-tree-id3040 . -6) (undo-tree-id3041 . -6) (undo-tree-id3042 . -6) (undo-tree-id3043 . -6) (undo-tree-id3044 . -6) (undo-tree-id3045 . -6) (undo-tree-id3046 . -6) (undo-tree-id3047 . -6) (undo-tree-id3048 . -6) (undo-tree-id3049 . -6) (undo-tree-id3050 . -6) (undo-tree-id3051 . -6) (undo-tree-id3052 . -6) (undo-tree-id3053 . -6) (undo-tree-id3054 . -6) (undo-tree-id3055 . -6) (undo-tree-id3056 . -6) (undo-tree-id3057 . -6) (undo-tree-id3058 . -6) (undo-tree-id3059 . -6) (undo-tree-id3060 . -6) (undo-tree-id3061 . -6) (undo-tree-id3062 . -6) (900 . 909)) ((#("heap_min_" 0 9 (face font-lock-function-name-face fontified nil)) . 900) (894 . 900) (#("heap_min_" 0 9 (face font-lock-function-name-face fontified nil)) . 1015) (1009 . 1015) (#("heap_min_" 0 9 (face font-lock-function-name-face fontified nil)) . 1146) (1140 . 1146) (#("heap_min_" 0 9 (face font-lock-function-name-face fontified nil)) . 1260) (1254 . 1260) (#("heap_min_" 0 9 (face font-lock-function-name-face fontified nil)) . 1397) (1391 . 1397) (t 26460 28999 326757 611000)) (26460 29017 153507 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 644 . 645) (nil fontified nil 605 . 645) (nil fontified nil 604 . 605) (nil fontified nil 555 . 604) (nil fontified nil 554 . 555) (nil fontified nil 553 . 554) (553 . 645) (t 26460 28999 326757 611000)) nil (26460 29025 716927 771000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 553) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1)) nil (26460 29025 716922 275000) 0 nil])
([nil nil ((#("  int key;
" 0 2 (face whitespace-space fontified t) 2 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t) 5 6 (face whitespace-space fontified t) 6 9 (face font-lock-variable-name-face fontified t) 9 11 (fontified t)) . 115) (undo-tree-id462 . -11) (undo-tree-id463 . -10) (t 26460 34332 926391 382000)) nil (26461 55142 965687 919000) 0 nil])
([nil nil ((#("  int color;                    // 0-blanc, 1-gris, 2-noir
" 0 2 (face whitespace-space fontified t c-in-sws t c-is-sws t) 2 3 (face font-lock-type-face fontified t c-is-sws t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t) 5 6 (face whitespace-space fontified t) 6 11 (face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 32 (face whitespace-space fontified t c-is-sws t c-in-sws t) 32 33 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 33 34 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 34 35 (face whitespace-space fontified t c-in-sws t) 35 43 (face font-lock-comment-face fontified t c-in-sws t) 43 44 (face whitespace-space fontified t c-in-sws t) 44 51 (face font-lock-comment-face fontified t c-in-sws t) 51 52 (face whitespace-space fontified t c-in-sws t) 52 59 (face font-lock-comment-face fontified t c-in-sws t)) . 217) (undo-tree-id427 . -58) (undo-tree-id428 . -59) (undo-tree-id429 . -59) (undo-tree-id430 . -59) (undo-tree-id431 . -59) (undo-tree-id432 . -59) (undo-tree-id433 . -59) (undo-tree-id434 . -59) (undo-tree-id435 . -59) (undo-tree-id436 . -59) (undo-tree-id437 . -59) (undo-tree-id438 . -59) (undo-tree-id439 . -59) (undo-tree-id440 . -59) (undo-tree-id441 . -59) (undo-tree-id442 . -59) (undo-tree-id443 . -59) (undo-tree-id444 . -59) (undo-tree-id445 . -59) (undo-tree-id446 . -59) (undo-tree-id447 . -59) (undo-tree-id448 . -59) (undo-tree-id449 . -59) (undo-tree-id450 . -59) (undo-tree-id451 . -59) (undo-tree-id452 . -59) (undo-tree-id453 . -59) (undo-tree-id454 . -59) (undo-tree-id455 . -59) (undo-tree-id456 . -59) (undo-tree-id457 . -59) (undo-tree-id458 . -59) (undo-tree-id459 . -59) (undo-tree-id460 . -59) (undo-tree-id461 . -59)) nil (26461 55142 965684 851000) 0 nil])
([nil nil ((239 . 244) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -239) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) 240 (239 . 240) (#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -239) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) 240 (227 . 231) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -227) (undo-tree-id423 . -1) (undo-tree-id424 . -1) 228 (226 . 228) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -226) (undo-tree-id425 . -1) 227 (225 . 227) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -225) (undo-tree-id426 . -1) 226 (224 . 226)) nil (26461 55142 965636 71000) 0 nil])
([nil nil ((#("searching procedures" 0 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face whitespace-space fontified t c-in-sws t) 10 20 (face font-lock-comment-face fontified t c-in-sws t)) . 196) (undo-tree-id106 . -19) (undo-tree-id107 . -20) (undo-tree-id108 . -20)) nil (26461 55142 965367 729000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -209) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 210 (196 . 210)) nil (26461 55142 965359 75000) 0 nil])
([nil nil ((nil fontified t 264 . 265) (nil c-type c-decl-id-start 264 . 265) (nil face font-lock-type-face 264 . 265) (#("node" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -259) (263 . 269) (nil fontified t 155 . 156) (nil c-type c-decl-id-start 155 . 156) (nil face font-lock-type-face 155 . 156) (#("node" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -150) (154 . 160) (#("node" 0 4 (face font-lock-type-face fontified t)) . -108) (t 26461 55143 15504 932000) (112 . 118) (t 26461 55143 15504 932000)) nil (26461 55177 80485 864000) 0 nil])
([nil nil ((#("node" 0 4 (face font-lock-type-face fontified t)) . -1631) (1635 . 1641) (#("node" 0 4 (face font-lock-type-face fontified t)) . -1499) (1503 . 1509) (#("node" 0 4 (face font-lock-type-face fontified t)) . -1469) (1473 . 1479) (#("node" 0 4 (fontified t)) . -1336) (1340 . 1346) (#("node" 0 4 (fontified t)) . -1219) (1223 . 1229) (nil fontified t 1188 . 1189) (nil c-type c-decl-id-start 1188 . 1189) (nil face font-lock-type-face 1188 . 1189) (#("node" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1183) (1187 . 1193) (#("node" 0 4 (fontified t)) . -1080) (1084 . 1090) (nil fontified t 1053 . 1054) (nil c-type c-decl-id-start 1053 . 1054) (nil face font-lock-type-face 1053 . 1054) (#("node" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1048) (1052 . 1058) (#("node" 0 4 (face font-lock-type-face fontified t)) . -961) (965 . 971) (nil c-in-sws t 897 . 901) (nil fontified t 897 . 901) (nil face font-lock-comment-face 897 . 901) (#("node" 0 4 (face font-lock-comment-face fontified t c-in-sws t)) . -895) (899 . 905) (#("node" 0 4 (face font-lock-type-face fontified t)) . -776) (780 . 786) (#("node" 0 4 (face font-lock-type-face fontified t)) . -753) (757 . 763) (nil fontified t 637 . 638) (nil c-type c-decl-id-start 637 . 638) (nil face font-lock-type-face 637 . 638) (#("node" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -632) (636 . 642) (nil fontified t 344 . 345) (nil c-type c-decl-id-start 344 . 345) (nil face font-lock-type-face 344 . 345) (#("node" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -339) (343 . 349) (#("node" 0 4 (face font-lock-type-face fontified t)) . -283) (287 . 293)) nil (26461 55177 80477 629000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-arg-start fontified t)) . -670) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) 671 (#(" " 0 1 (face whitespace-space fontified t)) . -671) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) 672 (#("int " 0 3 (face font-lock-type-face fontified t) 3 4 (face whitespace-space fontified t)) . -672) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (undo-tree-id774 . -4) (undo-tree-id775 . -4) (undo-tree-id776 . -4) (undo-tree-id777 . -4) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) (undo-tree-id855 . -4) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -4) (undo-tree-id867 . -4) (undo-tree-id868 . -4) (undo-tree-id869 . -4) (undo-tree-id870 . -4) (undo-tree-id871 . -4) (undo-tree-id872 . -4) (undo-tree-id873 . -4) (undo-tree-id874 . -4) 676 (#("key" 0 3 (face font-lock-variable-name-face fontified t)) . -676) (undo-tree-id875 . -3) (undo-tree-id876 . -3) (undo-tree-id877 . -3) (undo-tree-id878 . -3) (undo-tree-id879 . -3) (undo-tree-id880 . -3) (undo-tree-id881 . -3) (undo-tree-id882 . -3) (undo-tree-id883 . -3) (undo-tree-id884 . -3) (undo-tree-id885 . -3) (undo-tree-id886 . -3) (undo-tree-id887 . -3) (undo-tree-id888 . -3) (undo-tree-id889 . -3) (undo-tree-id890 . -3) (undo-tree-id891 . -3) (undo-tree-id892 . -3) (undo-tree-id893 . -3) (undo-tree-id894 . -3) (undo-tree-id895 . -3) (undo-tree-id896 . -3) (undo-tree-id897 . -3) (undo-tree-id898 . -3) (undo-tree-id899 . -3) (undo-tree-id900 . -3) (undo-tree-id901 . -3) (undo-tree-id902 . -3) (undo-tree-id903 . -3) (undo-tree-id904 . -3) (undo-tree-id905 . -3) (undo-tree-id906 . -3) (undo-tree-id907 . -3) (undo-tree-id908 . -3) (undo-tree-id909 . -3) (undo-tree-id910 . -3) (undo-tree-id911 . -3) (undo-tree-id912 . -3) (undo-tree-id913 . -3) (undo-tree-id914 . -3) (undo-tree-id915 . -3) (undo-tree-id916 . -3) (undo-tree-id917 . -3) (undo-tree-id918 . -3) (undo-tree-id919 . -3) (undo-tree-id920 . -3) (undo-tree-id921 . -3) (undo-tree-id922 . -3) (undo-tree-id923 . -3) (undo-tree-id924 . -3) (undo-tree-id925 . -3) (undo-tree-id926 . -3) (undo-tree-id927 . -3) (undo-tree-id928 . -3) (undo-tree-id929 . -3) (undo-tree-id930 . -3) (undo-tree-id931 . -3) (undo-tree-id932 . -3) (undo-tree-id933 . -3) (undo-tree-id934 . -3) (undo-tree-id935 . -3) (undo-tree-id936 . -3) (undo-tree-id937 . -3) (undo-tree-id938 . -3) (undo-tree-id939 . -3) (undo-tree-id940 . -3) (undo-tree-id941 . -3) (undo-tree-id942 . -3) (undo-tree-id943 . -3) 679 (t 26461 55177 95519 49000)) nil (26461 55249 456005 474000) 0 nil])
([nil nil ((nil rear-nonsticky nil 899 . 900) (nil fontified nil 824 . 900) (824 . 900) (t 26461 55845 660781 597000)) nil (26461 56292 168898 838000) 0 nil])
([nil nil ((#("graph" 0 5 (face font-lock-type-face fontified t)) . 892) (undo-tree-id3241 . -4)) nil (26461 56292 168897 833000) 0 nil])
([nil nil ((892 . 897)) nil (26461 56292 168896 644000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-space fontified t)) . -838) (undo-tree-id3239 . -1) 839 (#("sgraph" 0 6 (face font-lock-type-face fontified t)) . -839) (undo-tree-id3240 . -6) 845) nil (26461 56292 168895 715000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-space fontified t)) . -841) (undo-tree-id3134 . -2) (undo-tree-id3135 . -2) (undo-tree-id3136 . -2) (undo-tree-id3137 . -2) (undo-tree-id3138 . -2) (undo-tree-id3139 . -2) (undo-tree-id3140 . -2) (undo-tree-id3141 . -2) (undo-tree-id3142 . -2) (undo-tree-id3143 . -2) (undo-tree-id3144 . -2) (undo-tree-id3145 . -2) (undo-tree-id3146 . -2) (undo-tree-id3147 . -2) (undo-tree-id3148 . -2) (undo-tree-id3149 . -2) (undo-tree-id3150 . -2) (undo-tree-id3151 . -2) (undo-tree-id3152 . -2) (undo-tree-id3153 . -2) (undo-tree-id3154 . -2) (undo-tree-id3155 . -2) (undo-tree-id3156 . -2) (undo-tree-id3157 . -2) (undo-tree-id3158 . -2) (undo-tree-id3159 . -2) (undo-tree-id3160 . -2) (undo-tree-id3161 . -2) (undo-tree-id3162 . -2) (undo-tree-id3163 . -2) (undo-tree-id3164 . -2) (undo-tree-id3165 . -2) (undo-tree-id3166 . -2) (undo-tree-id3167 . -2) (undo-tree-id3168 . -2) (undo-tree-id3169 . -2) (undo-tree-id3170 . -2) (undo-tree-id3171 . -2) (undo-tree-id3172 . -2) (undo-tree-id3173 . -2) (undo-tree-id3174 . -2) (undo-tree-id3175 . -2) (undo-tree-id3176 . -2) (undo-tree-id3177 . -2) (undo-tree-id3178 . -2) (undo-tree-id3179 . -2) (undo-tree-id3180 . -2) (undo-tree-id3181 . -2) (undo-tree-id3182 . -2) (undo-tree-id3183 . -2) (undo-tree-id3184 . -2) (undo-tree-id3185 . -2) (undo-tree-id3186 . -2) (undo-tree-id3187 . -2) (undo-tree-id3188 . -2) (undo-tree-id3189 . -2) (undo-tree-id3190 . -2) (undo-tree-id3191 . -2) (undo-tree-id3192 . -2) (undo-tree-id3193 . -2) (undo-tree-id3194 . -2) (undo-tree-id3195 . -2) (undo-tree-id3196 . -2) (undo-tree-id3197 . -2) (undo-tree-id3198 . -2) (undo-tree-id3199 . -2) (undo-tree-id3200 . -2) (undo-tree-id3201 . -2) (undo-tree-id3202 . -2) (undo-tree-id3203 . -2) (undo-tree-id3204 . -2) (undo-tree-id3205 . -2) (undo-tree-id3206 . -2) (undo-tree-id3207 . -2) (undo-tree-id3208 . -2) (undo-tree-id3209 . -2) (undo-tree-id3210 . -2) (undo-tree-id3211 . -2) (undo-tree-id3212 . -2) (undo-tree-id3213 . -2) (undo-tree-id3214 . -2) (undo-tree-id3215 . -2) (undo-tree-id3216 . -2) (undo-tree-id3217 . -2) (undo-tree-id3218 . -2) (undo-tree-id3219 . -2) (undo-tree-id3220 . -2) (undo-tree-id3221 . -2) (undo-tree-id3222 . -2) (undo-tree-id3223 . -2) (undo-tree-id3224 . -2) (undo-tree-id3225 . -2) (undo-tree-id3226 . -2) (undo-tree-id3227 . -2) (undo-tree-id3228 . -2) (undo-tree-id3229 . -2) (undo-tree-id3230 . -2) (undo-tree-id3231 . -2) (undo-tree-id3232 . -2) (undo-tree-id3233 . -2) (undo-tree-id3234 . -2) (undo-tree-id3235 . -2) (undo-tree-id3236 . -2) (undo-tree-id3237 . -2) (undo-tree-id3238 . -2) 843 (840 . 843) 839) nil (26461 56292 168891 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 868 . 869) (nil fontified nil 841 . 869) (841 . 869)) nil (26461 56292 168821 139000) 0 nil])
([nil nil ((851 . 852) (843 . 851) (840 . 843) (864 . 865) (#(":" 0 1 (fontified t)) . -864) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) 865 (841 . 843) (862 . 863) (#("," 0 1 (c-type c-decl-id-start fontified t)) . -862) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (#(" " 0 1 (face whitespace-space fontified t)) . -863) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -864) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -865) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -866) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (#(" " 0 1 (face whitespace-space fontified t)) . -867) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (#("n" 0 1 (face font-lock-variable-name-face rear-nonsticky t fontified t)) . -868) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) 869) nil (26461 56292 168772 966000) 0 nil])
([nil nil ((#("  size_t size;
" 0 2 (face whitespace-space fontified t) 2 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t) 8 9 (face whitespace-space fontified t) 9 13 (face font-lock-variable-name-face fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 878) (undo-tree-id1122 . -14) (undo-tree-id1123 . -10) (undo-tree-id1124 . -10) (undo-tree-id1125 . -10) (undo-tree-id1126 . -10) (undo-tree-id1127 . -10) (undo-tree-id1128 . -10) (undo-tree-id1129 . -10) (undo-tree-id1130 . -10) (undo-tree-id1131 . -10) (undo-tree-id1132 . -10) (undo-tree-id1133 . -10) (undo-tree-id1134 . -10) (undo-tree-id1135 . -10) (undo-tree-id1136 . -10) (undo-tree-id1137 . -10) (undo-tree-id1138 . -10) (undo-tree-id1139 . -10) (undo-tree-id1140 . -10) (undo-tree-id1141 . -10) (undo-tree-id1142 . -10) (undo-tree-id1143 . -10) (undo-tree-id1144 . -10) (undo-tree-id1145 . -10) (undo-tree-id1146 . -10) (undo-tree-id1147 . -10) (undo-tree-id1148 . -10) (undo-tree-id1149 . -10) (undo-tree-id1150 . -10) (undo-tree-id1151 . -10) (undo-tree-id1152 . -10) (undo-tree-id1153 . -10) (undo-tree-id1154 . -10) (undo-tree-id1155 . -10) (undo-tree-id1156 . -10) (undo-tree-id1157 . -10) (undo-tree-id1158 . -10) (undo-tree-id1159 . -10) (undo-tree-id1160 . -10) (undo-tree-id1161 . -10) (undo-tree-id1162 . -10) (undo-tree-id1163 . -10) (undo-tree-id1164 . -10) (undo-tree-id1165 . -10) (undo-tree-id1166 . -10) (undo-tree-id1167 . -10) (undo-tree-id1168 . -10) (undo-tree-id1169 . -10) (undo-tree-id1170 . -10) (undo-tree-id1171 . -10) (undo-tree-id1172 . -10) (undo-tree-id1173 . -10) (undo-tree-id1174 . -10) (undo-tree-id1175 . -10) (undo-tree-id1176 . -10) (undo-tree-id1177 . -10) (undo-tree-id1178 . -10) (undo-tree-id1179 . -10) (undo-tree-id1180 . -10) (undo-tree-id1181 . -10) (undo-tree-id1182 . -10) (undo-tree-id1183 . -10) (undo-tree-id1184 . -10) (undo-tree-id1185 . -10) (undo-tree-id1186 . -10) (undo-tree-id1187 . -10) (undo-tree-id1188 . -10) (undo-tree-id1189 . -10) (undo-tree-id1190 . -10) (undo-tree-id1191 . -10) (undo-tree-id1192 . -10) (undo-tree-id1193 . -15) 888) nil (26461 56292 167339 435000) 0 nil])
([nil nil ((#("  graph_vertex **vertices;
" 0 2 (face whitespace-space fontified t) 2 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face c-type c-decl-id-start fontified t) 14 15 (face whitespace-space fontified t) 15 17 (fontified t) 17 25 (face font-lock-variable-name-face fontified t) 25 26 (fontified t) 26 27 (fontified t)) . 878) (undo-tree-id944 . -26) (undo-tree-id945 . -10) (undo-tree-id946 . -26) (undo-tree-id947 . -10) (undo-tree-id948 . -10) (undo-tree-id949 . -10) (undo-tree-id950 . -10) (undo-tree-id951 . -10) (undo-tree-id952 . -10) (undo-tree-id953 . -10) (undo-tree-id954 . -10) (undo-tree-id955 . -10) (undo-tree-id956 . -10) (undo-tree-id957 . -10) (undo-tree-id958 . -10) (undo-tree-id959 . -10) (undo-tree-id960 . -10) (undo-tree-id961 . -10) (undo-tree-id962 . -10) (undo-tree-id963 . -10) (undo-tree-id964 . -10) (undo-tree-id965 . -10) (undo-tree-id966 . -10) (undo-tree-id967 . -10) (undo-tree-id968 . -10) (undo-tree-id969 . -10) (undo-tree-id970 . -10) (undo-tree-id971 . -10) (undo-tree-id972 . -10) (undo-tree-id973 . -10) (undo-tree-id974 . -10) (undo-tree-id975 . -10) (undo-tree-id976 . -10) (undo-tree-id977 . -10) (undo-tree-id978 . -10) (undo-tree-id979 . -10) (undo-tree-id980 . -10) (undo-tree-id981 . -10) (undo-tree-id982 . -10) (undo-tree-id983 . -10) (undo-tree-id984 . -10) (undo-tree-id985 . -10) (undo-tree-id986 . -10) (undo-tree-id987 . -10) (undo-tree-id988 . -10) (undo-tree-id989 . -10) (undo-tree-id990 . -10) (undo-tree-id991 . -10) (undo-tree-id992 . -10) (undo-tree-id993 . -10) (undo-tree-id994 . -10) (undo-tree-id995 . -10) (undo-tree-id996 . -10) (undo-tree-id997 . -10) (undo-tree-id998 . -10) (undo-tree-id999 . -10) (undo-tree-id1000 . -10) (undo-tree-id1001 . -10) (undo-tree-id1002 . -10) (undo-tree-id1003 . -10) (undo-tree-id1004 . -10) (undo-tree-id1005 . -10) (undo-tree-id1006 . -10) (undo-tree-id1007 . -10) (undo-tree-id1008 . -10) (undo-tree-id1009 . -10) (undo-tree-id1010 . -10) (undo-tree-id1011 . -10) (undo-tree-id1012 . -10) (undo-tree-id1013 . -10) (undo-tree-id1014 . -10) (undo-tree-id1015 . -10) (undo-tree-id1016 . -10) (undo-tree-id1017 . -10) (undo-tree-id1018 . -10) (undo-tree-id1019 . -10) (undo-tree-id1020 . -10) (undo-tree-id1021 . -10) (undo-tree-id1022 . -10) (undo-tree-id1023 . -10) (undo-tree-id1024 . -10) (undo-tree-id1025 . -10) (undo-tree-id1026 . -10) (undo-tree-id1027 . -10) (undo-tree-id1028 . -10) (undo-tree-id1029 . -10) (undo-tree-id1030 . -10) (undo-tree-id1031 . -10) (undo-tree-id1032 . -10) (undo-tree-id1033 . -10) (undo-tree-id1034 . -10) (undo-tree-id1035 . -10) (undo-tree-id1036 . -10) (undo-tree-id1037 . -10) (undo-tree-id1038 . -10) (undo-tree-id1039 . -10) (undo-tree-id1040 . -10) (undo-tree-id1041 . -10) (undo-tree-id1042 . -10) (undo-tree-id1043 . -10) (undo-tree-id1044 . -10) (undo-tree-id1045 . -10) (undo-tree-id1046 . -10) (undo-tree-id1047 . -10) (undo-tree-id1048 . -10) (undo-tree-id1049 . -10) (undo-tree-id1050 . -10) (undo-tree-id1051 . -10) (undo-tree-id1052 . -10) (undo-tree-id1053 . -10) (undo-tree-id1054 . -10) (undo-tree-id1055 . -10) (undo-tree-id1056 . -10) (undo-tree-id1057 . -10) (undo-tree-id1058 . -10) (undo-tree-id1059 . -10) (undo-tree-id1060 . -10) (undo-tree-id1061 . -10) (undo-tree-id1062 . -10) (undo-tree-id1063 . -10) (undo-tree-id1064 . -10) (undo-tree-id1065 . -10) (undo-tree-id1066 . -10) (undo-tree-id1067 . -10) (undo-tree-id1068 . -10) (undo-tree-id1069 . -10) (undo-tree-id1070 . -10) (undo-tree-id1071 . -10) (undo-tree-id1072 . -10) (undo-tree-id1073 . -10) (undo-tree-id1074 . -10) (undo-tree-id1075 . -10) (undo-tree-id1076 . -10) (undo-tree-id1077 . -10) (undo-tree-id1078 . -10) (undo-tree-id1079 . -10) (undo-tree-id1080 . -10) (undo-tree-id1081 . -10) (undo-tree-id1082 . -10) (undo-tree-id1083 . -10) (undo-tree-id1084 . -10) (undo-tree-id1085 . -10) (undo-tree-id1086 . -10) (undo-tree-id1087 . -10) (undo-tree-id1088 . -10) (undo-tree-id1089 . -10) (undo-tree-id1090 . -10) (undo-tree-id1091 . -10) (undo-tree-id1092 . -10) (undo-tree-id1093 . -10) (undo-tree-id1094 . -10) (undo-tree-id1095 . -10) (undo-tree-id1096 . -10) (undo-tree-id1097 . -10) (undo-tree-id1098 . -10) (undo-tree-id1099 . -10) (undo-tree-id1100 . -10) (undo-tree-id1101 . -10) (undo-tree-id1102 . -10) (undo-tree-id1103 . -10) (undo-tree-id1104 . -10) (undo-tree-id1105 . -10) (undo-tree-id1106 . -10) (undo-tree-id1107 . -10) (undo-tree-id1108 . -10) (undo-tree-id1109 . -10) (undo-tree-id1110 . -10) (undo-tree-id1111 . -10) (undo-tree-id1112 . -10) (undo-tree-id1113 . -10) (undo-tree-id1114 . -10) (undo-tree-id1115 . -10) (undo-tree-id1116 . -10) (undo-tree-id1117 . -10) (undo-tree-id1118 . -10) (undo-tree-id1119 . -10) (undo-tree-id1120 . -10) (undo-tree-id1121 . -27) 888) nil (26461 56292 167097 297000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1016 . 1017) (nil fontified nil 921 . 1017) (nil fontified nil 920 . 921) (nil fontified nil 889 . 920) (nil fontified nil 888 . 889) (888 . 1017) (t 26461 56292 183551 327000)) nil (26461 56559 523256 505000) 0 nil])
([nil nil ((#("graph" 0 5 (c-in-sws t face font-lock-comment-face fontified t)) . 910) (undo-tree-id3282 . -4) (undo-tree-id3283 . 4)) nil (26461 56559 523254 211000) 0 nil])
([nil nil ((995 . 1000) (#("graph" 0 5 (face font-lock-function-name-face fontified t)) . -995) (undo-tree-id3242 . -5) (undo-tree-id3243 . -5) (undo-tree-id3244 . -5) (undo-tree-id3245 . -5) (undo-tree-id3246 . -5) (undo-tree-id3247 . -5) (undo-tree-id3248 . -5) (undo-tree-id3249 . -5) (undo-tree-id3250 . -5) (undo-tree-id3251 . -5) (undo-tree-id3252 . -5) (undo-tree-id3253 . -5) (undo-tree-id3254 . -5) (undo-tree-id3255 . -5) (undo-tree-id3256 . -5) (undo-tree-id3257 . -5) (undo-tree-id3258 . -5) (undo-tree-id3259 . -5) (undo-tree-id3260 . -5) (undo-tree-id3261 . -5) (undo-tree-id3262 . -5) (undo-tree-id3263 . -5) (undo-tree-id3264 . -5) (undo-tree-id3265 . -5) (undo-tree-id3266 . -5) (undo-tree-id3267 . -5) (undo-tree-id3268 . -5) (undo-tree-id3269 . -5) (undo-tree-id3270 . -5) (undo-tree-id3271 . -5) (undo-tree-id3272 . -5) (undo-tree-id3273 . -5) (undo-tree-id3274 . -5) (undo-tree-id3275 . -5) (undo-tree-id3276 . -5) (undo-tree-id3277 . -5) 1000 (934 . 939) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . 934) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . 934) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . 934) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . 934) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . 934) (948 . 953) (#("h" 0 1 (face font-lock-type-face fontified t)) . 948) (#("p" 0 1 (face font-lock-type-face fontified t)) . 948) (#("a" 0 1 (face font-lock-type-face fontified t)) . 948) (#("r" 0 1 (face font-lock-type-face fontified t)) . 948) (#("g" 0 1 (face font-lock-type-face fontified t)) . 948) (920 . 924) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -920) (undo-tree-id3278 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -921) (undo-tree-id3279 . -1) 922 (910 . 922) (#("q" 0 1 (face font-lock-comment-face fontified t)) . -910) (undo-tree-id3280 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -911) (undo-tree-id3281 . -1) 912 (910 . 912)) nil (26461 56559 523243 173000) 0 nil])
([nil nil ((#("graph" 0 5 (face font-lock-type-face fontified t)) . 1010) (undo-tree-id3809 . -4) (undo-tree-id3810 . -5) (t 26461 56559 587885 651000)) nil (26461 56571 31467 372000) 0 nil])
([nil nil ((1010 . 1015)) nil (26461 56571 31464 59000) 0 nil])
([nil nil ((980 . 985) (#("g" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -980) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -981) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -982) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -983) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -984) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) 985) nil (26461 56571 31447 74000) 0 nil])
([nil nil ((1152 . 1158) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#(" " 0 1 (face whitespace-space fontified t)) . 1152) (undo-tree-id3815 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("i" 0 1 (face font-lock-type-face fontified t)) . 1152) (#(" " 0 1 (face whitespace-space fontified t)) . 1152) (#("," 0 1 (c-type c-decl-arg-start fontified t)) . 1152) (#("y" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#(" " 0 1 (face whitespace-space fontified t)) . 1152) (#("*" 0 1 (fontified t)) . 1152) (#("*" 0 1 (fontified t)) . 1152) (#(" " 0 1 (face whitespace-space fontified t)) . 1152) (#("x" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("t" 0 1 (face font-lock-variable-name-face fontified nil)) . 1152) (#("r" 0 1 (face font-lock-variable-name-face fontified nil)) . 1152) (#("e" 0 1 (face font-lock-variable-name-face fontified nil)) . 1152) (#("v" 0 1 (face font-lock-variable-name-face fontified nil)) . 1152) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . 1152) (1151 . 1152) (1145 . 1151) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . 1135) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . 1135) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . 1135) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . 1135) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . 1135) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . 1135) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . 1135) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . 1135) (1130 . 1135) (t 26461 56571 57898 141000)) nil (26461 56706 139416 248000) 0 nil])
([nil nil ((#("heap_min" 0 8 (face font-lock-function-name-face fontified t)) . -1612) (1620 . 1625) (#("heap_min" 0 8 (face font-lock-function-name-face fontified t)) . -1476) (1484 . 1489) (#("heap_min" 0 8 (face font-lock-function-name-face fontified t)) . -1363) (1371 . 1376) (#("heap_min" 0 8 (face font-lock-function-name-face fontified t)) . -1231) (1239 . 1244)) nil (26461 56706 139409 263000) 0 nil])
([nil nil ((nil fontified t 1577 . 1578) (nil face font-lock-variable-name-face 1577 . 1578) (nil fontified t 1576 . 1577) (nil face whitespace-space 1576 . 1577) (nil fontified t 1573 . 1576) (nil face font-lock-type-face 1573 . 1576) (nil fontified t 1572 . 1573) (nil face whitespace-space 1572 . 1573) (nil fontified t 1571 . 1572) (nil c-type c-decl-arg-start 1571 . 1572) (nil fontified t 1569 . 1571) (nil face font-lock-variable-name-face 1569 . 1571) (#("graph_vertex ** array, int n" 0 2 (face font-lock-type-face fontified t) 2 6 (face font-lock-type-face fontified t) 6 12 (face font-lock-type-face fontified t) 12 13 (face whitespace-space fontified t) 13 15 (fontified t) 15 16 (face whitespace-space fontified t) 16 21 (face font-lock-variable-name-face fontified t) 21 22 (c-type c-decl-arg-start fontified t) 22 23 (face whitespace-space fontified t) 23 26 (face font-lock-type-face fontified t) 26 27 (face whitespace-space fontified t) 27 28 (face font-lock-variable-name-face fontified t)) . -1569) (1597 . 1606) (nil fontified t 1466 . 1467) (nil face font-lock-variable-name-face 1466 . 1467) (nil fontified t 1465 . 1466) (nil face whitespace-space 1465 . 1466) (nil fontified t 1462 . 1465) (nil face font-lock-type-face 1462 . 1465) (nil fontified t 1461 . 1462) (nil face whitespace-space 1461 . 1462) (nil fontified t 1460 . 1461) (nil c-type c-decl-arg-start 1460 . 1461) (nil fontified t 1458 . 1460) (nil face font-lock-variable-name-face 1458 . 1460) (#("graph_vertex ** array, int n" 0 6 (face font-lock-type-face fontified t) 6 12 (face font-lock-type-face fontified t) 12 13 (face whitespace-space fontified t) 13 15 (fontified t) 15 16 (face whitespace-space fontified t) 16 21 (face font-lock-variable-name-face fontified t) 21 22 (c-type c-decl-arg-start fontified t) 22 23 (face whitespace-space fontified t) 23 26 (face font-lock-type-face fontified t) 26 27 (face whitespace-space fontified t) 27 28 (face font-lock-variable-name-face fontified t)) . -1458) (1486 . 1495) (nil fontified t 1371 . 1372) (nil face font-lock-variable-name-face 1371 . 1372) (nil fontified t 1370 . 1371) (nil face whitespace-space 1370 . 1371) (nil fontified t 1367 . 1370) (nil face font-lock-type-face 1367 . 1370) (nil fontified t 1366 . 1367) (nil face whitespace-space 1366 . 1367) (nil fontified t 1365 . 1366) (nil c-type c-decl-arg-start 1365 . 1366) (nil fontified t 1363 . 1365) (nil face font-lock-variable-name-face 1363 . 1365) (#("graph_vertex ** array, int n" 0 6 (face font-lock-type-face fontified t) 6 12 (face font-lock-type-face fontified t) 12 13 (face whitespace-space fontified t) 13 15 (fontified t) 15 16 (face whitespace-space fontified t) 16 21 (face font-lock-variable-name-face fontified t) 21 22 (c-type c-decl-arg-start fontified t) 22 23 (face whitespace-space fontified t) 23 26 (face font-lock-type-face fontified t) 26 27 (face whitespace-space fontified t) 27 28 (face font-lock-variable-name-face fontified t)) . -1363) (1391 . 1400) (nil fontified t 1254 . 1255) (nil face font-lock-variable-name-face 1254 . 1255) (nil fontified t 1253 . 1254) (nil face whitespace-space 1253 . 1254) (nil fontified t 1250 . 1253) (nil face font-lock-type-face 1250 . 1253) (nil fontified t 1249 . 1250) (nil face whitespace-space 1249 . 1250) (nil fontified t 1248 . 1249) (nil c-type c-decl-arg-start 1248 . 1249) (nil fontified t 1246 . 1248) (nil face font-lock-variable-name-face 1246 . 1248) (#("graph_vertex ** array, int n" 0 6 (face font-lock-type-face fontified t) 6 12 (face font-lock-type-face fontified t) 12 13 (face whitespace-space fontified t) 13 15 (fontified t) 15 16 (face whitespace-space fontified t) 16 21 (face font-lock-variable-name-face fontified t) 21 22 (c-type c-decl-arg-start fontified t) 22 23 (face whitespace-space fontified t) 23 26 (face font-lock-type-face fontified t) 26 27 (face whitespace-space fontified t) 27 28 (face font-lock-variable-name-face fontified t)) . -1246) (1274 . 1283)) nil (26461 56706 139406 118000) 0 nil])
([nil nil ((#("queue" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t)) . 1153) (undo-tree-id3813 . -4) (undo-tree-id3814 . 5)) nil (26461 56706 139397 862000) 0 nil])
([nil nil ((1587 . 1589) (#("f" 0 1 (fontified t)) . -1587) (undo-tree-id3811 . -1) 1588 (1585 . 1588) (#("q" 0 1 (face font-lock-variable-name-face fontified t)) . 1585) (1471 . 1475) (#("q" 0 1 (face font-lock-variable-name-face fontified t)) . 1471) (1373 . 1377) (#("q" 0 1 (face font-lock-variable-name-face fontified t)) . 1373) (1253 . 1257) (#("q" 0 1 (face font-lock-variable-name-face fontified t)) . -1253) (undo-tree-id3812 . -1) 1254 (1153 . 1157)) nil (26461 56706 139392 336000) 0 nil])
([nil nil ((#(" (assuming array is large enough)." 0 1 (face whitespace-space fontified t c-in-sws t) 1 10 (face font-lock-comment-face fontified t c-in-sws t) 10 11 (face whitespace-space fontified t c-in-sws t) 11 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face whitespace-space fontified t c-in-sws t) 17 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face whitespace-space fontified t c-in-sws t) 20 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face whitespace-space fontified t c-in-sws t) 26 34 (face font-lock-comment-face fontified t c-in-sws t)) . 1519) (undo-tree-id3816 . -33) (undo-tree-id3817 . -34) (undo-tree-id3818 . -34) (t 26461 56706 192036 590000)) nil (26461 56719 960788 268000) 0 nil])
([nil nil ((1097 . 1100) (#(" " 0 1 (face whitespace-space fontified nil)) . -1097) (nil face nil 1096 . 1097) (1096 . 1097) (1100 . 1101) (#("
" 0 1 (face font-lock-comment-face fontified t)) . 1100) (#(" * " 0 1 (face whitespace-space fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face whitespace-space fontified t c-in-sws t)) . 1101) (t 26461 56720 19049 939000) 1058) nil (26461 56725 288027 808000) 0 nil])
([nil nil ((#("/*
 * Get the number of vertices in the graph
 */
size_t graph_size (const graph * self);

" 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face whitespace-space fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face whitespace-space fontified t c-in-sws t) 6 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face whitespace-space fontified t c-in-sws t) 10 13 (face font-lock-comment-face fontified t c-in-sws t) 13 14 (face whitespace-space fontified t c-in-sws t) 14 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face whitespace-space fontified t c-in-sws t) 21 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face whitespace-space fontified t c-in-sws t) 24 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face whitespace-space fontified t c-in-sws t) 33 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face whitespace-space fontified t c-in-sws t) 36 39 (face font-lock-comment-face fontified t c-in-sws t) 39 40 (face whitespace-space fontified t c-in-sws t) 40 46 (face font-lock-comment-face fontified t c-in-sws t) 46 47 (face whitespace-space fontified t c-in-sws t) 47 49 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 49 50 (c-in-sws t fontified t) 50 51 (face font-lock-type-face fontified t c-is-sws t) 51 55 (face font-lock-type-face fontified t) 55 56 (face font-lock-type-face c-type c-decl-id-start fontified t) 56 57 (face whitespace-space fontified t) 57 67 (face font-lock-function-name-face fontified t) 67 68 (face whitespace-space fontified t) 68 69 (c-type c-decl-arg-start fontified t) 69 74 (face font-lock-keyword-face fontified t) 74 75 (face whitespace-space fontified t) 75 80 (face font-lock-type-face fontified t) 80 81 (face whitespace-space fontified t) 81 82 (fontified t) 82 83 (face whitespace-space fontified t) 83 87 (face font-lock-variable-name-face fontified t) 87 91 (fontified t)) . 497) (undo-tree-id3819 . -90) (undo-tree-id3820 . -90) (undo-tree-id3821 . -90) (undo-tree-id3822 . -50) (undo-tree-id3823 . -50) (undo-tree-id3824 . -91) (undo-tree-id3825 . -91) (undo-tree-id3826 . -91) (undo-tree-id3827 . -91) (undo-tree-id3828 . -91) (undo-tree-id3829 . -91) (undo-tree-id3830 . -91) (undo-tree-id3831 . -91) (undo-tree-id3832 . -91) (undo-tree-id3833 . -91) (undo-tree-id3834 . -91) (undo-tree-id3835 . -91) (undo-tree-id3836 . -91) (undo-tree-id3837 . -91) (undo-tree-id3838 . -91) (undo-tree-id3839 . -91) (undo-tree-id3840 . -91) (undo-tree-id3841 . -91) (undo-tree-id3842 . -91) (undo-tree-id3843 . -91) (undo-tree-id3844 . -91) (undo-tree-id3845 . -91) (undo-tree-id3846 . -91) (undo-tree-id3847 . -91) (undo-tree-id3848 . -91) (undo-tree-id3849 . -91) (undo-tree-id3850 . -91) (undo-tree-id3851 . -91) (undo-tree-id3852 . -91) (undo-tree-id3853 . -91) (undo-tree-id3854 . -91) (undo-tree-id3855 . -91) (undo-tree-id3856 . -91) (undo-tree-id3857 . -90) (undo-tree-id3858 . -90) (undo-tree-id3859 . -90) (undo-tree-id3860 . -90) (undo-tree-id3861 . -90) (undo-tree-id3862 . -90) (undo-tree-id3863 . -90) (undo-tree-id3864 . -90) (undo-tree-id3865 . -90) (undo-tree-id3866 . -90) (undo-tree-id3867 . -90) (undo-tree-id3868 . -90) (undo-tree-id3869 . -90) (undo-tree-id3870 . -90) (undo-tree-id3871 . -90) (undo-tree-id3872 . -90) (undo-tree-id3873 . -90) (undo-tree-id3874 . -90) (undo-tree-id3875 . -90) (undo-tree-id3876 . -90) (undo-tree-id3877 . -90) (undo-tree-id3878 . -90) (undo-tree-id3879 . -90) (undo-tree-id3880 . -90) (undo-tree-id3881 . -90) (undo-tree-id3882 . -90) (undo-tree-id3883 . -90) (undo-tree-id3884 . -90) (undo-tree-id3885 . -90) (undo-tree-id3886 . -90) (undo-tree-id3887 . -90) (undo-tree-id3888 . -90) (undo-tree-id3889 . -90) (undo-tree-id3890 . -50) (undo-tree-id3891 . -50) (undo-tree-id3892 . -50) (undo-tree-id3893 . -50) (undo-tree-id3894 . -50) (undo-tree-id3895 . -50) (undo-tree-id3896 . -50) (undo-tree-id3897 . -50) (undo-tree-id3898 . -50) (undo-tree-id3899 . -50) (undo-tree-id3900 . -50) (undo-tree-id3901 . -50) (undo-tree-id3902 . -50) (undo-tree-id3903 . -50) (undo-tree-id3904 . -50) (undo-tree-id3905 . -50) (undo-tree-id3906 . -50) (undo-tree-id3907 . -50) (undo-tree-id3908 . -50) (undo-tree-id3909 . -50) (undo-tree-id3910 . -50) (undo-tree-id3911 . -50) (undo-tree-id3912 . -50) (undo-tree-id3913 . -50) (undo-tree-id3914 . -50) (undo-tree-id3915 . -50) (undo-tree-id3916 . -50) (undo-tree-id3917 . -50) (undo-tree-id3918 . -50) (undo-tree-id3919 . -50) (undo-tree-id3920 . -50) (undo-tree-id3921 . -50) (undo-tree-id3922 . -50) (undo-tree-id3923 . -90) (undo-tree-id3924 . -90) (undo-tree-id3925 . -90) (undo-tree-id3926 . -90) (undo-tree-id3927 . -90) (undo-tree-id3928 . -90) (undo-tree-id3929 . -90) (undo-tree-id3930 . -90) (undo-tree-id3931 . -90) (undo-tree-id3932 . -90) (undo-tree-id3933 . -90) (undo-tree-id3934 . -90) (undo-tree-id3935 . -90) (undo-tree-id3936 . -90) (undo-tree-id3937 . -90) (undo-tree-id3938 . -90) (undo-tree-id3939 . -90) (undo-tree-id3940 . -90) (undo-tree-id3941 . -90) (undo-tree-id3942 . -90) (undo-tree-id3943 . -90) (undo-tree-id3944 . -90) (undo-tree-id3945 . -90) (undo-tree-id3946 . -90) (undo-tree-id3947 . -90) (undo-tree-id3948 . -90) (undo-tree-id3949 . -90) (undo-tree-id3950 . -90) (undo-tree-id3951 . -90) (undo-tree-id3952 . -90) (undo-tree-id3953 . -90) (undo-tree-id3954 . -90) (undo-tree-id3955 . -90) (undo-tree-id3956 . -90) (undo-tree-id3957 . -90) (undo-tree-id3958 . -90) (undo-tree-id3959 . -90) (undo-tree-id3960 . -90) (undo-tree-id3961 . -90) (undo-tree-id3962 . -90) (undo-tree-id3963 . -90) (undo-tree-id3964 . -90) (undo-tree-id3965 . -90) (undo-tree-id3966 . -90) (undo-tree-id3967 . -90) (undo-tree-id3968 . -90) (undo-tree-id3969 . -90) (undo-tree-id3970 . -90) (undo-tree-id3971 . -90) (undo-tree-id3972 . -90) (undo-tree-id3973 . -90) (undo-tree-id3974 . -90) (undo-tree-id3975 . -90) (undo-tree-id3976 . -90) (undo-tree-id3977 . -90) (undo-tree-id3978 . -90) (undo-tree-id3979 . -90) (undo-tree-id3980 . -90) (undo-tree-id3981 . -90) (undo-tree-id3982 . -90) (undo-tree-id3983 . -90) (undo-tree-id3984 . -90) (undo-tree-id3985 . -90) (undo-tree-id3986 . -90) (undo-tree-id3987 . -90) (undo-tree-id3988 . -90) (undo-tree-id3989 . -90) (undo-tree-id3990 . -90) (undo-tree-id3991 . -50) (undo-tree-id3992 . -50) (undo-tree-id3993 . -50) (undo-tree-id3994 . -50) (undo-tree-id3995 . -50) (undo-tree-id3996 . -50) (undo-tree-id3997 . -50) (undo-tree-id3998 . -50) (undo-tree-id3999 . -50) (undo-tree-id4000 . -50) (undo-tree-id4001 . -50) (undo-tree-id4002 . -50) (undo-tree-id4003 . -50) (undo-tree-id4004 . -50) (undo-tree-id4005 . -50) (undo-tree-id4006 . -50) (undo-tree-id4007 . -50) (undo-tree-id4008 . -50) (undo-tree-id4009 . -50) (undo-tree-id4010 . -50) (undo-tree-id4011 . -50) (undo-tree-id4012 . -50) (undo-tree-id4013 . -50) (undo-tree-id4014 . -50) (undo-tree-id4015 . -50) (undo-tree-id4016 . -50) (undo-tree-id4017 . -50) (undo-tree-id4018 . -50) (undo-tree-id4019 . -50) (undo-tree-id4020 . -50) (undo-tree-id4021 . -50) (undo-tree-id4022 . -50) (undo-tree-id4023 . -50) (undo-tree-id4024 . -46) (undo-tree-id4025 . -46) (undo-tree-id4026 . -46) (undo-tree-id4027 . -46) (undo-tree-id4028 . -46) (undo-tree-id4029 . -46) (undo-tree-id4030 . -46) (undo-tree-id4031 . -46) (undo-tree-id4032 . -46) (undo-tree-id4033 . -46) (undo-tree-id4034 . -46) (undo-tree-id4035 . -46) (undo-tree-id4036 . -46) (undo-tree-id4037 . -46) (undo-tree-id4038 . -46) (undo-tree-id4039 . -46) (undo-tree-id4040 . -46) (undo-tree-id4041 . -46) (undo-tree-id4042 . -46) (undo-tree-id4043 . -46) (undo-tree-id4044 . -46) (undo-tree-id4045 . -46) (undo-tree-id4046 . -46) (undo-tree-id4047 . -46) (undo-tree-id4048 . -46) (undo-tree-id4049 . -46) (undo-tree-id4050 . -46) (undo-tree-id4051 . -46) (undo-tree-id4052 . -46) (undo-tree-id4053 . -46) (undo-tree-id4054 . -46) (undo-tree-id4055 . -46) (undo-tree-id4056 . -46) (undo-tree-id4057 . -3) (undo-tree-id4058 . -3) (undo-tree-id4059 . -3) (undo-tree-id4060 . -3) (undo-tree-id4061 . -3) (undo-tree-id4062 . -3) (undo-tree-id4063 . -3) (undo-tree-id4064 . -3) (undo-tree-id4065 . -3) (undo-tree-id4066 . -3) (undo-tree-id4067 . -3) (undo-tree-id4068 . -3) (undo-tree-id4069 . -3) (undo-tree-id4070 . -3) (undo-tree-id4071 . -3) (undo-tree-id4072 . -3) (undo-tree-id4073 . -3) (undo-tree-id4074 . -3) (undo-tree-id4075 . -3) (undo-tree-id4076 . -3) (undo-tree-id4077 . -3) (undo-tree-id4078 . -3) (undo-tree-id4079 . -3) (undo-tree-id4080 . -3) (undo-tree-id4081 . -3) (undo-tree-id4082 . -3) (undo-tree-id4083 . -3) (undo-tree-id4084 . -3) (undo-tree-id4085 . -3) (undo-tree-id4086 . -3) (undo-tree-id4087 . -3) (undo-tree-id4088 . -3) (undo-tree-id4089 . -3) (undo-tree-id4090 . -91) (t 26461 56725 344055 44000)) nil (26461 56837 519227 266000) 0 nil])
([nil nil ((783 . 791) (#("array" 0 5 (face font-lock-variable-name-face fontified t)) . -783) (undo-tree-id4091 . -5) 788 (760 . 763) (#("z" 0 1 (face font-lock-variable-name-face fontified t)) . -760) (undo-tree-id4092 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -761) (undo-tree-id4093 . -1) 762 (759 . 762) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -759) (undo-tree-id4094 . -1) 760 (t 26461 56837 537158 273000)) nil (26461 56899 616016 755000) 0 nil])
([nil nil ((1074 . 1080) (#("t" 0 1 (face font-lock-type-face fontified t)) . 1074) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1074) (undo-tree-id4095 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1075) (undo-tree-id4096 . -1) 1076 (t 26461 56899 639212 252000)) nil (26461 57784 40571 98000) 0 nil])
([nil nil ((1395 . 1401) (#("size" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t)) . -1395) (undo-tree-id4097 . -4) (undo-tree-id4098 . -4) (undo-tree-id4099 . -4) (undo-tree-id4100 . -4) (undo-tree-id4101 . -4) (undo-tree-id4102 . -4) (undo-tree-id4103 . -4) (undo-tree-id4104 . -4) (undo-tree-id4105 . -4) (undo-tree-id4106 . -4) (undo-tree-id4107 . -4) (undo-tree-id4108 . -4) (undo-tree-id4109 . -4) (undo-tree-id4110 . -4) (undo-tree-id4111 . -4) (undo-tree-id4112 . -4) (undo-tree-id4113 . -4) (undo-tree-id4114 . -4) (undo-tree-id4115 . -4) (undo-tree-id4116 . -4) (undo-tree-id4117 . -4) (undo-tree-id4118 . -4) (undo-tree-id4119 . -4) (undo-tree-id4120 . -4) (undo-tree-id4121 . -4) (undo-tree-id4122 . -4) (undo-tree-id4123 . -4) (undo-tree-id4124 . -4) (undo-tree-id4125 . -4) (undo-tree-id4126 . -4) (undo-tree-id4127 . -4) (undo-tree-id4128 . -4) (undo-tree-id4129 . -4) (undo-tree-id4130 . -4) (undo-tree-id4131 . -4) (undo-tree-id4132 . -4) (undo-tree-id4133 . -4) (undo-tree-id4134 . -4) (undo-tree-id4135 . -4) (undo-tree-id4136 . -4) (undo-tree-id4137 . -4) (undo-tree-id4138 . -4) (undo-tree-id4139 . -4) (undo-tree-id4140 . -4) (undo-tree-id4141 . -4) (undo-tree-id4142 . -4) (undo-tree-id4143 . -4) (undo-tree-id4144 . -4) (undo-tree-id4145 . -4) (undo-tree-id4146 . -4) (undo-tree-id4147 . -4) (undo-tree-id4148 . -4) (undo-tree-id4149 . -4) (undo-tree-id4150 . -4) (undo-tree-id4151 . -4) (undo-tree-id4152 . -4) (undo-tree-id4153 . -4) (undo-tree-id4154 . -4) (undo-tree-id4155 . -4) (undo-tree-id4156 . -4) (undo-tree-id4157 . -4) (undo-tree-id4158 . -4) (undo-tree-id4159 . -4) (undo-tree-id4160 . -4) (undo-tree-id4161 . -4) (undo-tree-id4162 . -4) (undo-tree-id4163 . -4) (undo-tree-id4164 . -4) (undo-tree-id4165 . -4) (undo-tree-id4166 . -4) (undo-tree-id4167 . -4) (undo-tree-id4168 . -4) (undo-tree-id4169 . -4) (undo-tree-id4170 . -4) (undo-tree-id4171 . -4) (undo-tree-id4172 . -4) (undo-tree-id4173 . -4) (undo-tree-id4174 . -4) (undo-tree-id4175 . -4) (undo-tree-id4176 . -4) (undo-tree-id4177 . -4) (undo-tree-id4178 . -4) (undo-tree-id4179 . -4) (undo-tree-id4180 . -4) (undo-tree-id4181 . -4) (undo-tree-id4182 . -4) (undo-tree-id4183 . -4) (undo-tree-id4184 . -4) (undo-tree-id4185 . -4) (undo-tree-id4186 . -4) (undo-tree-id4187 . -4) (undo-tree-id4188 . -4) (undo-tree-id4189 . -4) (undo-tree-id4190 . -4) (undo-tree-id4191 . -4) (undo-tree-id4192 . -4) (undo-tree-id4193 . -4) (undo-tree-id4194 . -4) (undo-tree-id4195 . -4) (undo-tree-id4196 . -4) (undo-tree-id4197 . -4) (undo-tree-id4198 . -4) (undo-tree-id4199 . -4) (undo-tree-id4200 . -4) (undo-tree-id4201 . -4) (undo-tree-id4202 . -4) (undo-tree-id4203 . -4) (undo-tree-id4204 . -4) (undo-tree-id4205 . -4) (undo-tree-id4206 . -4) (undo-tree-id4207 . -4) (undo-tree-id4208 . -4) (undo-tree-id4209 . -4) (undo-tree-id4210 . -4) (undo-tree-id4211 . -4) (undo-tree-id4212 . -4) (undo-tree-id4213 . -4) (undo-tree-id4214 . -4) (undo-tree-id4215 . -4) (undo-tree-id4216 . -4) (undo-tree-id4217 . -4) (undo-tree-id4218 . -4) (undo-tree-id4219 . -4) (undo-tree-id4220 . -4) (undo-tree-id4221 . -4) (undo-tree-id4222 . -4) (undo-tree-id4223 . -4) (undo-tree-id4224 . -4) (undo-tree-id4225 . -4) (undo-tree-id4226 . -4) (undo-tree-id4227 . -4) (undo-tree-id4228 . -4) (undo-tree-id4229 . -4) (undo-tree-id4230 . -4) (undo-tree-id4231 . -4) (undo-tree-id4232 . -4) (undo-tree-id4233 . -4) (undo-tree-id4234 . -4) (undo-tree-id4235 . -4) (undo-tree-id4236 . -4) (undo-tree-id4237 . -4) (undo-tree-id4238 . -4) 1399 (1395 . 1399) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1395) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) 1396 (#("t" 0 1 (face font-lock-type-face fontified t)) . 1396) (#("n" 0 1 (face font-lock-type-face fontified t)) . 1396) (t 26461 57784 95848 76000)) nil (26461 58265 417051 484000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-space fontified t)) . 782) (t 26461 58265 471085 206000)) nil (26461 59273 580050 509000) 0 nil])
([nil nil ((#("void" 0 1 (face font-lock-type-face fontified t c-is-sws t) 1 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1574) (undo-tree-id4623 . -3) (undo-tree-id4624 . -4) (t 26461 58964 896445 516000)) nil (26461 59273 580049 572000) 0 nil])
([nil nil ((1574 . 1577)) nil (26461 59273 580047 40000) 0 nil])
([nil nil ((#(" given weights on the edges" 0 1 (face whitespace-space fontified t c-in-sws t) 1 6 (face font-lock-comment-face fontified t c-in-sws t) 6 7 (face whitespace-space fontified t c-in-sws t) 7 14 (face font-lock-comment-face fontified t c-in-sws t) 14 15 (face whitespace-space fontified t c-in-sws t) 15 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face whitespace-space fontified t c-in-sws t) 18 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face whitespace-space fontified t c-in-sws t) 22 27 (face font-lock-comment-face fontified t c-in-sws t)) . 1542) (undo-tree-id4349 . -26) (undo-tree-id4350 . -27) (undo-tree-id4351 . -27) (undo-tree-id4352 . -27) (undo-tree-id4353 . -27) (undo-tree-id4354 . -27) (undo-tree-id4355 . -27) (undo-tree-id4356 . -27) (undo-tree-id4357 . -27) (undo-tree-id4358 . -27) (undo-tree-id4359 . -27) (undo-tree-id4360 . -27) (undo-tree-id4361 . -27) (undo-tree-id4362 . -27) (undo-tree-id4363 . -27) (undo-tree-id4364 . -27) (undo-tree-id4365 . -27) (undo-tree-id4366 . -27) (undo-tree-id4367 . -27) (undo-tree-id4368 . -27) (undo-tree-id4369 . -27) (undo-tree-id4370 . -27) (undo-tree-id4371 . -27) (undo-tree-id4372 . -27) (undo-tree-id4373 . -27) (undo-tree-id4374 . -27) (undo-tree-id4375 . -27) (undo-tree-id4376 . -27) (undo-tree-id4377 . -27) (undo-tree-id4378 . -27) (undo-tree-id4379 . -27) (undo-tree-id4380 . -27) (undo-tree-id4381 . -27) (undo-tree-id4382 . -27) (undo-tree-id4383 . -27) (undo-tree-id4384 . -27) (undo-tree-id4385 . -27) (undo-tree-id4386 . -27) (undo-tree-id4387 . -27) (undo-tree-id4388 . -27) (undo-tree-id4389 . -27) (undo-tree-id4390 . -27) (undo-tree-id4391 . -27) (undo-tree-id4392 . -27) (undo-tree-id4393 . -27) (undo-tree-id4394 . -27) (undo-tree-id4395 . -27) (undo-tree-id4396 . -27) (undo-tree-id4397 . -27) (undo-tree-id4398 . -27) (undo-tree-id4399 . -27) (undo-tree-id4400 . -27) (undo-tree-id4401 . -27) (undo-tree-id4402 . -27) (undo-tree-id4403 . -27) (undo-tree-id4404 . -27) (undo-tree-id4405 . -27) (undo-tree-id4406 . -27) (undo-tree-id4407 . -27) (undo-tree-id4408 . -27) (undo-tree-id4409 . -27) (undo-tree-id4410 . -27) (undo-tree-id4411 . -27) (undo-tree-id4412 . -27) (undo-tree-id4413 . -27) (undo-tree-id4414 . -27) (undo-tree-id4415 . -27) (undo-tree-id4416 . -27) (undo-tree-id4417 . -22) (undo-tree-id4418 . -22) (undo-tree-id4419 . -22) (undo-tree-id4420 . -22) (undo-tree-id4421 . -22) (undo-tree-id4422 . -22) (undo-tree-id4423 . -22) (undo-tree-id4424 . -22) (undo-tree-id4425 . -22) (undo-tree-id4426 . -22) (undo-tree-id4427 . -22) (undo-tree-id4428 . -22) (undo-tree-id4429 . -22) (undo-tree-id4430 . -22) (undo-tree-id4431 . -22) (undo-tree-id4432 . -22) (undo-tree-id4433 . -22) (undo-tree-id4434 . -22) (undo-tree-id4435 . -22) (undo-tree-id4436 . -22) (undo-tree-id4437 . -22) (undo-tree-id4438 . -22) (undo-tree-id4439 . -22) (undo-tree-id4440 . -22) (undo-tree-id4441 . -22) (undo-tree-id4442 . -22) (undo-tree-id4443 . -22) (undo-tree-id4444 . -22) (undo-tree-id4445 . -22) (undo-tree-id4446 . -22) (undo-tree-id4447 . -22) (undo-tree-id4448 . -22) (undo-tree-id4449 . -22) (undo-tree-id4450 . -22) (undo-tree-id4451 . -18) (undo-tree-id4452 . -18) (undo-tree-id4453 . -18) (undo-tree-id4454 . -18) (undo-tree-id4455 . -18) (undo-tree-id4456 . -18) (undo-tree-id4457 . -18) (undo-tree-id4458 . -18) (undo-tree-id4459 . -18) (undo-tree-id4460 . -18) (undo-tree-id4461 . -18) (undo-tree-id4462 . -18) (undo-tree-id4463 . -18) (undo-tree-id4464 . -18) (undo-tree-id4465 . -18) (undo-tree-id4466 . -18) (undo-tree-id4467 . -18) (undo-tree-id4468 . -18) (undo-tree-id4469 . -18) (undo-tree-id4470 . -18) (undo-tree-id4471 . -18) (undo-tree-id4472 . -18) (undo-tree-id4473 . -18) (undo-tree-id4474 . -18) (undo-tree-id4475 . -18) (undo-tree-id4476 . -18) (undo-tree-id4477 . -18) (undo-tree-id4478 . -18) (undo-tree-id4479 . -18) (undo-tree-id4480 . -18) (undo-tree-id4481 . -18) (undo-tree-id4482 . -18) (undo-tree-id4483 . -18) (undo-tree-id4484 . -18) (undo-tree-id4485 . -15) (undo-tree-id4486 . -15) (undo-tree-id4487 . -15) (undo-tree-id4488 . -15) (undo-tree-id4489 . -15) (undo-tree-id4490 . -15) (undo-tree-id4491 . -15) (undo-tree-id4492 . -15) (undo-tree-id4493 . -15) (undo-tree-id4494 . -15) (undo-tree-id4495 . -15) (undo-tree-id4496 . -15) (undo-tree-id4497 . -15) (undo-tree-id4498 . -15) (undo-tree-id4499 . -15) (undo-tree-id4500 . -15) (undo-tree-id4501 . -15) (undo-tree-id4502 . -15) (undo-tree-id4503 . -15) (undo-tree-id4504 . -15) (undo-tree-id4505 . -15) (undo-tree-id4506 . -15) (undo-tree-id4507 . -15) (undo-tree-id4508 . -15) (undo-tree-id4509 . -15) (undo-tree-id4510 . -15) (undo-tree-id4511 . -15) (undo-tree-id4512 . -15) (undo-tree-id4513 . -15) (undo-tree-id4514 . -15) (undo-tree-id4515 . -15) (undo-tree-id4516 . -15) (undo-tree-id4517 . -15) (undo-tree-id4518 . -15) (undo-tree-id4519 . -7) (undo-tree-id4520 . -7) (undo-tree-id4521 . -7) (undo-tree-id4522 . -7) (undo-tree-id4523 . -7) (undo-tree-id4524 . -7) (undo-tree-id4525 . -7) (undo-tree-id4526 . -7) (undo-tree-id4527 . -7) (undo-tree-id4528 . -7) (undo-tree-id4529 . -7) (undo-tree-id4530 . -7) (undo-tree-id4531 . -7) (undo-tree-id4532 . -7) (undo-tree-id4533 . -7) (undo-tree-id4534 . -7) (undo-tree-id4535 . -7) (undo-tree-id4536 . -7) (undo-tree-id4537 . -7) (undo-tree-id4538 . -7) (undo-tree-id4539 . -7) (undo-tree-id4540 . -7) (undo-tree-id4541 . -7) (undo-tree-id4542 . -7) (undo-tree-id4543 . -7) (undo-tree-id4544 . -7) (undo-tree-id4545 . -7) (undo-tree-id4546 . -7) (undo-tree-id4547 . -7) (undo-tree-id4548 . -7) (undo-tree-id4549 . -7) (undo-tree-id4550 . -7) (undo-tree-id4551 . -7) (undo-tree-id4552 . -7) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -27) (undo-tree-id4622 . -27)) nil (26461 59273 580039 470000) 0 nil])
([nil nil ((1570 . 1571) (1561 . 1574) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -1561) (undo-tree-id4344 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -1562) (undo-tree-id4345 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1563) (undo-tree-id4346 . -1) 1564 (1560 . 1564) (1556 . 1560) (#(" " 0 1 (face whitespace-space fontified t)) . -1556) (undo-tree-id4347 . -1) 1557 (1555 . 1557) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1555) (undo-tree-id4348 . -1) 1556 (1542 . 1556)) nil (26461 59273 579769 459000) 0 nil])
([nil nil (1570) nil (26461 59273 579751 415000) 0 nil])
([nil nil ((#("#include <stdbool.h>
" 0 1 (c-in-sws t face font-lock-preprocessor-face c-is-sws t fontified t) 1 8 (c-in-sws t face font-lock-preprocessor-face fontified t) 8 9 (face whitespace-space c-in-sws t fontified t) 9 10 (c-in-sws t category c-<-as-paren-syntax face font-lock-string-face fontified t) 10 19 (c-in-sws t face font-lock-string-face fontified t) 19 20 (c-in-sws t category c->-as-paren-syntax face font-lock-string-face fontified t) 20 21 (c-in-sws t fontified t)) . 64) (undo-tree-id0 . -20) (undo-tree-id1 . -13) (undo-tree-id2 . -13) (undo-tree-id3 . -13) (undo-tree-id4 . -13) (undo-tree-id5 . -13) (undo-tree-id6 . -13) (undo-tree-id7 . -13) (undo-tree-id8 . -13) (undo-tree-id9 . -13) (undo-tree-id10 . -13) (undo-tree-id11 . -13) (undo-tree-id12 . -13) (undo-tree-id13 . -13) (undo-tree-id14 . -13) (undo-tree-id15 . -13) (undo-tree-id16 . -13) (undo-tree-id17 . -13) (undo-tree-id18 . -13) (undo-tree-id19 . -13) (undo-tree-id20 . -13) (undo-tree-id21 . -13) (undo-tree-id22 . -13) (undo-tree-id23 . -13) (undo-tree-id24 . -13) (undo-tree-id25 . -13) (undo-tree-id26 . -13) (undo-tree-id27 . -13) (undo-tree-id28 . -13) (undo-tree-id29 . -13) (undo-tree-id30 . -13) (undo-tree-id31 . -13) (undo-tree-id32 . -13) (undo-tree-id33 . -13) (undo-tree-id34 . -13) (undo-tree-id35 . -13) (undo-tree-id36 . -13) (undo-tree-id37 . -13) (undo-tree-id38 . -13) (undo-tree-id39 . -13) (undo-tree-id40 . -13) (undo-tree-id41 . -13) (undo-tree-id42 . -13) (undo-tree-id43 . -13) (undo-tree-id44 . -13) (undo-tree-id45 . -13) (undo-tree-id46 . -13) (undo-tree-id47 . -13) (undo-tree-id48 . -13) (undo-tree-id49 . -13) (undo-tree-id50 . -13) (undo-tree-id51 . -13) (undo-tree-id52 . -13) (undo-tree-id53 . -13) (undo-tree-id54 . -13) (undo-tree-id55 . -13) (undo-tree-id56 . -13) (undo-tree-id57 . -13) (undo-tree-id58 . -13) (undo-tree-id59 . -13) (undo-tree-id60 . -13) (undo-tree-id61 . -13) (undo-tree-id62 . -13) (undo-tree-id63 . -13) (undo-tree-id64 . -13) (undo-tree-id65 . -13) (undo-tree-id66 . -13) (undo-tree-id67 . -13) (undo-tree-id68 . -13) (undo-tree-id69 . -13) (undo-tree-id70 . -13) (undo-tree-id71 . -13) (undo-tree-id72 . -13) (undo-tree-id73 . -13) (undo-tree-id74 . -13) (undo-tree-id75 . -13) (undo-tree-id76 . -13) (undo-tree-id77 . -13) (undo-tree-id78 . -13) (undo-tree-id79 . -13) (undo-tree-id80 . -13) (undo-tree-id81 . -13) (undo-tree-id82 . -13) (undo-tree-id83 . -13) (undo-tree-id84 . -13) (undo-tree-id85 . -13) (undo-tree-id86 . -13) (undo-tree-id87 . -13) (undo-tree-id88 . -13) (undo-tree-id89 . -13) (undo-tree-id90 . -13) (undo-tree-id91 . -13) (undo-tree-id92 . -13) (undo-tree-id93 . -13) (undo-tree-id94 . -13) (undo-tree-id95 . -13) (undo-tree-id96 . -13) (undo-tree-id97 . -13) (undo-tree-id98 . -13) (undo-tree-id99 . -13) (undo-tree-id100 . -13) (undo-tree-id101 . -13) (undo-tree-id102 . -13) (undo-tree-id103 . -13) (undo-tree-id104 . -13) (undo-tree-id105 . -13) (undo-tree-id106 . -13) (undo-tree-id107 . -13) (undo-tree-id108 . -13) (undo-tree-id109 . -13) (undo-tree-id110 . -13) (undo-tree-id111 . -13) (undo-tree-id112 . -13) (undo-tree-id113 . -13) (undo-tree-id114 . -13) (undo-tree-id115 . -13) (undo-tree-id116 . -13) (undo-tree-id117 . -13) (undo-tree-id118 . -13) (undo-tree-id119 . -13) (undo-tree-id120 . -13) (undo-tree-id121 . -13) (undo-tree-id122 . -13) (undo-tree-id123 . -13) (undo-tree-id124 . -13) (undo-tree-id125 . -13) (undo-tree-id126 . -13) (undo-tree-id127 . -13) (undo-tree-id128 . -13) (undo-tree-id129 . -13) (undo-tree-id130 . -13) (undo-tree-id131 . -13) (undo-tree-id132 . -13) (undo-tree-id133 . -13) (undo-tree-id134 . -13) (undo-tree-id135 . -13) (undo-tree-id136 . -13) (undo-tree-id137 . -13) (undo-tree-id138 . -13) (undo-tree-id139 . -13) (undo-tree-id140 . -13) (undo-tree-id141 . -13) (undo-tree-id142 . -13) (undo-tree-id143 . -13) (undo-tree-id144 . -13) (undo-tree-id145 . -13) (undo-tree-id146 . -13) (undo-tree-id147 . -13) (undo-tree-id148 . -13) (undo-tree-id149 . -13) (undo-tree-id150 . -13) (undo-tree-id151 . -13) (undo-tree-id152 . -13) (undo-tree-id153 . -13) (undo-tree-id154 . -13) (undo-tree-id155 . -13) (undo-tree-id156 . -13) (undo-tree-id157 . -13) (undo-tree-id158 . -13) (undo-tree-id159 . -13) (undo-tree-id160 . -13) (undo-tree-id161 . -13) (undo-tree-id162 . -13) (undo-tree-id163 . -13) (undo-tree-id164 . -13) (undo-tree-id165 . -13) (undo-tree-id166 . -13) (undo-tree-id167 . -13) (undo-tree-id168 . -13) (undo-tree-id169 . -13) (undo-tree-id170 . -13) (undo-tree-id171 . -13) (undo-tree-id172 . -13) (undo-tree-id173 . -13) (undo-tree-id174 . -13) (undo-tree-id175 . -13) (undo-tree-id176 . -13) (undo-tree-id177 . -13) (undo-tree-id178 . -13) (undo-tree-id179 . -13) (undo-tree-id180 . -13) (undo-tree-id181 . -13) (undo-tree-id182 . -13) (undo-tree-id183 . -13) (undo-tree-id184 . -13) (undo-tree-id185 . -13) (undo-tree-id186 . -13) (undo-tree-id187 . -13) (undo-tree-id188 . -13) (undo-tree-id189 . -13) (undo-tree-id190 . -13) (undo-tree-id191 . -13) (undo-tree-id192 . -13) (undo-tree-id193 . -13) (undo-tree-id194 . -13) (undo-tree-id195 . -13) (undo-tree-id196 . -13) (undo-tree-id197 . -13) (undo-tree-id198 . -13) (undo-tree-id199 . -13) (undo-tree-id200 . -13) (undo-tree-id201 . -13) (undo-tree-id202 . -13) (undo-tree-id203 . -13) (undo-tree-id204 . -13) (undo-tree-id205 . -13) (undo-tree-id206 . -13) (undo-tree-id207 . -13) (undo-tree-id208 . -13) (undo-tree-id209 . -13) (undo-tree-id210 . -13) (undo-tree-id211 . -13) (undo-tree-id212 . -13) (undo-tree-id213 . -13) (undo-tree-id214 . -13) (undo-tree-id215 . -13) (undo-tree-id216 . -13) (undo-tree-id217 . -13) (undo-tree-id218 . -13) (undo-tree-id219 . -13) (undo-tree-id220 . -13) (undo-tree-id221 . -13) (undo-tree-id222 . -13) (undo-tree-id223 . -13) (undo-tree-id224 . -13) (undo-tree-id225 . -13) (undo-tree-id226 . -13) (undo-tree-id227 . -13) (undo-tree-id228 . -13) (undo-tree-id229 . -13) (undo-tree-id230 . -13) (undo-tree-id231 . -13) (undo-tree-id232 . -13) (undo-tree-id233 . -13) (undo-tree-id234 . -13) (undo-tree-id235 . -13) (undo-tree-id236 . -13) (undo-tree-id237 . -13) (undo-tree-id238 . -13) (undo-tree-id239 . -13) (undo-tree-id240 . -13) (undo-tree-id241 . -13) (undo-tree-id242 . -13) (undo-tree-id243 . -13) (undo-tree-id244 . -13) (undo-tree-id245 . -13) (undo-tree-id246 . -13) (undo-tree-id247 . -13) (undo-tree-id248 . -13) (undo-tree-id249 . -13) (undo-tree-id250 . -13) (undo-tree-id251 . -13) (undo-tree-id252 . -13) (undo-tree-id253 . -13) (undo-tree-id254 . -13) (undo-tree-id255 . -13) (undo-tree-id256 . -13) (undo-tree-id257 . -13) (undo-tree-id258 . -13) (undo-tree-id259 . -13) (undo-tree-id260 . -13) (undo-tree-id261 . -13) (undo-tree-id262 . -13) (undo-tree-id263 . -13) (undo-tree-id264 . -13) (undo-tree-id265 . -13) (undo-tree-id266 . -13) (undo-tree-id267 . -13) (undo-tree-id268 . -13) (undo-tree-id269 . -13) (undo-tree-id270 . -13) (undo-tree-id271 . -13) (undo-tree-id272 . -13) (undo-tree-id273 . -13) (undo-tree-id274 . -13) (undo-tree-id275 . -13) (undo-tree-id276 . -13) (undo-tree-id277 . -13) (undo-tree-id278 . -13) (undo-tree-id279 . -13) (undo-tree-id280 . -13) (undo-tree-id281 . -13) (undo-tree-id282 . -13) (undo-tree-id283 . -13) (undo-tree-id284 . -13) (undo-tree-id285 . -13) (undo-tree-id286 . -13) (undo-tree-id287 . -13) (undo-tree-id288 . -13) (undo-tree-id289 . -13) (undo-tree-id290 . -13) (undo-tree-id291 . -13) (undo-tree-id292 . -13) (undo-tree-id293 . -13) (undo-tree-id294 . -13) (undo-tree-id295 . -13) (undo-tree-id296 . -13) (undo-tree-id297 . -13) (undo-tree-id298 . -13) (undo-tree-id299 . -13) (undo-tree-id300 . -13) (undo-tree-id301 . -13) (undo-tree-id302 . -13) (undo-tree-id303 . -13) (undo-tree-id304 . -13) (undo-tree-id305 . -13) (undo-tree-id306 . -13) (undo-tree-id307 . -13) (undo-tree-id308 . -13) (undo-tree-id309 . -13) (undo-tree-id310 . -13) (undo-tree-id311 . -13) (undo-tree-id312 . -13) (undo-tree-id313 . -13) (undo-tree-id314 . -13) (undo-tree-id315 . -13) (undo-tree-id316 . -13) (undo-tree-id317 . -13) (undo-tree-id318 . -13) (undo-tree-id319 . -13) (undo-tree-id320 . -13) (undo-tree-id321 . -13) (undo-tree-id322 . -13) (undo-tree-id323 . -13) (undo-tree-id324 . -13) (undo-tree-id325 . -13) (undo-tree-id326 . -13) (undo-tree-id327 . -13) (undo-tree-id328 . -13) (undo-tree-id329 . -13) (undo-tree-id330 . -13) (undo-tree-id331 . -13) (undo-tree-id332 . -13) (undo-tree-id333 . -13) (undo-tree-id334 . -13) (undo-tree-id335 . -13) (undo-tree-id336 . -13) (undo-tree-id337 . -13) (undo-tree-id338 . -13) (undo-tree-id339 . -13) (undo-tree-id340 . -13) (undo-tree-id341 . -13) (undo-tree-id342 . -13) (undo-tree-id343 . -13) (undo-tree-id344 . -13) (undo-tree-id345 . -13) (undo-tree-id346 . -13) (undo-tree-id347 . -13) (undo-tree-id348 . -13) (undo-tree-id349 . -13) (undo-tree-id350 . -13) (undo-tree-id351 . -13) (undo-tree-id352 . -13) (undo-tree-id353 . -13) (undo-tree-id354 . -13) (undo-tree-id355 . -13) (undo-tree-id356 . -13) (undo-tree-id357 . -13) (undo-tree-id358 . -13) (undo-tree-id359 . -13) (undo-tree-id360 . -13) (undo-tree-id361 . -13) (undo-tree-id362 . -13) (undo-tree-id363 . -13) (undo-tree-id364 . -13) (undo-tree-id365 . -13) (undo-tree-id366 . -13) (undo-tree-id367 . -13) (undo-tree-id368 . -13) (undo-tree-id369 . -13) (undo-tree-id370 . -13) (undo-tree-id371 . -13) (undo-tree-id372 . -13) (undo-tree-id373 . -13) (undo-tree-id374 . -13) (undo-tree-id375 . -13) (undo-tree-id376 . -13) (undo-tree-id377 . -13) (undo-tree-id378 . -13) (undo-tree-id379 . -13) (undo-tree-id380 . -13) (undo-tree-id381 . -13) (undo-tree-id382 . -13) (undo-tree-id383 . -13) (undo-tree-id384 . -13) (undo-tree-id385 . -13) (undo-tree-id386 . -13) (undo-tree-id387 . -13) (undo-tree-id388 . -13) (undo-tree-id389 . -13) (undo-tree-id390 . -13) (undo-tree-id391 . -13) (undo-tree-id392 . -13) (undo-tree-id393 . -13) (undo-tree-id394 . -13) (undo-tree-id395 . -13) (undo-tree-id396 . -13) (undo-tree-id397 . -13) (undo-tree-id398 . -13) (undo-tree-id399 . -13) (undo-tree-id400 . -13) (undo-tree-id401 . -13) (undo-tree-id402 . -13) (undo-tree-id403 . -13) (undo-tree-id404 . -13) (undo-tree-id405 . -13) (undo-tree-id406 . -13) (undo-tree-id407 . -13) (undo-tree-id408 . -13) (undo-tree-id409 . -13) (undo-tree-id410 . -13) (undo-tree-id411 . -13) (undo-tree-id412 . -13) (undo-tree-id413 . -13) (undo-tree-id414 . -13) (undo-tree-id415 . -13) (undo-tree-id416 . -13) (undo-tree-id417 . -13) (undo-tree-id418 . -13) (undo-tree-id419 . -13) (undo-tree-id420 . -13) (undo-tree-id421 . -13) (undo-tree-id422 . -13) (undo-tree-id423 . -13) (undo-tree-id424 . -13) (undo-tree-id425 . -13) (undo-tree-id426 . -13) (undo-tree-id427 . -13) (undo-tree-id428 . -13) (undo-tree-id429 . -13) (undo-tree-id430 . -13) (undo-tree-id431 . -13) (undo-tree-id432 . -13) (undo-tree-id433 . -13) (undo-tree-id434 . -13) (undo-tree-id435 . -13) (undo-tree-id436 . -13) (undo-tree-id437 . -13) (undo-tree-id438 . -13) (undo-tree-id439 . -13) (undo-tree-id440 . -13) (undo-tree-id441 . -13) (undo-tree-id442 . -13) (undo-tree-id443 . -13) (undo-tree-id444 . -13) (undo-tree-id445 . -13) (undo-tree-id446 . -13) (undo-tree-id447 . -13) (undo-tree-id448 . -13) (undo-tree-id449 . -13) (undo-tree-id450 . -13) (undo-tree-id451 . -13) (undo-tree-id452 . -13) (undo-tree-id453 . -13) (undo-tree-id454 . -13) (undo-tree-id455 . -13) (undo-tree-id456 . -13) (undo-tree-id457 . -13) (undo-tree-id458 . -13) (undo-tree-id459 . -13) (undo-tree-id460 . -13) (undo-tree-id461 . -13) (undo-tree-id462 . -13) (undo-tree-id463 . -13) (undo-tree-id464 . -13) (undo-tree-id465 . -13) (undo-tree-id466 . -13) (undo-tree-id467 . -13) (undo-tree-id468 . -13) (undo-tree-id469 . -13) (undo-tree-id470 . -13) (undo-tree-id471 . -13) (undo-tree-id472 . -13) (undo-tree-id473 . -13) (undo-tree-id474 . -13) (undo-tree-id475 . -13) (undo-tree-id476 . -13) (undo-tree-id477 . -13) (undo-tree-id478 . -13) (undo-tree-id479 . -21) (undo-tree-id480 . -20) 77 (t 26461 60433 622920 297000)) nil (26503 49160 277726 349000) 0 nil])
([nil nil ((#("/*
 * Maintain the min heap property assuming the children of vertex i
 * are valid min heaps.
 */
void queue_heapify (queue * self, size_t i);

/*
 * Get the value at the top of the heap.
 */
graph_vertex *queue_minimum (queue * self);

" 0 1 (c-in-sws t face font-lock-comment-delimiter-face c-is-sws t fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t) 3 4 (c-in-sws t face whitespace-space fontified t) 4 5 (c-in-sws t face font-lock-comment-face fontified t) 5 6 (c-in-sws t face whitespace-space fontified t) 6 14 (c-in-sws t face font-lock-comment-face fontified t) 14 15 (c-in-sws t face whitespace-space fontified t) 15 18 (c-in-sws t face font-lock-comment-face fontified t) 18 19 (c-in-sws t face whitespace-space fontified t) 19 22 (c-in-sws t face font-lock-comment-face fontified t) 22 23 (c-in-sws t face whitespace-space fontified t) 23 27 (c-in-sws t face font-lock-comment-face fontified t) 27 28 (c-in-sws t face whitespace-space fontified t) 28 36 (c-in-sws t face font-lock-comment-face fontified t) 36 37 (c-in-sws t face whitespace-space fontified t) 37 45 (c-in-sws t face font-lock-comment-face fontified t) 45 46 (c-in-sws t face whitespace-space fontified t) 46 49 (c-in-sws t face font-lock-comment-face fontified t) 49 50 (c-in-sws t face whitespace-space fontified t) 50 58 (c-in-sws t face font-lock-comment-face fontified t) 58 59 (c-in-sws t face whitespace-space fontified t) 59 61 (c-in-sws t face font-lock-comment-face fontified t) 61 62 (c-in-sws t face whitespace-space fontified t) 62 68 (c-in-sws t face font-lock-comment-face fontified t) 68 69 (c-in-sws t face whitespace-space fontified t) 69 71 (c-in-sws t face font-lock-comment-face fontified t) 71 72 (c-in-sws t face whitespace-space fontified t) 72 73 (c-in-sws t face font-lock-comment-face fontified t) 73 74 (c-in-sws t face whitespace-space fontified t) 74 77 (c-in-sws t face font-lock-comment-face fontified t) 77 78 (c-in-sws t face whitespace-space fontified t) 78 83 (c-in-sws t face font-lock-comment-face fontified t) 83 84 (c-in-sws t face whitespace-space fontified t) 84 87 (c-in-sws t face font-lock-comment-face fontified t) 87 88 (c-in-sws t face whitespace-space fontified t) 88 95 (c-in-sws t face font-lock-comment-face fontified t) 95 96 (c-in-sws t face whitespace-space fontified t) 96 97 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 97 98 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 98 99 (c-is-sws t fontified t) 99 100 (face font-lock-type-face c-is-sws t fontified t) 100 102 (face font-lock-type-face fontified t) 102 103 (face font-lock-type-face c-type c-decl-id-start fontified t) 103 104 (face whitespace-space fontified t) 104 117 (face font-lock-function-name-face fontified t) 117 118 (face whitespace-space fontified t) 118 119 (c-type c-decl-arg-start fontified t) 119 124 (face font-lock-type-face fontified t) 124 125 (face whitespace-space fontified t) 125 126 (fontified t) 126 127 (face whitespace-space fontified t) 127 131 (face font-lock-variable-name-face fontified t) 131 132 (c-type c-decl-arg-start fontified t) 132 133 (face whitespace-space fontified t) 133 139 (face font-lock-type-face fontified t) 139 140 (face whitespace-space fontified t) 140 141 (face font-lock-variable-name-face fontified t) 141 145 (fontified t) 145 146 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 146 147 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 147 148 (c-in-sws t face font-lock-comment-face fontified t) 148 149 (c-in-sws t face whitespace-space fontified t) 149 150 (c-in-sws t face font-lock-comment-face fontified t) 150 151 (c-in-sws t face whitespace-space fontified t) 151 154 (c-in-sws t face font-lock-comment-face fontified t) 154 155 (c-in-sws t face whitespace-space fontified t) 155 158 (c-in-sws t face font-lock-comment-face fontified t) 158 159 (c-in-sws t face whitespace-space fontified t) 159 164 (c-in-sws t face font-lock-comment-face fontified t) 164 165 (c-in-sws t face whitespace-space fontified t) 165 167 (c-in-sws t face font-lock-comment-face fontified t) 167 168 (c-in-sws t face whitespace-space fontified t) 168 171 (c-in-sws t face font-lock-comment-face fontified t) 171 172 (c-in-sws t face whitespace-space fontified t) 172 175 (c-in-sws t face font-lock-comment-face fontified t) 175 176 (c-in-sws t face whitespace-space fontified t) 176 178 (c-in-sws t face font-lock-comment-face fontified t) 178 179 (c-in-sws t face whitespace-space fontified t) 179 182 (c-in-sws t face font-lock-comment-face fontified t) 182 183 (c-in-sws t face whitespace-space fontified t) 183 189 (c-in-sws t face font-lock-comment-face fontified t) 189 190 (c-in-sws t face whitespace-space fontified t) 190 192 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 192 193 (c-in-sws t fontified t) 193 194 (face font-lock-type-face c-is-sws t fontified t) 194 204 (face font-lock-type-face fontified t) 204 205 (face font-lock-type-face c-type c-decl-id-start fontified t) 205 206 (face whitespace-space fontified t) 206 207 (fontified t) 207 220 (face font-lock-function-name-face fontified t) 220 221 (face whitespace-space fontified t) 221 222 (c-type c-decl-arg-start fontified t) 222 227 (face font-lock-type-face fontified t) 227 228 (face whitespace-space fontified t) 228 229 (fontified t) 229 230 (face whitespace-space fontified t) 230 234 (face font-lock-variable-name-face fontified t) 234 238 (fontified t)) . 919) (undo-tree-id998 . -237) (undo-tree-id999 . -237) (undo-tree-id1000 . -71) (undo-tree-id1001 . -237) (undo-tree-id1002 . -71) (undo-tree-id1003 . -71) (undo-tree-id1004 . -71) (undo-tree-id1005 . -71) (undo-tree-id1006 . -71) (undo-tree-id1007 . -71) (undo-tree-id1008 . -71) (undo-tree-id1009 . -71) (undo-tree-id1010 . -71) (undo-tree-id1011 . -71) (undo-tree-id1012 . -71) (undo-tree-id1013 . -71) (undo-tree-id1014 . -71) (undo-tree-id1015 . -71) (undo-tree-id1016 . -71) (undo-tree-id1017 . -71) (undo-tree-id1018 . -71) (undo-tree-id1019 . -71) (undo-tree-id1020 . -71) (undo-tree-id1021 . -71) (undo-tree-id1022 . -71) (undo-tree-id1023 . -71) (undo-tree-id1024 . -71) (undo-tree-id1025 . -71) (undo-tree-id1026 . -71) (undo-tree-id1027 . -71) (undo-tree-id1028 . -71) (undo-tree-id1029 . -71) (undo-tree-id1030 . -71) (undo-tree-id1031 . -71) (undo-tree-id1032 . -71) (undo-tree-id1033 . -71) (undo-tree-id1034 . -71) (undo-tree-id1035 . -71) (undo-tree-id1036 . -71) (undo-tree-id1037 . -71) (undo-tree-id1038 . -71) (undo-tree-id1039 . -71) (undo-tree-id1040 . -71) (undo-tree-id1041 . -71) (undo-tree-id1042 . -71) (undo-tree-id1043 . -71) (undo-tree-id1044 . -71) (undo-tree-id1045 . -71) (undo-tree-id1046 . -71) (undo-tree-id1047 . -71) (undo-tree-id1048 . -71) (undo-tree-id1049 . -71) (undo-tree-id1050 . -71) (undo-tree-id1051 . -71) (undo-tree-id1052 . -71) (undo-tree-id1053 . -71) (undo-tree-id1054 . -71) (undo-tree-id1055 . -71) (undo-tree-id1056 . -71) (undo-tree-id1057 . -71) (undo-tree-id1058 . -71) (undo-tree-id1059 . -71) (undo-tree-id1060 . -71) (undo-tree-id1061 . -71) (undo-tree-id1062 . -71) (undo-tree-id1063 . -71) (undo-tree-id1064 . -71) (undo-tree-id1065 . -71) (undo-tree-id1066 . -71) (undo-tree-id1067 . -71) (undo-tree-id1068 . -71) (undo-tree-id1069 . -3) (undo-tree-id1070 . -3) (undo-tree-id1071 . -3) (undo-tree-id1072 . -3) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3) (undo-tree-id1077 . -3) (undo-tree-id1078 . -3) (undo-tree-id1079 . -3) (undo-tree-id1080 . -3) (undo-tree-id1081 . -3) (undo-tree-id1082 . -3) (undo-tree-id1083 . -3) (undo-tree-id1084 . -3) (undo-tree-id1085 . -3) (undo-tree-id1086 . -3) (undo-tree-id1087 . -3) (undo-tree-id1088 . -3) (undo-tree-id1089 . -3) (undo-tree-id1090 . -3) (undo-tree-id1091 . -3) (undo-tree-id1092 . -3) (undo-tree-id1093 . -3) (undo-tree-id1094 . -3) (undo-tree-id1095 . -3) (undo-tree-id1096 . -3) (undo-tree-id1097 . -3) (undo-tree-id1098 . -3) (undo-tree-id1099 . -3) (undo-tree-id1100 . -3) (undo-tree-id1101 . -3) (undo-tree-id1102 . -3) (undo-tree-id1103 . -3) (undo-tree-id1104 . -3) (undo-tree-id1105 . -3) (undo-tree-id1106 . -3) (undo-tree-id1107 . -3) (undo-tree-id1108 . -3) (undo-tree-id1109 . -3) (undo-tree-id1110 . -3) (undo-tree-id1111 . -3) (undo-tree-id1112 . -3) (undo-tree-id1113 . -3) (undo-tree-id1114 . -3) (undo-tree-id1115 . -3) (undo-tree-id1116 . -3) (undo-tree-id1117 . -3) (undo-tree-id1118 . -3) (undo-tree-id1119 . -3) (undo-tree-id1120 . -3) (undo-tree-id1121 . -3) (undo-tree-id1122 . -3) (undo-tree-id1123 . -3) (undo-tree-id1124 . -3) (undo-tree-id1125 . -3) (undo-tree-id1126 . -3) (undo-tree-id1127 . -3) (undo-tree-id1128 . -3) (undo-tree-id1129 . -3) (undo-tree-id1130 . -3) (undo-tree-id1131 . -3) (undo-tree-id1132 . -3) (undo-tree-id1133 . -3) (undo-tree-id1134 . -3) (undo-tree-id1135 . -71) (undo-tree-id1136 . -71) (undo-tree-id1137 . -71) (undo-tree-id1138 . -71) (undo-tree-id1139 . -71) (undo-tree-id1140 . -71) (undo-tree-id1141 . -71) (undo-tree-id1142 . -71) (undo-tree-id1143 . -71) (undo-tree-id1144 . -71) (undo-tree-id1145 . -71) (undo-tree-id1146 . -71) (undo-tree-id1147 . -71) (undo-tree-id1148 . -71) (undo-tree-id1149 . -71) (undo-tree-id1150 . -71) (undo-tree-id1151 . -71) (undo-tree-id1152 . -71) (undo-tree-id1153 . -71) (undo-tree-id1154 . -71) (undo-tree-id1155 . -71) (undo-tree-id1156 . -71) (undo-tree-id1157 . -71) (undo-tree-id1158 . -71) (undo-tree-id1159 . -71) (undo-tree-id1160 . -71) (undo-tree-id1161 . -71) (undo-tree-id1162 . -71) (undo-tree-id1163 . -71) (undo-tree-id1164 . -71) (undo-tree-id1165 . -71) (undo-tree-id1166 . -71) (undo-tree-id1167 . -71) (undo-tree-id1168 . -95) (undo-tree-id1169 . -95) (undo-tree-id1170 . -95) (undo-tree-id1171 . -95) (undo-tree-id1172 . -95) (undo-tree-id1173 . -95) (undo-tree-id1174 . -95) (undo-tree-id1175 . -95) (undo-tree-id1176 . -95) (undo-tree-id1177 . -95) (undo-tree-id1178 . -95) (undo-tree-id1179 . -95) (undo-tree-id1180 . -95) (undo-tree-id1181 . -95) (undo-tree-id1182 . -95) (undo-tree-id1183 . -95) (undo-tree-id1184 . -95) (undo-tree-id1185 . -95) (undo-tree-id1186 . -95) (undo-tree-id1187 . -95) (undo-tree-id1188 . -95) (undo-tree-id1189 . -95) (undo-tree-id1190 . -95) (undo-tree-id1191 . -95) (undo-tree-id1192 . -95) (undo-tree-id1193 . -95) (undo-tree-id1194 . -95) (undo-tree-id1195 . -95) (undo-tree-id1196 . -95) (undo-tree-id1197 . -95) (undo-tree-id1198 . -95) (undo-tree-id1199 . -95) (undo-tree-id1200 . -95) (undo-tree-id1201 . -99) (undo-tree-id1202 . -99) (undo-tree-id1203 . -99) (undo-tree-id1204 . -99) (undo-tree-id1205 . -99) (undo-tree-id1206 . -99) (undo-tree-id1207 . -99) (undo-tree-id1208 . -99) (undo-tree-id1209 . -99) (undo-tree-id1210 . -99) (undo-tree-id1211 . -99) (undo-tree-id1212 . -99) (undo-tree-id1213 . -99) (undo-tree-id1214 . -99) (undo-tree-id1215 . -99) (undo-tree-id1216 . -99) (undo-tree-id1217 . -99) (undo-tree-id1218 . -99) (undo-tree-id1219 . -99) (undo-tree-id1220 . -99) (undo-tree-id1221 . -99) (undo-tree-id1222 . -99) (undo-tree-id1223 . -99) (undo-tree-id1224 . -99) (undo-tree-id1225 . -99) (undo-tree-id1226 . -99) (undo-tree-id1227 . -99) (undo-tree-id1228 . -99) (undo-tree-id1229 . -99) (undo-tree-id1230 . -99) (undo-tree-id1231 . -99) (undo-tree-id1232 . -99) (undo-tree-id1233 . -99) (undo-tree-id1234 . -144) (undo-tree-id1235 . -144) (undo-tree-id1236 . -144) (undo-tree-id1237 . -144) (undo-tree-id1238 . -144) (undo-tree-id1239 . -144) (undo-tree-id1240 . -144) (undo-tree-id1241 . -144) (undo-tree-id1242 . -144) (undo-tree-id1243 . -144) (undo-tree-id1244 . -144) (undo-tree-id1245 . -144) (undo-tree-id1246 . -144) (undo-tree-id1247 . -144) (undo-tree-id1248 . -144) (undo-tree-id1249 . -144) (undo-tree-id1250 . -144) (undo-tree-id1251 . -144) (undo-tree-id1252 . -144) (undo-tree-id1253 . -144) (undo-tree-id1254 . -144) (undo-tree-id1255 . -144) (undo-tree-id1256 . -144) (undo-tree-id1257 . -144) (undo-tree-id1258 . -144) (undo-tree-id1259 . -144) (undo-tree-id1260 . -144) (undo-tree-id1261 . -144) (undo-tree-id1262 . -144) (undo-tree-id1263 . -144) (undo-tree-id1264 . -144) (undo-tree-id1265 . -144) (undo-tree-id1266 . -144) (undo-tree-id1267 . -145) (undo-tree-id1268 . -145) (undo-tree-id1269 . -145) (undo-tree-id1270 . -145) (undo-tree-id1271 . -145) (undo-tree-id1272 . -145) (undo-tree-id1273 . -145) (undo-tree-id1274 . -145) (undo-tree-id1275 . -145) (undo-tree-id1276 . -145) (undo-tree-id1277 . -145) (undo-tree-id1278 . -145) (undo-tree-id1279 . -145) (undo-tree-id1280 . -145) (undo-tree-id1281 . -145) (undo-tree-id1282 . -145) (undo-tree-id1283 . -145) (undo-tree-id1284 . -145) (undo-tree-id1285 . -145) (undo-tree-id1286 . -145) (undo-tree-id1287 . -145) (undo-tree-id1288 . -145) (undo-tree-id1289 . -145) (undo-tree-id1290 . -145) (undo-tree-id1291 . -145) (undo-tree-id1292 . -145) (undo-tree-id1293 . -145) (undo-tree-id1294 . -145) (undo-tree-id1295 . -145) (undo-tree-id1296 . -145) (undo-tree-id1297 . -145) (undo-tree-id1298 . -145) (undo-tree-id1299 . -145) (undo-tree-id1300 . -148) (undo-tree-id1301 . -148) (undo-tree-id1302 . -148) (undo-tree-id1303 . -148) (undo-tree-id1304 . -148) (undo-tree-id1305 . -148) (undo-tree-id1306 . -148) (undo-tree-id1307 . -148) (undo-tree-id1308 . -148) (undo-tree-id1309 . -148) (undo-tree-id1310 . -148) (undo-tree-id1311 . -148) (undo-tree-id1312 . -148) (undo-tree-id1313 . -148) (undo-tree-id1314 . -148) (undo-tree-id1315 . -148) (undo-tree-id1316 . -148) (undo-tree-id1317 . -148) (undo-tree-id1318 . -148) (undo-tree-id1319 . -148) (undo-tree-id1320 . -148) (undo-tree-id1321 . -148) (undo-tree-id1322 . -148) (undo-tree-id1323 . -148) (undo-tree-id1324 . -148) (undo-tree-id1325 . -148) (undo-tree-id1326 . -148) (undo-tree-id1327 . -148) (undo-tree-id1328 . -148) (undo-tree-id1329 . -148) (undo-tree-id1330 . -148) (undo-tree-id1331 . -148) (undo-tree-id1332 . -148) (undo-tree-id1333 . -189) (undo-tree-id1334 . -189) (undo-tree-id1335 . -189) (undo-tree-id1336 . -189) (undo-tree-id1337 . -189) (undo-tree-id1338 . -189) (undo-tree-id1339 . -189) (undo-tree-id1340 . -189) (undo-tree-id1341 . -189) (undo-tree-id1342 . -189) (undo-tree-id1343 . -189) (undo-tree-id1344 . -189) (undo-tree-id1345 . -189) (undo-tree-id1346 . -189) (undo-tree-id1347 . -189) (undo-tree-id1348 . -189) (undo-tree-id1349 . -189) (undo-tree-id1350 . -189) (undo-tree-id1351 . -189) (undo-tree-id1352 . -189) (undo-tree-id1353 . -189) (undo-tree-id1354 . -189) (undo-tree-id1355 . -189) (undo-tree-id1356 . -189) (undo-tree-id1357 . -189) (undo-tree-id1358 . -189) (undo-tree-id1359 . -189) (undo-tree-id1360 . -189) (undo-tree-id1361 . -189) (undo-tree-id1362 . -189) (undo-tree-id1363 . -189) (undo-tree-id1364 . -189) (undo-tree-id1365 . -189) (undo-tree-id1366 . -193) (undo-tree-id1367 . -193) (undo-tree-id1368 . -193) (undo-tree-id1369 . -193) (undo-tree-id1370 . -193) (undo-tree-id1371 . -193) (undo-tree-id1372 . -193) (undo-tree-id1373 . -193) (undo-tree-id1374 . -193) (undo-tree-id1375 . -193) (undo-tree-id1376 . -193) (undo-tree-id1377 . -193) (undo-tree-id1378 . -193) (undo-tree-id1379 . -193) (undo-tree-id1380 . -193) (undo-tree-id1381 . -193) (undo-tree-id1382 . -193) (undo-tree-id1383 . -193) (undo-tree-id1384 . -193) (undo-tree-id1385 . -193) (undo-tree-id1386 . -193) (undo-tree-id1387 . -193) (undo-tree-id1388 . -193) (undo-tree-id1389 . -193) (undo-tree-id1390 . -193) (undo-tree-id1391 . -193) (undo-tree-id1392 . -193) (undo-tree-id1393 . -193) (undo-tree-id1394 . -193) (undo-tree-id1395 . -193) (undo-tree-id1396 . -193) (undo-tree-id1397 . -193) (undo-tree-id1398 . -193) (undo-tree-id1399 . -237) (undo-tree-id1400 . -237) (undo-tree-id1401 . -237) (undo-tree-id1402 . -237) (undo-tree-id1403 . -237) (undo-tree-id1404 . -237) (undo-tree-id1405 . -237) (undo-tree-id1406 . -237) (undo-tree-id1407 . -237) (undo-tree-id1408 . -237) (undo-tree-id1409 . -237) (undo-tree-id1410 . -237) (undo-tree-id1411 . -237) (undo-tree-id1412 . -237) (undo-tree-id1413 . -237) (undo-tree-id1414 . -237) (undo-tree-id1415 . -237) (undo-tree-id1416 . -237) (undo-tree-id1417 . -237) (undo-tree-id1418 . -237) (undo-tree-id1419 . -237) (undo-tree-id1420 . -237) (undo-tree-id1421 . -237) (undo-tree-id1422 . -237) (undo-tree-id1423 . -237) (undo-tree-id1424 . -237) (undo-tree-id1425 . -237) (undo-tree-id1426 . -237) (undo-tree-id1427 . -237) (undo-tree-id1428 . -237) (undo-tree-id1429 . -237) (undo-tree-id1430 . -237) (undo-tree-id1431 . -237) (undo-tree-id1432 . -237)) ((919 . 1157)) (26503 49169 183503 731000) 0 nil])
([nil nil ((68 . 78) (67 . 69) (65 . 69) (#("/*" 0 1 (c-is-sws t fontified nil) 1 2 (fontified nil)) . 65) (66 . 67) (#(" *" 0 1 (face whitespace-space fontified nil) 1 2 (fontified nil)) . 66) (65 . 68) (64 . 66)) ((#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . 64) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (#("
" 0 1 (c-is-sws t fontified nil)) . 65) (#("/" 0 1 (c-is-sws t fontified nil)) . 65) (#(" " 0 1 (face whitespace-space fontified nil)) . 66) (#("*" 0 1 (fontified nil)) . 67) (66 . 68) (#("*" 0 1 (fontified nil)) . 66) (65 . 67) (#("/**/" 0 1 (c-is-sws t face font-lock-comment-delimiter-face fontified nil) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2 3 (face font-lock-comment-delimiter-face fontified nil) 3 4 (face font-lock-comment-delimiter-face fontified nil)) . 65) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (undo-tree-id840 . -2) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (undo-tree-id843 . -2) (undo-tree-id844 . -2) (undo-tree-id845 . -2) (undo-tree-id846 . -2) (undo-tree-id847 . -2) (undo-tree-id848 . -2) (undo-tree-id849 . -2) (undo-tree-id850 . -2) (undo-tree-id851 . -2) (undo-tree-id852 . -2) (undo-tree-id853 . -2) (undo-tree-id854 . -2) (undo-tree-id855 . -2) (undo-tree-id856 . -2) (undo-tree-id857 . -2) (undo-tree-id858 . -2) (undo-tree-id859 . -2) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -2) (undo-tree-id864 . -2) (undo-tree-id865 . -2) (undo-tree-id866 . -2) (undo-tree-id867 . -2) (undo-tree-id868 . -2) (undo-tree-id869 . -2) (undo-tree-id870 . -2) (undo-tree-id871 . -2) (undo-tree-id872 . -2) (undo-tree-id873 . -2) (undo-tree-id874 . -2) (undo-tree-id875 . -2) (undo-tree-id876 . -2) (undo-tree-id877 . -2) (undo-tree-id878 . -2) (undo-tree-id879 . -2) (undo-tree-id880 . -2) (undo-tree-id881 . -2) (undo-tree-id882 . -2) (undo-tree-id883 . -2) (#("  " 0 1 (face whitespace-space fontified nil) 1 2 (face whitespace-space fontified nil)) . 67) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (#("Graph part" 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 2 (face font-lock-comment-face c-in-sws t fontified t) 2 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face whitespace-space c-in-sws t fontified t) 6 7 (c-in-sws t face font-lock-comment-face fontified t) 7 8 (c-in-sws t face font-lock-comment-face fontified t) 8 9 (c-in-sws t face font-lock-comment-face fontified t) 9 10 (c-in-sws t face font-lock-comment-face fontified t)) . 68) (undo-tree-id941 . -6) (undo-tree-id942 . -6) (undo-tree-id943 . -6) (undo-tree-id944 . -6) (undo-tree-id945 . -6) (undo-tree-id946 . -6) (undo-tree-id947 . -6) (undo-tree-id948 . -6) (undo-tree-id949 . -6) (undo-tree-id950 . -6) (undo-tree-id951 . -6) (undo-tree-id952 . -6) (undo-tree-id953 . -6) (undo-tree-id954 . -6) (undo-tree-id955 . -6) (undo-tree-id956 . -6) (undo-tree-id957 . -6) (undo-tree-id958 . -6) (undo-tree-id959 . -6) (undo-tree-id960 . -6) (undo-tree-id961 . -6) (undo-tree-id962 . -6) (undo-tree-id963 . -6) (undo-tree-id964 . -6) (undo-tree-id965 . -6) (undo-tree-id966 . -6) (undo-tree-id967 . -6) (undo-tree-id968 . -6) (undo-tree-id969 . -6) (undo-tree-id970 . -6) (undo-tree-id971 . -6) (undo-tree-id972 . -6) (undo-tree-id973 . -6) (undo-tree-id974 . -6) (undo-tree-id975 . -6) (undo-tree-id976 . -6) (undo-tree-id977 . -6) (undo-tree-id978 . -6) (undo-tree-id979 . -6) (undo-tree-id980 . -6) (undo-tree-id981 . -6) (undo-tree-id982 . -6) (undo-tree-id983 . -6) (undo-tree-id984 . -6) (undo-tree-id985 . -6) (undo-tree-id986 . -6) (undo-tree-id987 . -6) (undo-tree-id988 . -6) (undo-tree-id989 . -6) (undo-tree-id990 . -6) (undo-tree-id991 . -6) (undo-tree-id992 . -6) (undo-tree-id993 . -6) (undo-tree-id994 . -6) (undo-tree-id995 . -6) (undo-tree-id996 . -6) (undo-tree-id997 . -6)) (26503 49169 688820 141000) 0 nil])
([nil nil ((#("p" 0 1 (fontified nil)) . 729) (728 . 730)) ((#("
" 0 1 (fontified t)) . 728) (undo-tree-id733 . -1) (undo-tree-id735 . -1) (undo-tree-id737 . -1) (undo-tree-id739 . -1) (undo-tree-id741 . -1) (undo-tree-id743 . -1) (undo-tree-id745 . -1) (undo-tree-id747 . -1) (undo-tree-id749 . -1) (undo-tree-id751 . -1) (undo-tree-id753 . -1) (undo-tree-id755 . -1) (undo-tree-id757 . -1) (undo-tree-id759 . -1) (undo-tree-id761 . -1) (undo-tree-id763 . -1) (undo-tree-id765 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (#("p" 0 1 (fontified nil)) . 729) (729 . 730)) (26503 49169 911691 751000) 0 nil])
([nil nil ((730 . 731)) ((#("
" 0 1 (fontified t)) . 730)) (26503 49169 929400 372000) 0 nil])
([nil nil ((nil rear-nonsticky nil 730 . 731) (#("
" 0 1 (c-is-sws t fontified nil)) . 747) (730 . 748)) ((#("
/* Graph part */
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (face font-lock-comment-delimiter-face fontified nil c-in-sws t c-is-sws t) 2 3 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 3 4 (face whitespace-space c-in-sws t fontified nil) 4 5 (face font-lock-comment-face c-in-sws t fontified nil) 5 6 (face font-lock-comment-face c-in-sws t fontified nil) 6 8 (face font-lock-comment-face c-in-sws t fontified nil) 8 9 (face font-lock-comment-face c-in-sws t fontified nil) 9 10 (face whitespace-space c-in-sws t fontified nil) 10 11 (face font-lock-comment-face c-in-sws t fontified nil) 11 12 (face font-lock-comment-face c-in-sws t fontified nil) 12 13 (face font-lock-comment-face c-in-sws t fontified nil) 13 14 (face font-lock-comment-face c-in-sws t fontified nil) 14 15 (face whitespace-space c-in-sws t fontified nil) 15 16 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 16 17 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 17 18 (c-in-sws t fontified nil)) . 730) (undo-tree-id621 . -4) (undo-tree-id623 . -4) (undo-tree-id625 . -4) (undo-tree-id627 . -4) (undo-tree-id629 . -4) (undo-tree-id631 . -4) (undo-tree-id633 . -4) (undo-tree-id635 . -4) (undo-tree-id637 . -4) (undo-tree-id639 . -4) (undo-tree-id641 . -4) (undo-tree-id643 . -4) (undo-tree-id645 . -4) (undo-tree-id647 . -4) (undo-tree-id649 . -4) (undo-tree-id651 . -4) (undo-tree-id653 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id658 . -4) (undo-tree-id660 . -4) (undo-tree-id662 . -4) (undo-tree-id664 . -4) (undo-tree-id666 . -4) (undo-tree-id668 . -4) (undo-tree-id670 . -4) (undo-tree-id672 . -4) (undo-tree-id674 . -4) (undo-tree-id676 . -4) (undo-tree-id678 . -4) (undo-tree-id680 . -4) (undo-tree-id682 . -4) (undo-tree-id684 . -4) (undo-tree-id686 . -4) (undo-tree-id688 . -4) (undo-tree-id690 . -4) (undo-tree-id692 . -4) (undo-tree-id694 . -4) (undo-tree-id696 . -10) (undo-tree-id698 . -10) (undo-tree-id700 . -10) (undo-tree-id702 . -10) (undo-tree-id704 . -10) (undo-tree-id706 . -10) (undo-tree-id708 . -10) (undo-tree-id710 . -10) (undo-tree-id712 . -10) (undo-tree-id714 . -10) (undo-tree-id716 . -10) (undo-tree-id718 . -10) (undo-tree-id720 . -10) (undo-tree-id722 . -10) (undo-tree-id724 . -10) (undo-tree-id726 . -10) (undo-tree-id728 . -10) (undo-tree-id730 . -10) (747 . 748) (nil rear-nonsticky t 730 . 731)) (26503 49169 932035 906000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified nil)) . 730) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1)) ((730 . 731)) (26503 49169 934572 901000) 0 nil])
([nil nil ((733 . 739) (#("Graph " 0 1 (face font-lock-comment-face c-in-sws t fontified nil) 1 2 (face font-lock-comment-face c-in-sws t fontified nil) 2 4 (face font-lock-comment-face c-in-sws t fontified nil) 4 5 (face font-lock-comment-face c-in-sws t fontified nil) 5 6 (face whitespace-space c-in-sws t fontified nil)) . 733) (undo-tree-id1435 . -6)) ((733 . 739) (#("Queue " 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face whitespace-space c-in-sws t fontified t)) . 733) (undo-tree-id546 . -6) (undo-tree-id548 . -6) (undo-tree-id550 . -6) (undo-tree-id552 . -6) (undo-tree-id554 . -6) (undo-tree-id556 . -6) (undo-tree-id558 . -6) (undo-tree-id560 . -6) (undo-tree-id562 . -6) (undo-tree-id564 . -6) (undo-tree-id566 . -6) (undo-tree-id568 . -6) (undo-tree-id570 . -6) (undo-tree-id572 . -6) (undo-tree-id574 . -6) (undo-tree-id576 . -6) (undo-tree-id578 . -6) (undo-tree-id580 . -6) (undo-tree-id581 . -6) (undo-tree-id583 . -6) (undo-tree-id585 . -6) (undo-tree-id587 . -6) (undo-tree-id589 . -6) (undo-tree-id591 . -6) (undo-tree-id593 . -6) (undo-tree-id595 . -6) (undo-tree-id597 . -6) (undo-tree-id599 . -6) (undo-tree-id601 . -6) (undo-tree-id603 . -6) (undo-tree-id605 . -6) (undo-tree-id607 . -6) (undo-tree-id609 . -6) (undo-tree-id611 . -6) (undo-tree-id613 . -6) (undo-tree-id615 . -6) (undo-tree-id617 . -6) (undo-tree-id619 . -6)) (26503 49169 935554 371000) 0 nil])
([nil nil ((729 . 730)) ((#("
" 0 1 (fontified t)) . 729)) (26503 49169 936439 620000) 0 nil])
([nil nil ((#("part" 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 2 (face font-lock-comment-face c-in-sws t fontified t) 2 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t)) . 740)) ((740 . 744)) (26503 49169 938171 63000) 0 nil])
([nil nil ((740 . 754)) ((#("data structure" 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face whitespace-space fontified t c-in-sws t) 5 6 (face font-lock-comment-face fontified t c-in-sws t) 6 7 (face font-lock-comment-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t) 8 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face font-lock-comment-face fontified t c-in-sws t) 10 11 (face font-lock-comment-face fontified t c-in-sws t) 11 12 (face font-lock-comment-face fontified t c-in-sws t) 12 13 (face font-lock-comment-face fontified t c-in-sws t) 13 14 (face font-lock-comment-face fontified t c-in-sws t)) . 740)) (26503 49169 938944 92000) 0 nil])
([nil nil ((#("part" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t) 3 4 (c-in-sws t face font-lock-comment-face fontified t)) . 74)) ((74 . 78)) (26503 49169 951321 453000) 0 nil])
([nil nil ((74 . 88)) ((#("date structure" 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 2 (face font-lock-comment-face c-in-sws t fontified t) 2 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (face whitespace-space c-in-sws t fontified t) 5 6 (face font-lock-comment-face c-in-sws t fontified t) 6 7 (face font-lock-comment-face c-in-sws t fontified t) 7 8 (face font-lock-comment-face c-in-sws t fontified t) 8 9 (face font-lock-comment-face c-in-sws t fontified t) 9 10 (face font-lock-comment-face c-in-sws t fontified t) 10 11 (face font-lock-comment-face c-in-sws t fontified t) 11 12 (face font-lock-comment-face c-in-sws t fontified t) 12 13 (face font-lock-comment-face c-in-sws t fontified t) 13 14 (c-in-sws t face font-lock-comment-face fontified t)) . 74)) (26503 49169 983128 695000) 0 nil])
([nil nil ((1299 . 1300) (#("e" 0 1 (face font-lock-comment-face fontified nil)) . 1334) (1325 . 1335) (#("part" 0 1 (face font-lock-comment-face fontified nil) 1 3 (face font-lock-comment-face fontified nil) 3 4 (face font-lock-comment-face fontified nil)) . 1325) (undo-tree-id1436 . -4) (1311 . 1312) (#("s" 0 1 (face font-lock-comment-face fontified nil)) . 1311) (1320 . 1329) (#("tr" 0 1 (face font-lock-comment-face fontified nil) 1 2 (face font-lock-comment-face fontified nil)) . 1320) (1307 . 1322) (#("num" 0 1 (face font-lock-comment-face fontified nil) 1 2 (face font-lock-comment-face fontified nil) 2 3 (face font-lock-comment-face fontified nil)) . 1307) (1306 . 1310) (#("um" 0 1 (face font-lock-comment-face fontified nil) 1 2 (face font-lock-comment-face fontified nil)) . 1306) (1304 . 1308) (#("AST" 0 1 (face font-lock-comment-face fontified nil) 1 2 (face font-lock-comment-face fontified nil) 2 3 (face font-lock-comment-face fontified nil)) . 1304) (undo-tree-id1437 . -3) (1303 . 1307) (1302 . 1304) (1300 . 1304) (#("/*" 0 1 (c-is-sws t fontified nil) 1 2 (fontified nil)) . 1300) (1300 . 1302) (1299 . 1301)) ((#("

" 0 1 (fontified nil) 1 2 (fontified nil)) . 1299) (undo-tree-id532 . -1) (undo-tree-id533 . 2) (#("/*" 0 1 (c-is-sws t fontified nil) 1 2 (fontified nil)) . 1300) (1300 . 1302) (#("/**/" 0 1 (face font-lock-comment-delimiter-face c-in-sws t c-is-sws t fontified nil) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2 3 (face font-lock-comment-delimiter-face fontified nil) 3 4 (face font-lock-comment-delimiter-face fontified nil)) . 1300) (undo-tree-id534 . -2) (#("  " 0 1 (face whitespace-space c-in-sws t fontified nil) 1 2 (face whitespace-space fontified nil)) . 1302) (undo-tree-id535 . -1) (#("MAST" 0 1 (face font-lock-comment-face c-in-sws t fontified nil) 1 2 (face font-lock-comment-face fontified nil) 2 3 (face font-lock-comment-face fontified nil) 3 4 (face font-lock-comment-face fontified nil)) . 1303) (undo-tree-id536 . -4) (1304 . 1307) (#("inum" 0 1 (face font-lock-comment-face c-in-sws t fontified nil) 1 2 (face font-lock-comment-face c-in-sws t fontified nil) 2 3 (face font-lock-comment-face fontified nil) 3 4 (face font-lock-comment-face fontified nil)) . 1304) (undo-tree-id537 . -2) (1306 . 1308) (#("inum" 0 1 (face font-lock-comment-face c-in-sws t fontified nil) 1 2 (face font-lock-comment-face fontified nil) 2 3 (face font-lock-comment-face fontified nil) 3 4 (face font-lock-comment-face fontified nil)) . 1306) (undo-tree-id538 . -1) (1307 . 1310) (#("mum spanning tr" 0 1 (face font-lock-comment-face c-in-sws t fontified nil) 1 2 (face font-lock-comment-face c-in-sws t fontified nil) 2 3 (face font-lock-comment-face c-in-sws t fontified nil) 3 4 (face whitespace-space fontified nil) 4 5 (face font-lock-comment-face fontified nil) 5 6 (face font-lock-comment-face fontified nil) 6 7 (face font-lock-comment-face fontified nil) 7 8 (face font-lock-comment-face fontified nil) 8 9 (face font-lock-comment-face fontified nil) 9 10 (face font-lock-comment-face fontified nil) 10 11 (face font-lock-comment-face fontified nil) 11 12 (face font-lock-comment-face fontified nil) 12 13 (face whitespace-space fontified nil) 13 14 (face font-lock-comment-face fontified nil) 14 15 (face font-lock-comment-face fontified nil)) . 1307) (undo-tree-id539 . -13) (1320 . 1322) (#("Tree part" 0 1 (face font-lock-comment-face fontified nil) 1 2 (face font-lock-comment-face fontified nil) 2 3 (face font-lock-comment-face fontified nil) 3 4 (face font-lock-comment-face fontified nil) 4 5 (face whitespace-space fontified nil) 5 6 (face font-lock-comment-face fontified nil) 6 8 (face font-lock-comment-face fontified nil) 8 9 (face font-lock-comment-face fontified nil)) . 1320) (undo-tree-id540 . -9) (1311 . 1312) (#("S" 0 1 (face font-lock-comment-face c-in-sws t fontified nil)) . 1311) (1325 . 1329) (#("algorithme" 0 1 (face font-lock-comment-face c-in-sws t fontified nil) 1 2 (face font-lock-comment-face c-in-sws t fontified nil) 2 3 (face font-lock-comment-face c-in-sws t fontified nil) 3 4 (face font-lock-comment-face c-in-sws t fontified nil) 4 5 (face font-lock-comment-face c-in-sws t fontified nil) 5 6 (face font-lock-comment-face c-in-sws t fontified nil) 6 8 (face font-lock-comment-face c-in-sws t fontified nil) 8 9 (face font-lock-comment-face c-in-sws t fontified nil) 9 10 (face font-lock-comment-face fontified nil)) . 1325) (1334 . 1335) (#("
" 0 1 (fontified t)) . 1299) (undo-tree-id542 . -1) (t 26503 48931 201119 835000)) (26503 49170 36430 909000) 0 nil])
([nil nil ((271 . 276) (270 . 271) (266 . 270) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -266) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -267) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -268) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) 269 (266 . 269) (#("queue" 0 1 (face font-lock-comment-face fontified t) 1 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t)) . -266) (undo-tree-id1447 . -5) (undo-tree-id1448 . -5) (undo-tree-id1449 . -5) 271 (252 . 271) (250 . 252) (249 . 250) (t 26503 48931 201119 835000)) nil (26503 49769 933054 573000) 0 nil])
([nil nil ((253 . 254) (#("I" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . 253)) nil (26503 49769 933029 319000) 0 nil])
([nil nil ((250 . 269) (t 26503 49769 988066 338000)) nil (26503 57728 884777 311000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 1087) (t 26503 50621 659947 361000)) nil (26503 57728 884775 744000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 1192)) nil (26503 57728 884774 500000) 0 nil])
([nil nil ((1191 . 1192) (#("x" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 1191) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1)) nil (26503 57728 884773 578000) 0 nil])
([nil nil ((1243 . 1244) (#("x" 0 1 (face font-lock-variable-name-face fontified t)) . 1243)) nil (26503 57728 884759 474000) 0 nil])
([nil nil ((64 . 1500) (#("
/* Graph date structure */

typedef struct sgraph_vertex
{
  size_t degree;
  struct sgraph_vertex **neighbors;
  int *weights;
  // Data for MST procedure
  int distance;
  int index;                    // index in the heap queue
  struct sgraph_vertex *parent;
} graph_vertex;

typedef struct sgraph
{
  size_t size;
  graph_vertex **vertices;
} graph;

/*
 * Create an empty graph
 */
void graph_create (graph * self);

/*
 * Destroy a graph
 */
void graph_destroy (graph * self);

/*
 * Add a vertex with given key
 */
graph_vertex *graph_add_vertex (graph * self);

/*
 * Add an edge between two vertices
 */
void graph_add_edge (graph_vertex * source, graph_vertex * destination,
                     int weight);


/* Queue data structure */

typedef struct
{
  size_t size;
  graph_vertex **vertices;
} queue;

/*
 * Create an empty priority queue
 */
void queue_create (queue * self);

/*
 * Destroy a queue
 */
void queue_destroy (queue * self);

/*
 * Remove and return the vertex with minimum value in the heap
 */
graph_vertex *queue_extract_min (queue * self);

/*
 * Decrease the value of a vertex key at index i
 */
void queue_decrease_key (queue * self, size_t i);

/*
 * Insert a vertex in the heap
 */
void queue_insert (queue * self, graph_vertex * vertex);


/* Minimum Spanning Tree algorithm */" 0 1 (c-is-sws t fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3 4 (face whitespace-space fontified t c-in-sws t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face font-lock-comment-face c-in-sws t fontified t) 6 8 (face font-lock-comment-face c-in-sws t fontified t) 8 9 (face font-lock-comment-face c-in-sws t fontified t) 9 10 (face whitespace-space c-in-sws t fontified t) 10 11 (c-in-sws t face font-lock-comment-face fontified t) 11 12 (c-in-sws t face font-lock-comment-face fontified t) 12 13 (c-in-sws t face font-lock-comment-face fontified t) 13 14 (c-in-sws t face font-lock-comment-face fontified t) 14 15 (c-in-sws t face whitespace-space fontified t) 15 16 (c-in-sws t face font-lock-comment-face fontified t) 16 17 (c-in-sws t face font-lock-comment-face fontified t) 17 18 (c-in-sws t face font-lock-comment-face fontified t) 18 19 (c-in-sws t face font-lock-comment-face fontified t) 19 20 (c-in-sws t face font-lock-comment-face fontified t) 20 21 (c-in-sws t face font-lock-comment-face fontified t) 21 22 (c-in-sws t face font-lock-comment-face fontified t) 22 23 (c-in-sws t face font-lock-comment-face fontified t) 23 24 (c-in-sws t face font-lock-comment-face fontified t) 24 25 (c-in-sws t face whitespace-space fontified t) 25 26 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 26 27 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 27 28 (c-is-sws t fontified t) 28 29 (c-is-sws t fontified t) 29 30 (face font-lock-keyword-face fontified t c-is-sws t c-typedef ("graph_vertex")) 30 36 (face font-lock-keyword-face fontified t) 36 37 (face whitespace-space fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (face whitespace-space fontified t) 44 57 (face font-lock-type-face fontified t) 57 60 (fontified t) 60 62 (face whitespace-space fontified t) 62 67 (face font-lock-type-face fontified t) 67 68 (face font-lock-type-face c-type c-decl-id-start fontified t) 68 69 (face whitespace-space fontified t) 69 75 (face font-lock-variable-name-face fontified t) 75 77 (fontified t) 77 79 (face whitespace-space fontified t) 79 85 (face font-lock-keyword-face fontified t) 85 86 (face whitespace-space fontified t) 86 98 (face font-lock-type-face fontified t) 98 99 (face font-lock-type-face c-type c-decl-id-start fontified t) 99 100 (face whitespace-space fontified t) 100 102 (fontified t) 102 111 (face font-lock-variable-name-face fontified t) 111 113 (fontified t) 113 115 (face whitespace-space fontified t) 115 117 (face font-lock-type-face fontified t) 117 118 (face font-lock-type-face c-type c-decl-id-start fontified t) 118 119 (face whitespace-space fontified t) 119 120 (fontified t) 120 127 (face font-lock-variable-name-face fontified t) 127 129 (fontified t) 129 131 (face whitespace-space fontified t c-is-sws t c-in-sws t) 131 132 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 132 133 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 133 134 (face whitespace-space fontified t c-in-sws t) 134 138 (face font-lock-comment-face fontified t c-in-sws t) 138 139 (face whitespace-space fontified t c-in-sws t) 139 142 (face font-lock-comment-face fontified t c-in-sws t) 142 143 (face whitespace-space fontified t c-in-sws t) 143 146 (face font-lock-comment-face fontified t c-in-sws t) 146 147 (face whitespace-space fontified t c-in-sws t) 147 157 (face font-lock-comment-face fontified t c-in-sws t) 157 159 (face whitespace-space fontified t c-in-sws t c-is-sws t) 159 160 (face font-lock-type-face fontified t c-is-sws t) 160 161 (face font-lock-type-face fontified t) 161 162 (face font-lock-type-face c-type c-decl-id-start fontified t) 162 163 (face whitespace-space fontified t) 163 171 (face font-lock-variable-name-face fontified t) 171 173 (fontified t) 173 175 (face whitespace-space fontified t) 175 177 (face font-lock-type-face fontified t) 177 178 (face font-lock-type-face c-type c-decl-id-start fontified t) 178 179 (face whitespace-space fontified t) 179 184 (face font-lock-variable-name-face fontified t) 184 185 (fontified t) 185 186 (face whitespace-space fontified t c-is-sws t c-in-sws t) 186 204 (face whitespace-space c-in-sws t c-is-sws t fontified t) 204 205 (face whitespace-space c-is-sws t fontified t) 205 206 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 206 207 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 207 208 (face whitespace-space fontified t c-in-sws t) 208 209 (face font-lock-comment-face fontified t c-in-sws t) 209 210 (face font-lock-comment-face fontified t c-in-sws t) 210 211 (face font-lock-comment-face fontified t c-in-sws t) 211 212 (face font-lock-comment-face fontified t c-in-sws t) 212 213 (face font-lock-comment-face fontified t c-in-sws t) 213 214 (face whitespace-space fontified t c-in-sws t) 214 215 (face font-lock-comment-face fontified t c-in-sws t) 215 216 (face font-lock-comment-face fontified t c-in-sws t) 216 217 (face whitespace-space fontified t c-in-sws t) 217 218 (face font-lock-comment-face fontified t c-in-sws t) 218 219 (face font-lock-comment-face fontified t c-in-sws t) 219 220 (face font-lock-comment-face fontified t c-in-sws t) 220 221 (face whitespace-space fontified t c-in-sws t) 221 222 (face font-lock-comment-face fontified t c-in-sws t) 222 223 (face font-lock-comment-face fontified t c-in-sws t) 223 224 (face font-lock-comment-face fontified t c-in-sws t) 224 225 (face font-lock-comment-face fontified t c-in-sws t) 225 226 (face whitespace-space fontified t c-in-sws t) 226 227 (face font-lock-comment-face fontified t c-in-sws t) 227 230 (face font-lock-comment-face fontified t c-in-sws t) 230 231 (face font-lock-comment-face fontified t c-in-sws t) 231 232 (face font-lock-comment-face fontified t c-in-sws t) 232 233 (face whitespace-space fontified t c-is-sws t) 233 234 (face whitespace-space fontified t c-is-sws t) 234 235 (face font-lock-keyword-face fontified t c-is-sws t) 235 240 (face font-lock-keyword-face fontified t) 240 241 (face whitespace-space fontified t) 241 253 (face font-lock-type-face fontified t) 253 254 (face font-lock-type-face c-type c-decl-id-start fontified t) 254 255 (face whitespace-space fontified t) 255 256 (fontified t) 256 262 (face font-lock-variable-name-face fontified t) 262 264 (fontified t) 264 265 (c-type c-decl-type-start fontified t) 265 266 (face whitespace-space fontified t) 266 278 (face font-lock-type-face fontified t) 278 281 (fontified t) 281 282 (face font-lock-keyword-face fontified t c-typedef ("graph")) 282 288 (face font-lock-keyword-face fontified t) 288 289 (face whitespace-space fontified t) 289 295 (face font-lock-keyword-face fontified t) 295 296 (face whitespace-space fontified t) 296 302 (face font-lock-type-face fontified t) 302 305 (fontified t) 305 307 (face whitespace-space fontified t) 307 312 (face font-lock-type-face fontified t) 312 313 (face font-lock-type-face c-type c-decl-id-start fontified t) 313 314 (face whitespace-space fontified t) 314 318 (face font-lock-variable-name-face fontified t) 318 320 (fontified t) 320 322 (face whitespace-space fontified t) 322 333 (face font-lock-type-face fontified t) 333 334 (face font-lock-type-face c-type c-decl-id-start fontified t) 334 335 (face whitespace-space fontified t) 335 337 (fontified t) 337 345 (face font-lock-variable-name-face fontified t) 345 347 (fontified t) 347 348 (c-type c-decl-type-start fontified t) 348 349 (face whitespace-space fontified t) 349 354 (face font-lock-type-face fontified t) 354 357 (fontified t) 357 358 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 358 359 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 359 360 (face font-lock-comment-face fontified t c-in-sws t) 360 361 (face whitespace-space fontified t c-in-sws t) 361 362 (face font-lock-comment-face fontified t c-in-sws t) 362 363 (face whitespace-space fontified t c-in-sws t) 363 369 (face font-lock-comment-face fontified t c-in-sws t) 369 370 (face whitespace-space fontified t c-in-sws t) 370 372 (face font-lock-comment-face fontified t c-in-sws t) 372 373 (face whitespace-space fontified t c-in-sws t) 373 378 (face font-lock-comment-face fontified t c-in-sws t) 378 379 (face whitespace-space fontified t c-in-sws t) 379 385 (face font-lock-comment-face fontified t c-in-sws t) 385 386 (face whitespace-space fontified t c-in-sws t) 386 388 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 388 389 (fontified t c-in-sws t) 389 390 (face font-lock-type-face fontified t c-is-sws t) 390 392 (face font-lock-type-face fontified t) 392 393 (face font-lock-type-face c-type c-decl-id-start fontified t) 393 394 (face whitespace-space fontified t) 394 406 (face font-lock-function-name-face fontified t) 406 407 (face whitespace-space fontified t) 407 408 (c-type c-decl-arg-start fontified t) 408 413 (face font-lock-type-face fontified t) 413 414 (face whitespace-space fontified t) 414 415 (fontified t) 415 416 (face whitespace-space fontified t) 416 420 (face font-lock-variable-name-face fontified t) 420 424 (fontified t) 424 425 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 425 426 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 426 427 (face font-lock-comment-face fontified t c-in-sws t) 427 428 (face whitespace-space fontified t c-in-sws t) 428 429 (face font-lock-comment-face fontified t c-in-sws t) 429 430 (face whitespace-space fontified t c-in-sws t) 430 437 (face font-lock-comment-face fontified t c-in-sws t) 437 438 (face whitespace-space fontified t c-in-sws t) 438 439 (face font-lock-comment-face fontified t c-in-sws t) 439 440 (face whitespace-space fontified t c-in-sws t) 440 446 (face font-lock-comment-face fontified t c-in-sws t) 446 447 (face whitespace-space fontified t c-in-sws t) 447 449 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 449 450 (fontified t c-in-sws t) 450 451 (face font-lock-type-face fontified t c-is-sws t) 451 453 (face font-lock-type-face fontified t) 453 454 (face font-lock-type-face c-type c-decl-id-start fontified t) 454 455 (face whitespace-space fontified t) 455 468 (face font-lock-function-name-face fontified t) 468 469 (face whitespace-space fontified t) 469 470 (c-type c-decl-arg-start fontified t) 470 475 (face font-lock-type-face fontified t) 475 476 (face whitespace-space fontified t) 476 477 (fontified t) 477 478 (face whitespace-space fontified t) 478 482 (face font-lock-variable-name-face fontified t) 482 486 (fontified t) 486 487 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 487 488 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 488 489 (face font-lock-comment-face fontified t c-in-sws t) 489 490 (face whitespace-space fontified t c-in-sws t) 490 491 (face font-lock-comment-face fontified t c-in-sws t) 491 492 (face whitespace-space fontified t c-in-sws t) 492 495 (face font-lock-comment-face fontified t c-in-sws t) 495 496 (face whitespace-space fontified t c-in-sws t) 496 497 (face font-lock-comment-face fontified t c-in-sws t) 497 498 (face whitespace-space fontified t c-in-sws t) 498 504 (face font-lock-comment-face fontified t c-in-sws t) 504 505 (face whitespace-space fontified t c-in-sws t) 505 509 (face font-lock-comment-face fontified t c-in-sws t) 509 510 (face whitespace-space fontified t c-in-sws t) 510 515 (face font-lock-comment-face fontified t c-in-sws t) 515 516 (face whitespace-space fontified t c-in-sws t) 516 520 (face font-lock-comment-face fontified t c-in-sws t) 520 521 (face whitespace-space fontified t c-in-sws t) 521 523 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 523 524 (fontified t c-in-sws t) 524 525 (face font-lock-type-face fontified t c-is-sws t) 525 535 (face font-lock-type-face fontified t) 535 536 (face font-lock-type-face c-type c-decl-id-start fontified t) 536 537 (face whitespace-space fontified t) 537 538 (fontified t) 538 554 (face font-lock-function-name-face fontified t) 554 555 (face whitespace-space fontified t) 555 556 (c-type c-decl-arg-start fontified t) 556 561 (face font-lock-type-face fontified t) 561 562 (face whitespace-space fontified t) 562 563 (fontified t) 563 564 (face whitespace-space fontified t) 564 568 (face font-lock-variable-name-face fontified t) 568 572 (fontified t) 572 573 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 573 574 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 574 575 (face font-lock-comment-face fontified t c-in-sws t) 575 576 (face whitespace-space fontified t c-in-sws t) 576 577 (face font-lock-comment-face fontified t c-in-sws t) 577 578 (face whitespace-space fontified t c-in-sws t) 578 581 (face font-lock-comment-face fontified t c-in-sws t) 581 582 (face whitespace-space fontified t c-in-sws t) 582 584 (face font-lock-comment-face fontified t c-in-sws t) 584 585 (face whitespace-space fontified t c-in-sws t) 585 589 (face font-lock-comment-face fontified t c-in-sws t) 589 590 (face whitespace-space fontified t c-in-sws t) 590 597 (face font-lock-comment-face fontified t c-in-sws t) 597 598 (face whitespace-space fontified t c-in-sws t) 598 601 (face font-lock-comment-face fontified t c-in-sws t) 601 602 (face whitespace-space fontified t c-in-sws t) 602 611 (face font-lock-comment-face fontified t c-in-sws t) 611 612 (face whitespace-space fontified t c-in-sws t) 612 614 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 614 615 (fontified t c-in-sws t) 615 616 (face font-lock-type-face fontified t c-is-sws t) 616 618 (face font-lock-type-face fontified t) 618 619 (face font-lock-type-face c-type c-decl-id-start fontified t) 619 620 (face whitespace-space fontified t) 620 634 (face font-lock-function-name-face fontified t) 634 635 (face whitespace-space fontified t) 635 636 (c-type c-decl-arg-start fontified t) 636 648 (face font-lock-type-face fontified t) 648 649 (face whitespace-space fontified t) 649 650 (fontified t) 650 651 (face whitespace-space fontified t) 651 657 (face font-lock-variable-name-face fontified t) 657 658 (c-type c-decl-arg-start fontified t) 658 659 (face whitespace-space fontified t) 659 671 (face font-lock-type-face fontified t) 671 672 (face whitespace-space fontified t) 672 673 (fontified t) 673 674 (face whitespace-space fontified t) 674 685 (face font-lock-variable-name-face fontified t) 685 686 (c-type c-decl-arg-start fontified t) 686 687 (fontified t) 687 708 (face whitespace-space fontified t) 708 711 (face font-lock-type-face fontified t) 711 712 (face whitespace-space fontified t) 712 718 (face font-lock-variable-name-face fontified t) 718 720 (fontified t) 720 721 (fontified t) 721 722 (fontified t) 722 723 (fontified t) 723 724 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 724 725 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 725 726 (face whitespace-space fontified t c-in-sws t) 726 727 (face font-lock-comment-face fontified t c-in-sws t) 727 729 (face font-lock-comment-face fontified t c-in-sws t) 729 730 (face font-lock-comment-face fontified t c-in-sws t) 730 731 (face font-lock-comment-face fontified t c-in-sws t) 731 732 (face whitespace-space fontified t c-in-sws t) 732 733 (face font-lock-comment-face fontified t c-in-sws t) 733 734 (face font-lock-comment-face fontified t c-in-sws t) 734 735 (face font-lock-comment-face fontified t c-in-sws t) 735 736 (face font-lock-comment-face fontified t c-in-sws t) 736 737 (face whitespace-space fontified t c-in-sws t) 737 738 (face font-lock-comment-face fontified t c-in-sws t) 738 739 (face font-lock-comment-face fontified t c-in-sws t) 739 740 (face font-lock-comment-face fontified t c-in-sws t) 740 741 (face font-lock-comment-face fontified t c-in-sws t) 741 742 (face font-lock-comment-face fontified t c-in-sws t) 742 743 (face font-lock-comment-face fontified t c-in-sws t) 743 744 (face font-lock-comment-face fontified t c-in-sws t) 744 745 (face font-lock-comment-face fontified t c-in-sws t) 745 746 (face font-lock-comment-face fontified t c-in-sws t) 746 747 (face whitespace-space fontified t c-in-sws t) 747 748 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 748 749 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 749 750 (fontified t c-is-sws t) 750 751 (fontified t c-is-sws t) 751 752 (face font-lock-keyword-face fontified t c-is-sws t c-typedef ("queue")) 752 758 (face font-lock-keyword-face fontified t) 758 759 (face whitespace-space fontified t) 759 765 (face font-lock-keyword-face fontified t) 765 767 (fontified t) 767 768 (fontified t) 768 770 (face whitespace-space fontified t) 770 775 (face font-lock-type-face fontified t) 775 776 (face font-lock-type-face c-type c-decl-id-start fontified t) 776 777 (face whitespace-space fontified t) 777 781 (face font-lock-variable-name-face fontified t) 781 783 (fontified t) 783 785 (face whitespace-space fontified t) 785 796 (face font-lock-type-face fontified t) 796 797 (face font-lock-type-face c-type c-decl-id-start fontified t) 797 798 (face whitespace-space fontified t) 798 800 (fontified t) 800 808 (face font-lock-variable-name-face fontified t) 808 810 (fontified t) 810 811 (c-type c-decl-type-start fontified t) 811 812 (face whitespace-space fontified t) 812 817 (face font-lock-type-face fontified t) 817 819 (fontified t) 819 820 (fontified t) 820 821 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 821 822 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 822 823 (face font-lock-comment-face fontified t c-in-sws t) 823 824 (face whitespace-space fontified t c-in-sws t) 824 825 (face font-lock-comment-face fontified t c-in-sws t) 825 826 (face whitespace-space fontified t c-in-sws t) 826 832 (face font-lock-comment-face fontified t c-in-sws t) 832 833 (face whitespace-space fontified t c-in-sws t) 833 835 (face font-lock-comment-face fontified t c-in-sws t) 835 836 (face whitespace-space fontified t c-in-sws t) 836 841 (face font-lock-comment-face fontified t c-in-sws t) 841 842 (face whitespace-space fontified t c-in-sws t) 842 850 (face font-lock-comment-face fontified t c-in-sws t) 850 851 (face whitespace-space fontified t c-in-sws t) 851 857 (face font-lock-comment-face fontified t c-in-sws t) 857 858 (face whitespace-space fontified t c-in-sws t) 858 859 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 859 860 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 860 861 (fontified t c-is-sws t) 861 862 (face font-lock-type-face fontified t c-is-sws t) 862 864 (face font-lock-type-face fontified t) 864 865 (face font-lock-type-face c-type c-decl-id-start fontified t) 865 866 (face whitespace-space fontified t) 866 878 (face font-lock-function-name-face fontified t) 878 879 (face whitespace-space fontified t) 879 880 (c-type c-decl-arg-start fontified t) 880 885 (face font-lock-type-face fontified t) 885 886 (face whitespace-space fontified t) 886 887 (fontified t) 887 888 (face whitespace-space fontified t) 888 892 (face font-lock-variable-name-face fontified t) 892 896 (fontified t) 896 897 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 897 898 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 898 899 (face font-lock-comment-face fontified t c-in-sws t) 899 900 (face whitespace-space fontified t c-in-sws t) 900 901 (face font-lock-comment-face fontified t c-in-sws t) 901 902 (face whitespace-space fontified t c-in-sws t) 902 909 (face font-lock-comment-face fontified t c-in-sws t) 909 910 (face whitespace-space fontified t c-in-sws t) 910 911 (face font-lock-comment-face fontified t c-in-sws t) 911 912 (face whitespace-space fontified t c-in-sws t) 912 918 (face font-lock-comment-face fontified t c-in-sws t) 918 919 (face whitespace-space fontified t c-in-sws t) 919 921 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 921 922 (fontified t c-in-sws t) 922 923 (face font-lock-type-face fontified t c-is-sws t) 923 925 (face font-lock-type-face fontified t) 925 926 (face font-lock-type-face c-type c-decl-id-start fontified t) 926 927 (face whitespace-space fontified t) 927 940 (face font-lock-function-name-face fontified t) 940 941 (face whitespace-space fontified t) 941 942 (c-type c-decl-arg-start fontified t) 942 947 (face font-lock-type-face fontified t) 947 948 (face whitespace-space fontified t) 948 949 (fontified t) 949 950 (face whitespace-space fontified t) 950 954 (face font-lock-variable-name-face fontified t) 954 958 (fontified t) 958 959 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 959 960 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 960 961 (face font-lock-comment-face fontified t c-in-sws t) 961 962 (face whitespace-space fontified t c-in-sws t) 962 963 (face font-lock-comment-face fontified t c-in-sws t) 963 964 (face whitespace-space fontified t c-in-sws t) 964 970 (face font-lock-comment-face fontified t c-in-sws t) 970 971 (face whitespace-space fontified t c-in-sws t) 971 974 (face font-lock-comment-face fontified t c-in-sws t) 974 975 (face whitespace-space fontified t c-in-sws t) 975 981 (face font-lock-comment-face fontified t c-in-sws t) 981 982 (face whitespace-space fontified t c-in-sws t) 982 985 (face font-lock-comment-face fontified t c-in-sws t) 985 986 (face whitespace-space fontified t c-in-sws t) 986 992 (face font-lock-comment-face fontified t c-in-sws t) 992 993 (face whitespace-space fontified t c-in-sws t) 993 997 (face font-lock-comment-face fontified t c-in-sws t) 997 998 (face whitespace-space fontified t c-in-sws t) 998 1005 (face font-lock-comment-face fontified t c-in-sws t) 1005 1006 (face whitespace-space fontified t c-in-sws t) 1006 1011 (face font-lock-comment-face fontified t c-in-sws t) 1011 1012 (face whitespace-space fontified t c-in-sws t) 1012 1014 (face font-lock-comment-face fontified t c-in-sws t) 1014 1015 (face whitespace-space fontified t c-in-sws t) 1015 1018 (face font-lock-comment-face fontified t c-in-sws t) 1018 1019 (face whitespace-space fontified t c-in-sws t) 1019 1023 (face font-lock-comment-face fontified t c-in-sws t) 1023 1024 (c-in-sws t face font-lock-comment-face fontified t) 1024 1025 (c-in-sws t face whitespace-space fontified t) 1025 1026 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1026 1027 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1027 1028 (fontified t c-is-sws t) 1028 1029 (face font-lock-type-face fontified t c-is-sws t) 1029 1039 (face font-lock-type-face fontified t) 1039 1040 (face font-lock-type-face c-type c-decl-id-start fontified t) 1040 1041 (face whitespace-space fontified t) 1041 1042 (fontified t) 1042 1059 (face font-lock-function-name-face fontified t) 1059 1060 (face whitespace-space fontified t) 1060 1061 (c-type c-decl-arg-start fontified t) 1061 1066 (face font-lock-type-face fontified t) 1066 1067 (face whitespace-space fontified t) 1067 1068 (fontified t) 1068 1069 (face whitespace-space fontified t) 1069 1073 (face font-lock-variable-name-face fontified t) 1073 1077 (fontified t) 1077 1078 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1078 1079 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1079 1080 (face font-lock-comment-face fontified t c-in-sws t) 1080 1081 (face whitespace-space fontified t c-in-sws t) 1081 1082 (face font-lock-comment-face fontified t c-in-sws t) 1082 1083 (face whitespace-space fontified t c-in-sws t) 1083 1091 (face font-lock-comment-face fontified t c-in-sws t) 1091 1092 (face whitespace-space fontified t c-in-sws t) 1092 1095 (face font-lock-comment-face fontified t c-in-sws t) 1095 1096 (face whitespace-space fontified t c-in-sws t) 1096 1101 (face font-lock-comment-face fontified t c-in-sws t) 1101 1102 (face whitespace-space fontified t c-in-sws t) 1102 1104 (face font-lock-comment-face fontified t c-in-sws t) 1104 1105 (face whitespace-space fontified t c-in-sws t) 1105 1106 (face font-lock-comment-face fontified t c-in-sws t) 1106 1107 (face whitespace-space fontified t c-in-sws t) 1107 1113 (face font-lock-comment-face fontified t c-in-sws t) 1113 1114 (face whitespace-space fontified t c-in-sws t) 1114 1117 (face font-lock-comment-face fontified t c-in-sws t) 1117 1118 (face whitespace-space fontified t c-in-sws t) 1118 1120 (face font-lock-comment-face fontified t c-in-sws t) 1120 1121 (face whitespace-space fontified t c-in-sws t) 1121 1126 (face font-lock-comment-face fontified t c-in-sws t) 1126 1127 (face whitespace-space fontified t c-in-sws t) 1127 1128 (c-in-sws t face font-lock-comment-face fontified t) 1128 1129 (c-in-sws t face font-lock-comment-face fontified t) 1129 1130 (c-in-sws t face whitespace-space fontified t) 1130 1131 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1131 1132 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1132 1133 (fontified t c-is-sws t) 1133 1134 (face font-lock-type-face fontified t c-is-sws t) 1134 1136 (face font-lock-type-face fontified t) 1136 1137 (face font-lock-type-face c-type c-decl-id-start fontified t) 1137 1138 (face whitespace-space fontified t) 1138 1156 (face font-lock-function-name-face fontified t) 1156 1157 (face whitespace-space fontified t) 1157 1158 (c-type c-decl-arg-start fontified t) 1158 1163 (face font-lock-type-face fontified t) 1163 1164 (face whitespace-space fontified t) 1164 1165 (fontified t) 1165 1166 (face whitespace-space fontified t) 1166 1170 (face font-lock-variable-name-face fontified t) 1170 1171 (c-type c-decl-arg-start fontified t) 1171 1172 (face whitespace-space fontified t) 1172 1178 (face font-lock-type-face fontified t) 1178 1179 (face whitespace-space fontified t) 1179 1180 (face font-lock-variable-name-face fontified t) 1180 1182 (fontified t) 1182 1184 (fontified t) 1184 1185 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1185 1186 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1186 1187 (face font-lock-comment-face fontified t c-in-sws t) 1187 1188 (face whitespace-space fontified t c-in-sws t) 1188 1189 (face font-lock-comment-face fontified t c-in-sws t) 1189 1190 (face whitespace-space fontified t c-in-sws t) 1190 1196 (face font-lock-comment-face fontified t c-in-sws t) 1196 1197 (face whitespace-space fontified t c-in-sws t) 1197 1198 (face font-lock-comment-face fontified t c-in-sws t) 1198 1199 (face whitespace-space fontified t c-in-sws t) 1199 1205 (face font-lock-comment-face fontified t c-in-sws t) 1205 1206 (face whitespace-space fontified t c-in-sws t) 1206 1208 (face font-lock-comment-face fontified t c-in-sws t) 1208 1209 (face whitespace-space fontified t c-in-sws t) 1209 1212 (face font-lock-comment-face fontified t c-in-sws t) 1212 1213 (face whitespace-space fontified t c-in-sws t) 1213 1218 (face font-lock-comment-face fontified t c-in-sws t) 1218 1219 (face whitespace-space fontified t c-in-sws t) 1219 1221 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1221 1222 (fontified t c-in-sws t) 1222 1223 (face font-lock-type-face fontified t c-is-sws t) 1223 1225 (face font-lock-type-face fontified t) 1225 1226 (face font-lock-type-face c-type c-decl-id-start fontified t) 1226 1227 (face whitespace-space fontified t) 1227 1239 (face font-lock-function-name-face fontified t) 1239 1240 (face whitespace-space fontified t) 1240 1241 (c-type c-decl-arg-start fontified t) 1241 1246 (face font-lock-type-face fontified t) 1246 1247 (face whitespace-space fontified t) 1247 1248 (fontified t) 1248 1249 (face whitespace-space fontified t) 1249 1253 (face font-lock-variable-name-face fontified t) 1253 1254 (c-type c-decl-arg-start fontified t) 1254 1255 (face whitespace-space fontified t) 1255 1267 (face font-lock-type-face fontified t) 1267 1268 (face whitespace-space fontified t) 1268 1269 (fontified t) 1269 1270 (face whitespace-space fontified t) 1270 1276 (face font-lock-variable-name-face fontified t) 1276 1279 (fontified t) 1279 1280 (fontified t) 1280 1281 (fontified t) 1281 1282 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1282 1283 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1283 1284 (face whitespace-space fontified t c-in-sws t) 1284 1285 (face font-lock-comment-face fontified t c-in-sws t) 1285 1286 (face font-lock-comment-face fontified t c-in-sws t) 1286 1287 (face font-lock-comment-face fontified t c-in-sws t) 1287 1288 (face font-lock-comment-face fontified t c-in-sws t) 1288 1289 (face font-lock-comment-face fontified t c-in-sws t) 1289 1290 (face font-lock-comment-face fontified t c-in-sws t) 1290 1291 (face font-lock-comment-face fontified t c-in-sws t) 1291 1292 (face whitespace-space fontified t c-in-sws t) 1292 1293 (face font-lock-comment-face fontified t c-in-sws t) 1293 1294 (face font-lock-comment-face fontified t c-in-sws t) 1294 1295 (face font-lock-comment-face fontified t c-in-sws t) 1295 1296 (face font-lock-comment-face fontified t c-in-sws t) 1296 1297 (face font-lock-comment-face fontified t c-in-sws t) 1297 1298 (face font-lock-comment-face fontified t c-in-sws t) 1298 1299 (face font-lock-comment-face fontified t c-in-sws t) 1299 1300 (face font-lock-comment-face fontified t c-in-sws t) 1300 1301 (face whitespace-space fontified t c-in-sws t) 1301 1302 (face font-lock-comment-face fontified t c-in-sws t) 1302 1303 (face font-lock-comment-face fontified t c-in-sws t) 1303 1304 (face font-lock-comment-face fontified t c-in-sws t) 1304 1305 (face font-lock-comment-face fontified t c-in-sws t) 1305 1306 (face whitespace-space fontified t c-in-sws t) 1306 1307 (face font-lock-comment-face fontified t c-in-sws t) 1307 1308 (face font-lock-comment-face fontified t c-in-sws t) 1308 1309 (face font-lock-comment-face fontified t c-in-sws t) 1309 1310 (face font-lock-comment-face fontified t c-in-sws t) 1310 1311 (face font-lock-comment-face fontified t c-in-sws t) 1311 1312 (face font-lock-comment-face fontified t c-in-sws t) 1312 1314 (face font-lock-comment-face fontified t c-in-sws t) 1314 1315 (face font-lock-comment-face fontified t c-in-sws t) 1315 1316 (face whitespace-space fontified t c-in-sws t) 1316 1317 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1317 1318 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . 64) (undo-tree-id1459 . -1179) (undo-tree-id1460 . -958) (undo-tree-id1461 . 360) (undo-tree-id1462 . -958) (undo-tree-id1463 . -958) (undo-tree-id1464 . -820) (undo-tree-id1465 . -958) (undo-tree-id1466 . -958) (undo-tree-id1467 . -820) (undo-tree-id1468 . -1306) (undo-tree-id1469 . 1055) (undo-tree-id1470 . -895) (undo-tree-id1471 . -10) (undo-tree-id1472 . -721) (undo-tree-id1473 . -723) (undo-tree-id1474 . -690) (undo-tree-id1475 . -958) (undo-tree-id1476 . -1279) (undo-tree-id1477 . -611) (undo-tree-id1478 . -1179) (undo-tree-id1479 . -1179) (undo-tree-id1480 . -1179) (t 26504 6561 583952 865000)) nil (26507 38871 436257 304000) 0 nil])
([nil nil ((64 . 1382) (#("#include <stdbool.h>

typedef struct sgraph_vertex
{
  size_t degree;
  struct sgraph_vertex **neighbors;
  int *weights;
  // Data for MST procedure
  int distance;
  int index;
  struct sgraph_vertex *parent;
} graph_vertex;

typedef struct sgraph
{
  size_t size;
  graph_vertex **vertices;
} graph;

/*
 * Create an empty graph
 */
void graph_create (graph * self);

/*
 * Destroy a graph
 */
void graph_destroy (graph * self);

/*
 * Add a vertex with given key
 */
graph_vertex *graph_add_vertex (graph * self);

/*
 * Add an edge between two vertices
 */
void graph_add_edge (graph_vertex * source, graph_vertex * destination,
                     int weight);

typedef struct
{
  size_t size;
  graph_vertex **vertices;
} queue;

/*
 * Create an empty priority queue
 */
void queue_create (queue * self);

/*
 * Destroy a queue
 */
void queue_destroy (queue * self);

/*
 * Maintain the min heap property assuming the children of vertex i
 * are valid min heaps.
 */
void queue_heapify (queue * self, size_t i);

/*
 * Get the value at the top of the heap.
 */
graph_vertex *queue_minimum (queue * self);

/*
 * Remove and return the vertex with minimum value in the heap.
 */
graph_vertex *queue_extract_min (queue * self);

/*
 * Decrease the value of a vertex key at index x.
 */
void queue_decrease_key (queue * self, size_t x);

/*
 * Insert a vertex in the heap
 */
void queue_insert (queue * self, graph_vertex * vertex);" 0 1 (fontified nil c-is-sws t) 1 21 (fontified nil) 21 23 (fontified nil c-is-sws t) 23 1436 (fontified nil)) . 64) (undo-tree-id1458 . -20) (t 26504 10531 353072 358000)) nil (26507 38871 446683 45000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1341) (undo-tree-id1488 . -1) 1342 (1341 . 1342) (t 26507 42874 635474 451000)) nil (26507 47577 475820 309000) 0 nil] [nil nil ((#("/* Queue data structure */

typedef struct
{
  size_t size;
  graph_vertex **vertices;
} queue;

/*
 * Create an empty priority queue
 */
void queue_create (queue * self);

/*
 * Destroy a queue
 */
void queue_destroy (queue * self);

/*
 * Remove and return the vertex with minimum value in the heap
 */
graph_vertex *queue_extract_min (queue * self);

/*
 * Decrease the value of a vertex key at index i
 */
void queue_decrease_key (queue * self, size_t i);

/*
 * Insert a vertex in the heap
 */
void queue_insert (queue * self, graph_vertex * vertex);


" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 3 (c-in-sws t face whitespace-space fontified t) 3 8 (c-in-sws t face font-lock-comment-face fontified t) 8 9 (c-in-sws t face whitespace-space fontified t) 9 13 (c-in-sws t face font-lock-comment-face fontified t) 13 14 (c-in-sws t face whitespace-space fontified t) 14 23 (c-in-sws t face font-lock-comment-face fontified t) 23 24 (c-in-sws t face whitespace-space fontified t) 24 26 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 26 28 (c-in-sws t fontified t) 28 29 (c-is-sws t c-typedef ("queue") face font-lock-keyword-face fontified t) 29 35 (face font-lock-keyword-face fontified t) 35 36 (face whitespace-space fontified t) 36 42 (face font-lock-keyword-face fontified t) 42 45 (fontified t) 45 47 (face whitespace-space fontified t) 47 52 (face font-lock-type-face fontified t) 52 53 (face font-lock-type-face c-type c-decl-id-start fontified t) 53 54 (face whitespace-space fontified t) 54 58 (face font-lock-variable-name-face fontified t) 58 60 (fontified t) 60 62 (face whitespace-space fontified t) 62 73 (face font-lock-type-face fontified t) 73 74 (face font-lock-type-face c-type c-decl-id-start fontified t) 74 75 (face whitespace-space fontified t) 75 77 (fontified t) 77 85 (face font-lock-variable-name-face fontified t) 85 87 (fontified t) 87 88 (c-type c-decl-type-start fontified t) 88 89 (face whitespace-space fontified t) 89 94 (face font-lock-type-face fontified t) 94 97 (fontified t) 97 98 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 98 99 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 99 100 (c-in-sws t face font-lock-comment-face fontified t) 100 101 (c-in-sws t face whitespace-space fontified t) 101 102 (c-in-sws t face font-lock-comment-face fontified t) 102 103 (c-in-sws t face whitespace-space fontified t) 103 109 (c-in-sws t face font-lock-comment-face fontified t) 109 110 (c-in-sws t face whitespace-space fontified t) 110 112 (c-in-sws t face font-lock-comment-face fontified t) 112 113 (c-in-sws t face whitespace-space fontified t) 113 118 (c-in-sws t face font-lock-comment-face fontified t) 118 119 (c-in-sws t face whitespace-space fontified t) 119 127 (c-in-sws t face font-lock-comment-face fontified t) 127 128 (c-in-sws t face whitespace-space fontified t) 128 134 (c-in-sws t face font-lock-comment-face fontified t) 134 135 (c-in-sws t face whitespace-space fontified t) 135 137 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 137 138 (c-in-sws t fontified t) 138 139 (face font-lock-type-face c-is-sws t fontified t) 139 141 (face font-lock-type-face fontified t) 141 142 (face font-lock-type-face c-type c-decl-id-start fontified t) 142 143 (face whitespace-space fontified t) 143 155 (face font-lock-function-name-face fontified t) 155 156 (face whitespace-space fontified t) 156 157 (c-type c-decl-arg-start fontified t) 157 162 (face font-lock-type-face fontified t) 162 163 (face whitespace-space fontified t) 163 164 (fontified t) 164 165 (face whitespace-space fontified t) 165 169 (face font-lock-variable-name-face fontified t) 169 173 (fontified t) 173 174 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 174 175 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 175 176 (c-in-sws t face font-lock-comment-face fontified t) 176 177 (c-in-sws t face whitespace-space fontified t) 177 178 (c-in-sws t face font-lock-comment-face fontified t) 178 179 (c-in-sws t face whitespace-space fontified t) 179 186 (c-in-sws t face font-lock-comment-face fontified t) 186 187 (c-in-sws t face whitespace-space fontified t) 187 188 (c-in-sws t face font-lock-comment-face fontified t) 188 189 (c-in-sws t face whitespace-space fontified t) 189 195 (c-in-sws t face font-lock-comment-face fontified t) 195 196 (c-in-sws t face whitespace-space fontified t) 196 198 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 198 199 (c-in-sws t fontified t) 199 200 (face font-lock-type-face c-is-sws t fontified t) 200 202 (face font-lock-type-face fontified t) 202 203 (face font-lock-type-face c-type c-decl-id-start fontified t) 203 204 (face whitespace-space fontified t) 204 217 (face font-lock-function-name-face fontified t) 217 218 (face whitespace-space fontified t) 218 219 (c-type c-decl-arg-start fontified t) 219 224 (face font-lock-type-face fontified t) 224 225 (face whitespace-space fontified t) 225 226 (fontified t) 226 227 (face whitespace-space fontified t) 227 231 (face font-lock-variable-name-face fontified t) 231 235 (fontified t) 235 236 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 236 237 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 237 238 (c-in-sws t face font-lock-comment-face fontified t) 238 239 (c-in-sws t face whitespace-space fontified t) 239 240 (c-in-sws t face font-lock-comment-face fontified t) 240 241 (c-in-sws t face whitespace-space fontified t) 241 247 (c-in-sws t face font-lock-comment-face fontified t) 247 248 (c-in-sws t face whitespace-space fontified t) 248 251 (c-in-sws t face font-lock-comment-face fontified t) 251 252 (c-in-sws t face whitespace-space fontified t) 252 258 (c-in-sws t face font-lock-comment-face fontified t) 258 259 (c-in-sws t face whitespace-space fontified t) 259 262 (c-in-sws t face font-lock-comment-face fontified t) 262 263 (c-in-sws t face whitespace-space fontified t) 263 269 (c-in-sws t face font-lock-comment-face fontified t) 269 270 (c-in-sws t face whitespace-space fontified t) 270 274 (c-in-sws t face font-lock-comment-face fontified t) 274 275 (c-in-sws t face whitespace-space fontified t) 275 282 (c-in-sws t face font-lock-comment-face fontified t) 282 283 (c-in-sws t face whitespace-space fontified t) 283 288 (c-in-sws t face font-lock-comment-face fontified t) 288 289 (c-in-sws t face whitespace-space fontified t) 289 291 (c-in-sws t face font-lock-comment-face fontified t) 291 292 (c-in-sws t face whitespace-space fontified t) 292 295 (c-in-sws t face font-lock-comment-face fontified t) 295 296 (c-in-sws t face whitespace-space fontified t) 296 301 (c-in-sws t face font-lock-comment-face fontified t) 301 302 (c-in-sws t face whitespace-space fontified t) 302 304 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 304 305 (c-in-sws t fontified t) 305 306 (face font-lock-type-face c-is-sws t fontified t) 306 316 (face font-lock-type-face fontified t) 316 317 (face font-lock-type-face c-type c-decl-id-start fontified t) 317 318 (face whitespace-space fontified t) 318 319 (fontified t) 319 336 (face font-lock-function-name-face fontified t) 336 337 (face whitespace-space fontified t) 337 338 (c-type c-decl-arg-start fontified t) 338 343 (face font-lock-type-face fontified t) 343 344 (face whitespace-space fontified t) 344 345 (fontified t) 345 346 (face whitespace-space fontified t) 346 350 (face font-lock-variable-name-face fontified t) 350 354 (fontified t) 354 355 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 355 356 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 356 357 (c-in-sws t face font-lock-comment-face fontified t) 357 358 (c-in-sws t face whitespace-space fontified t) 358 359 (c-in-sws t face font-lock-comment-face fontified t) 359 360 (c-in-sws t face whitespace-space fontified t) 360 368 (c-in-sws t face font-lock-comment-face fontified t) 368 369 (c-in-sws t face whitespace-space fontified t) 369 372 (c-in-sws t face font-lock-comment-face fontified t) 372 373 (c-in-sws t face whitespace-space fontified t) 373 378 (c-in-sws t face font-lock-comment-face fontified t) 378 379 (c-in-sws t face whitespace-space fontified t) 379 381 (c-in-sws t face font-lock-comment-face fontified t) 381 382 (c-in-sws t face whitespace-space fontified t) 382 383 (c-in-sws t face font-lock-comment-face fontified t) 383 384 (c-in-sws t face whitespace-space fontified t) 384 390 (c-in-sws t face font-lock-comment-face fontified t) 390 391 (c-in-sws t face whitespace-space fontified t) 391 394 (c-in-sws t face font-lock-comment-face fontified t) 394 395 (c-in-sws t face whitespace-space fontified t) 395 397 (c-in-sws t face font-lock-comment-face fontified t) 397 398 (c-in-sws t face whitespace-space fontified t) 398 403 (c-in-sws t face font-lock-comment-face fontified t) 403 404 (c-in-sws t face whitespace-space fontified t) 404 406 (c-in-sws t face font-lock-comment-face fontified t) 406 407 (c-in-sws t face whitespace-space fontified t) 407 409 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 409 410 (c-in-sws t fontified t) 410 411 (face font-lock-type-face c-is-sws t fontified t) 411 413 (face font-lock-type-face fontified t) 413 414 (face font-lock-type-face c-type c-decl-id-start fontified t) 414 415 (face whitespace-space fontified t) 415 433 (face font-lock-function-name-face fontified t) 433 434 (face whitespace-space fontified t) 434 435 (fontified t) 435 440 (fontified t) 440 441 (face whitespace-space fontified t) 441 442 (fontified t) 442 443 (face whitespace-space fontified t) 443 447 (fontified t) 447 448 (fontified t) 448 449 (face whitespace-space fontified t) 449 455 (face font-lock-type-face fontified t) 455 456 (face whitespace-space fontified t) 456 457 (face font-lock-variable-name-face fontified t) 457 461 (fontified t) 461 462 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 462 463 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 463 464 (c-in-sws t face font-lock-comment-face fontified t) 464 465 (c-in-sws t face whitespace-space fontified t) 465 466 (c-in-sws t face font-lock-comment-face fontified t) 466 467 (c-in-sws t face whitespace-space fontified t) 467 473 (c-in-sws t face font-lock-comment-face fontified t) 473 474 (c-in-sws t face whitespace-space fontified t) 474 475 (c-in-sws t face font-lock-comment-face fontified t) 475 476 (c-in-sws t face whitespace-space fontified t) 476 482 (c-in-sws t face font-lock-comment-face fontified t) 482 483 (c-in-sws t face whitespace-space fontified t) 483 485 (c-in-sws t face font-lock-comment-face fontified t) 485 486 (c-in-sws t face whitespace-space fontified t) 486 489 (c-in-sws t face font-lock-comment-face fontified t) 489 490 (c-in-sws t face whitespace-space fontified t) 490 495 (c-in-sws t face font-lock-comment-face fontified t) 495 496 (c-in-sws t face whitespace-space fontified t) 496 498 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 498 499 (c-in-sws t fontified t) 499 500 (face font-lock-type-face c-is-sws t fontified t) 500 502 (face font-lock-type-face fontified t) 502 503 (face font-lock-type-face c-type c-decl-id-start fontified t) 503 504 (face whitespace-space fontified t) 504 516 (face font-lock-function-name-face fontified t) 516 517 (face whitespace-space fontified t) 517 518 (c-type c-decl-arg-start fontified t) 518 523 (face font-lock-type-face fontified t) 523 524 (face whitespace-space fontified t) 524 525 (fontified t) 525 526 (face whitespace-space fontified t) 526 530 (face font-lock-variable-name-face fontified t) 530 531 (c-type c-decl-arg-start fontified t) 531 532 (face whitespace-space fontified t) 532 544 (face font-lock-type-face fontified t) 544 545 (face whitespace-space fontified t) 545 546 (fontified t) 546 547 (face whitespace-space fontified t) 547 553 (face font-lock-variable-name-face fontified t) 553 558 (fontified t)) . 787) (undo-tree-id1452 . -557) (undo-tree-id1453 . -557) (undo-tree-id1454 . -557) (undo-tree-id1455 . -557) (undo-tree-id1456 . -63) (undo-tree-id1457 . -305) 1344 (t 26507 38668 292320 389000)) ((787 . 1345)) (26507 38871 442863 638000) 0 nil])
([nil nil ((849 . 853) (846 . 849) 845) nil (26507 47577 475817 667000) 0 nil])
([nil nil ((nil rear-nonsticky nil 622 . 623) (nil fontified nil 94 . 623) (nil fontified nil 93 . 94) (nil fontified nil 66 . 93) (nil fontified nil 65 . 66) (65 . 623)) ((#("/* Queue data structure */

typedef struct
{
  size_t size;
  graph_vertex **vertices;
} queue;

/*
 * Create an empty priority queue
 */
void queue_create (queue * self);

/*
 * Destroy a queue
 */
void queue_destroy (queue * self);

/*
 * Remove and return the vertex with minimum value in the heap
 */
graph_vertex *queue_extract_min (queue * self);

/*
 * Decrease the value of a vertex key at index i
 */
void queue_decrease_key (queue * self, size_t i);

/*
 * Insert a vertex in the heap
 */
void queue_insert (queue * self, graph_vertex * vertex);


" 0 1 (c-is-sws t face font-lock-comment-delimiter-face fontified nil) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 2 3 (c-in-sws t face whitespace-space fontified nil) 3 8 (c-in-sws t face font-lock-comment-face fontified nil) 8 9 (c-in-sws t face whitespace-space fontified nil) 9 13 (c-in-sws t face font-lock-comment-face fontified nil) 13 14 (c-in-sws t face whitespace-space fontified nil) 14 23 (c-in-sws t face font-lock-comment-face fontified nil) 23 24 (c-in-sws t face whitespace-space fontified nil) 24 25 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 25 26 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 26 27 (c-in-sws t fontified nil) 27 28 (c-in-sws t c-is-sws t fontified nil) 28 29 (c-typedef ("queue") face font-lock-keyword-face fontified nil c-is-sws t) 29 35 (face font-lock-keyword-face fontified nil) 35 36 (face whitespace-space fontified nil) 36 42 (face font-lock-keyword-face fontified nil) 42 45 (fontified nil) 45 47 (face whitespace-space fontified nil) 47 52 (face font-lock-type-face fontified nil) 52 53 (face font-lock-type-face fontified nil) 53 54 (face whitespace-space fontified nil) 54 58 (face font-lock-variable-name-face fontified nil) 58 60 (fontified nil) 60 62 (face whitespace-space fontified nil) 62 73 (face font-lock-type-face fontified nil) 73 74 (face font-lock-type-face fontified nil) 74 75 (face whitespace-space fontified nil) 75 77 (fontified nil) 77 85 (face font-lock-variable-name-face fontified nil) 85 87 (fontified nil) 87 88 (fontified nil) 88 89 (face whitespace-space fontified nil) 89 94 (face font-lock-type-face fontified nil) 94 97 (fontified nil) 97 98 (face font-lock-comment-delimiter-face fontified nil) 98 99 (face font-lock-comment-delimiter-face fontified nil) 99 100 (face font-lock-comment-face fontified nil) 100 101 (face whitespace-space fontified nil) 101 102 (face font-lock-comment-face fontified nil) 102 103 (face whitespace-space fontified nil) 103 109 (face font-lock-comment-face fontified nil) 109 110 (face whitespace-space fontified nil) 110 112 (face font-lock-comment-face fontified nil) 112 113 (face whitespace-space fontified nil) 113 118 (face font-lock-comment-face fontified nil) 118 119 (face whitespace-space fontified nil) 119 127 (face font-lock-comment-face fontified nil) 127 128 (face whitespace-space fontified nil) 128 134 (face font-lock-comment-face fontified nil) 134 135 (face whitespace-space fontified nil) 135 137 (face font-lock-comment-delimiter-face fontified nil) 137 138 (fontified nil) 138 139 (face font-lock-type-face fontified nil) 139 141 (face font-lock-type-face fontified nil) 141 142 (face font-lock-type-face fontified nil) 142 143 (face whitespace-space fontified nil) 143 155 (face font-lock-function-name-face fontified nil) 155 156 (face whitespace-space fontified nil) 156 157 (fontified nil) 157 162 (face font-lock-type-face fontified nil) 162 163 (face whitespace-space fontified nil) 163 164 (fontified nil) 164 165 (face whitespace-space fontified nil) 165 169 (face font-lock-variable-name-face fontified nil) 169 173 (fontified nil) 173 174 (face font-lock-comment-delimiter-face fontified nil) 174 175 (face font-lock-comment-delimiter-face fontified nil) 175 176 (face font-lock-comment-face fontified nil) 176 177 (face whitespace-space fontified nil) 177 178 (face font-lock-comment-face fontified nil) 178 179 (face whitespace-space fontified nil) 179 186 (face font-lock-comment-face fontified nil) 186 187 (face whitespace-space fontified nil) 187 188 (face font-lock-comment-face fontified nil) 188 189 (face whitespace-space fontified nil) 189 195 (face font-lock-comment-face fontified nil) 195 196 (face whitespace-space fontified nil) 196 198 (face font-lock-comment-delimiter-face fontified nil) 198 199 (fontified nil) 199 200 (face font-lock-type-face fontified nil) 200 202 (face font-lock-type-face fontified nil) 202 203 (face font-lock-type-face fontified nil) 203 204 (face whitespace-space fontified nil) 204 217 (face font-lock-function-name-face fontified nil) 217 218 (face whitespace-space fontified nil) 218 219 (fontified nil) 219 224 (face font-lock-type-face fontified nil) 224 225 (face whitespace-space fontified nil) 225 226 (fontified nil) 226 227 (face whitespace-space fontified nil) 227 231 (face font-lock-variable-name-face fontified nil) 231 235 (fontified nil) 235 236 (face font-lock-comment-delimiter-face fontified nil) 236 237 (face font-lock-comment-delimiter-face fontified nil) 237 238 (face font-lock-comment-face fontified nil) 238 239 (face whitespace-space fontified nil) 239 240 (face font-lock-comment-face fontified nil) 240 241 (face whitespace-space fontified nil) 241 247 (face font-lock-comment-face fontified nil) 247 248 (face whitespace-space fontified nil) 248 251 (face font-lock-comment-face fontified nil) 251 252 (face whitespace-space fontified nil) 252 258 (face font-lock-comment-face fontified nil) 258 259 (face whitespace-space fontified nil) 259 262 (face font-lock-comment-face fontified nil) 262 263 (face whitespace-space fontified nil) 263 269 (face font-lock-comment-face fontified nil) 269 270 (face whitespace-space fontified nil) 270 274 (face font-lock-comment-face fontified nil) 274 275 (face whitespace-space fontified nil) 275 282 (face font-lock-comment-face fontified nil) 282 283 (face whitespace-space fontified nil) 283 288 (face font-lock-comment-face fontified nil) 288 289 (face whitespace-space fontified nil) 289 291 (face font-lock-comment-face fontified nil) 291 292 (face whitespace-space fontified nil) 292 295 (face font-lock-comment-face fontified nil) 295 296 (face whitespace-space fontified nil) 296 301 (face font-lock-comment-face fontified nil) 301 302 (face whitespace-space fontified nil) 302 304 (face font-lock-comment-delimiter-face fontified nil) 304 305 (fontified nil) 305 306 (face font-lock-type-face fontified nil) 306 316 (face font-lock-type-face fontified nil) 316 317 (face font-lock-type-face fontified nil) 317 318 (face whitespace-space fontified nil) 318 319 (fontified nil) 319 336 (face font-lock-function-name-face fontified nil) 336 337 (face whitespace-space fontified nil) 337 338 (fontified nil) 338 343 (face font-lock-type-face fontified nil) 343 344 (face whitespace-space fontified nil) 344 345 (fontified nil) 345 346 (face whitespace-space fontified nil) 346 350 (face font-lock-variable-name-face fontified nil) 350 354 (fontified nil) 354 355 (face font-lock-comment-delimiter-face fontified nil) 355 356 (face font-lock-comment-delimiter-face fontified nil) 356 357 (face font-lock-comment-face fontified nil) 357 358 (face whitespace-space fontified nil) 358 359 (face font-lock-comment-face fontified nil) 359 360 (face whitespace-space fontified nil) 360 368 (face font-lock-comment-face fontified nil) 368 369 (face whitespace-space fontified nil) 369 372 (face font-lock-comment-face fontified nil) 372 373 (face whitespace-space fontified nil) 373 378 (face font-lock-comment-face fontified nil) 378 379 (face whitespace-space fontified nil) 379 381 (face font-lock-comment-face fontified nil) 381 382 (face whitespace-space fontified nil) 382 383 (face font-lock-comment-face fontified nil) 383 384 (face whitespace-space fontified nil) 384 390 (face font-lock-comment-face fontified nil) 390 391 (face whitespace-space fontified nil) 391 394 (face font-lock-comment-face fontified nil) 394 395 (face whitespace-space fontified nil) 395 397 (face font-lock-comment-face fontified nil) 397 398 (face whitespace-space fontified nil) 398 403 (face font-lock-comment-face fontified nil) 403 404 (face whitespace-space fontified nil) 404 406 (face font-lock-comment-face fontified nil) 406 407 (face whitespace-space fontified nil) 407 409 (face font-lock-comment-delimiter-face fontified nil) 409 410 (fontified nil) 410 411 (face font-lock-type-face fontified nil) 411 413 (face font-lock-type-face fontified nil) 413 414 (face font-lock-type-face fontified nil) 414 415 (face whitespace-space fontified nil) 415 433 (face font-lock-function-name-face fontified nil) 433 434 (face whitespace-space fontified nil) 434 435 (fontified nil) 435 440 (fontified nil) 440 441 (face whitespace-space fontified nil) 441 442 (fontified nil) 442 443 (face whitespace-space fontified nil) 443 447 (fontified nil) 447 448 (fontified nil) 448 449 (face whitespace-space fontified nil) 449 455 (face font-lock-type-face fontified nil) 455 456 (face whitespace-space fontified nil) 456 457 (face font-lock-variable-name-face fontified nil) 457 461 (fontified nil) 461 462 (face font-lock-comment-delimiter-face fontified nil) 462 463 (face font-lock-comment-delimiter-face fontified nil) 463 464 (face font-lock-comment-face fontified nil) 464 465 (face whitespace-space fontified nil) 465 466 (face font-lock-comment-face fontified nil) 466 467 (face whitespace-space fontified nil) 467 473 (face font-lock-comment-face fontified nil) 473 474 (face whitespace-space fontified nil) 474 475 (face font-lock-comment-face fontified nil) 475 476 (face whitespace-space fontified nil) 476 482 (face font-lock-comment-face fontified nil) 482 483 (face whitespace-space fontified nil) 483 485 (face font-lock-comment-face fontified nil) 485 486 (face whitespace-space fontified nil) 486 489 (face font-lock-comment-face fontified nil) 489 490 (face whitespace-space fontified nil) 490 495 (face font-lock-comment-face fontified nil) 495 496 (face whitespace-space fontified nil) 496 498 (face font-lock-comment-delimiter-face fontified nil) 498 499 (fontified nil) 499 500 (face font-lock-type-face fontified nil) 500 502 (face font-lock-type-face fontified nil) 502 503 (face font-lock-type-face fontified nil) 503 504 (face whitespace-space fontified nil) 504 516 (face font-lock-function-name-face fontified nil) 516 517 (face whitespace-space fontified nil) 517 518 (fontified nil) 518 523 (face font-lock-type-face fontified nil) 523 524 (face whitespace-space fontified nil) 524 525 (fontified nil) 525 526 (face whitespace-space fontified nil) 526 530 (face font-lock-variable-name-face fontified nil) 530 531 (fontified nil) 531 532 (face whitespace-space fontified nil) 532 544 (face font-lock-type-face fontified nil) 544 545 (face whitespace-space fontified nil) 545 546 (fontified nil) 546 547 (face whitespace-space fontified nil) 547 553 (face font-lock-variable-name-face fontified nil) 553 556 (fontified nil) 556 557 (fontified nil) 557 558 (fontified nil rear-nonsticky nil)) . 65) (undo-tree-id1481 . -557) (undo-tree-id1482 . -557) (undo-tree-id1483 . -557) (undo-tree-id1484 . -557) (undo-tree-id1485 . -557) (undo-tree-id1486 . -557) (nil fontified t 92 . 93) (nil fontified t 91 . 92) (nil fontified t 90 . 91) (nil fontified t 89 . 90) (nil fontified t 88 . 89) (nil fontified t 79 . 88) (nil fontified t 78 . 79) (nil fontified t 74 . 78) (nil fontified t 73 . 74) (nil fontified t 68 . 73) (nil fontified t 67 . 68) (nil fontified t 66 . 67) (nil fontified t 621 . 622) (nil fontified t 618 . 621) (nil fontified t 612 . 618) (nil fontified t 611 . 612) (nil fontified t 610 . 611) (nil fontified t 609 . 610) (nil fontified t 597 . 609) (nil fontified t 596 . 597) (nil fontified t 595 . 596) (nil fontified t 591 . 595) (nil fontified t 590 . 591) (nil fontified t 589 . 590) (nil fontified t 588 . 589) (nil fontified t 583 . 588) (nil fontified t 582 . 583) (nil fontified t 581 . 582) (nil fontified t 569 . 581) (nil fontified t 568 . 569) (nil fontified t 567 . 568) (nil fontified t 565 . 567) (nil fontified t 564 . 565) (nil fontified t 563 . 564) (nil fontified t 561 . 563) (nil fontified t 560 . 561) (nil fontified t 555 . 560) (nil fontified t 554 . 555) (nil fontified t 551 . 554) (nil fontified t 550 . 551) (nil fontified t 548 . 550) (nil fontified t 547 . 548) (nil fontified t 541 . 547) (nil fontified t 540 . 541) (nil fontified t 539 . 540) (nil fontified t 538 . 539) (nil fontified t 532 . 538) (nil fontified t 531 . 532) (nil fontified t 530 . 531) (nil fontified t 529 . 530) (nil fontified t 528 . 529) (nil fontified t 527 . 528) (nil fontified t 526 . 527) (nil fontified t 522 . 526) (nil fontified t 521 . 522) (nil fontified t 520 . 521) (nil fontified t 514 . 520) (nil fontified t 513 . 514) (nil fontified t 512 . 513) (nil fontified t 508 . 512) (nil fontified t 507 . 508) (nil fontified t 506 . 507) (nil fontified t 505 . 506) (nil fontified t 500 . 505) (nil fontified t 499 . 500) (nil fontified t 498 . 499) (nil fontified t 480 . 498) (nil fontified t 479 . 480) (nil fontified t 478 . 479) (nil fontified t 476 . 478) (nil fontified t 475 . 476) (nil fontified t 474 . 475) (nil fontified t 472 . 474) (nil fontified t 471 . 472) (nil fontified t 469 . 471) (nil fontified t 468 . 469) (nil fontified t 463 . 468) (nil fontified t 462 . 463) (nil fontified t 460 . 462) (nil fontified t 459 . 460) (nil fontified t 456 . 459) (nil fontified t 455 . 456) (nil fontified t 449 . 455) (nil fontified t 448 . 449) (nil fontified t 447 . 448) (nil fontified t 446 . 447) (nil fontified t 444 . 446) (nil fontified t 443 . 444) (nil fontified t 438 . 443) (nil fontified t 437 . 438) (nil fontified t 434 . 437) (nil fontified t 433 . 434) (nil fontified t 425 . 433) (nil fontified t 424 . 425) (nil fontified t 423 . 424) (nil fontified t 422 . 423) (nil fontified t 421 . 422) (nil fontified t 420 . 421) (nil fontified t 419 . 420) (nil fontified t 415 . 419) (nil fontified t 411 . 415) (nil fontified t 410 . 411) (nil fontified t 409 . 410) (nil fontified t 408 . 409) (nil fontified t 403 . 408) (nil fontified t 402 . 403) (nil fontified t 401 . 402) (nil fontified t 384 . 401) (nil fontified t 383 . 384) (nil fontified t 382 . 383) (nil fontified t 381 . 382) (nil fontified t 371 . 381) (nil fontified t 370 . 371) (nil fontified t 369 . 370) (nil fontified t 367 . 369) (nil fontified t 366 . 367) (nil fontified t 361 . 366) (nil fontified t 360 . 361) (nil fontified t 357 . 360) (nil fontified t 356 . 357) (nil fontified t 354 . 356) (nil fontified t 353 . 354) (nil fontified t 348 . 353) (nil fontified t 347 . 348) (nil fontified t 340 . 347) (nil fontified t 339 . 340) (nil fontified t 335 . 339) (nil fontified t 334 . 335) (nil fontified t 328 . 334) (nil fontified t 327 . 328) (nil fontified t 324 . 327) (nil fontified t 323 . 324) (nil fontified t 317 . 323) (nil fontified t 316 . 317) (nil fontified t 313 . 316) (nil fontified t 312 . 313) (nil fontified t 306 . 312) (nil fontified t 305 . 306) (nil fontified t 304 . 305) (nil fontified t 303 . 304) (nil fontified t 302 . 303) (nil fontified t 301 . 302) (nil fontified t 300 . 301) (nil fontified t 296 . 300) (nil fontified t 292 . 296) (nil fontified t 291 . 292) (nil fontified t 290 . 291) (nil fontified t 289 . 290) (nil fontified t 284 . 289) (nil fontified t 283 . 284) (nil fontified t 282 . 283) (nil fontified t 269 . 282) (nil fontified t 268 . 269) (nil fontified t 267 . 268) (nil fontified t 265 . 267) (nil fontified t 264 . 265) (nil fontified t 263 . 264) (nil fontified t 261 . 263) (nil fontified t 260 . 261) (nil fontified t 254 . 260) (nil fontified t 253 . 254) (nil fontified t 252 . 253) (nil fontified t 251 . 252) (nil fontified t 244 . 251) (nil fontified t 243 . 244) (nil fontified t 242 . 243) (nil fontified t 241 . 242) (nil fontified t 240 . 241) (nil fontified t 239 . 240) (nil fontified t 238 . 239) (nil fontified t 234 . 238) (nil fontified t 230 . 234) (nil fontified t 229 . 230) (nil fontified t 228 . 229) (nil fontified t 227 . 228) (nil fontified t 222 . 227) (nil fontified t 221 . 222) (nil fontified t 220 . 221) (nil fontified t 208 . 220) (nil fontified t 207 . 208) (nil fontified t 206 . 207) (nil fontified t 204 . 206) (nil fontified t 203 . 204) (nil fontified t 202 . 203) (nil fontified t 200 . 202) (nil fontified t 199 . 200) (nil fontified t 193 . 199) (nil fontified t 192 . 193) (nil fontified t 184 . 192) (nil fontified t 183 . 184) (nil fontified t 178 . 183) (nil fontified t 177 . 178) (nil fontified t 175 . 177) (nil fontified t 174 . 175) (nil fontified t 168 . 174) (nil fontified t 167 . 168) (nil fontified t 166 . 167) (nil fontified t 165 . 166) (nil fontified t 164 . 165) (nil fontified t 163 . 164) (nil fontified t 162 . 163) (nil fontified t 159 . 162) (nil fontified t 154 . 159) (nil fontified t 153 . 154) (nil fontified t 152 . 153) (nil fontified t 150 . 152) (nil fontified t 142 . 150) (nil fontified t 140 . 142) (nil fontified t 139 . 140) (nil fontified t 138 . 139) (nil fontified t 127 . 138) (nil fontified t 125 . 127) (nil fontified t 123 . 125) (nil fontified t 119 . 123) (nil fontified t 118 . 119) (nil fontified t 117 . 118) (nil fontified t 112 . 117) (nil fontified t 110 . 112) (nil fontified t 107 . 110) (nil fontified t 101 . 107) (nil fontified t 100 . 101) (nil fontified t 94 . 100) (nil rear-nonsticky t 622 . 623)) (26507 38871 436207 492000) 0 nil])
([nil nil ((859 . 860) (853 . 859) (852 . 853) (#(" " 0 1 (face whitespace-space fontified t)) . -852) (undo-tree-id1487 . -1) 853) nil (26507 47577 475813 121000) 0 nil])
nil
([nil nil ((854 . 864) (#("^" 0 1 (fontified t)) . -854) (undo-tree-id1489 . -1) (#("r" 0 1 (fontified t)) . -855) (undo-tree-id1490 . -1) 856 (854 . 856) (#("array" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t)) . -854) (undo-tree-id1491 . -5) (undo-tree-id1492 . -5) 859 (t 26507 47577 534062 538000)) nil (26507 47619 455339 527000) 0 nil])
([nil nil ((1264 . 1272) (1263 . 1264) (t 26507 47619 510997 147000)) nil (26507 47829 588568 880000) 0 nil])
([nil nil ((1370 . 1374) (1369 . 1373) (1368 . 1369) (t 26507 47829 611671 988000)) nil (26507 47973 497114 570000) 0 nil])
([nil nil ((nil fontified nil 852 . 854) (nil face font-lock-type-face 852 . 854) (852 . 854) (#("* " 0 1 (fontified t) 1 2 (face whitespace-space fontified t)) . 852) (t 26507 47973 516450 879000)) nil (26508 52555 915109 951000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1158 . 1159) (nil fontified nil 1112 . 1159) (nil fontified nil 1111 . 1112) (nil fontified nil 1042 . 1111) (nil fontified nil 1041 . 1042) (1041 . 1159) (t 26507 56264 766285 957000)) nil (26508 52555 915108 909000) 0 nil])
([nil nil ((1158 . 1159) 1157) nil (26508 52555 915107 697000) 0 nil])
([nil nil ((#("Remove and return the vertex with minimum value in the heap" 0 6 (face font-lock-comment-face c-in-sws t fontified t) 6 7 (face whitespace-space c-in-sws t fontified t) 7 10 (face font-lock-comment-face c-in-sws t fontified t) 10 11 (face whitespace-space c-in-sws t fontified t) 11 17 (face font-lock-comment-face c-in-sws t fontified t) 17 18 (face whitespace-space c-in-sws t fontified t) 18 21 (face font-lock-comment-face c-in-sws t fontified t) 21 22 (face whitespace-space c-in-sws t fontified t) 22 28 (face font-lock-comment-face c-in-sws t fontified t) 28 29 (face whitespace-space c-in-sws t fontified t) 29 33 (face font-lock-comment-face c-in-sws t fontified t) 33 34 (face whitespace-space c-in-sws t fontified t) 34 41 (face font-lock-comment-face c-in-sws t fontified t) 41 42 (face whitespace-space c-in-sws t fontified t) 42 47 (face font-lock-comment-face c-in-sws t fontified t) 47 48 (face whitespace-space c-in-sws t fontified t) 48 50 (face font-lock-comment-face c-in-sws t fontified t) 50 51 (face whitespace-space c-in-sws t fontified t) 51 54 (face font-lock-comment-face c-in-sws t fontified t) 54 55 (face whitespace-space c-in-sws t fontified t) 55 59 (face font-lock-comment-face c-in-sws t fontified t)) . 1047) (undo-tree-id1502 . -58)) nil (26508 52555 915106 897000) 0 nil])
([nil nil ((1188 . 1202) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1188) (undo-tree-id1497 . -1) 1189 (1188 . 1189) (#("h" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1188) (undo-tree-id1498 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1189) (undo-tree-id1499 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1190) (undo-tree-id1500 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -1191) (undo-tree-id1501 . -1) 1192 (1068 . 1073) (1047 . 1068)) nil (26508 52555 915104 402000) 0 nil])
([nil nil ((#("heap" 0 4 (face font-lock-comment-face fontified t c-in-sws t)) . 1401) (undo-tree-id1496 . -3)) nil (26508 52555 915097 367000) 0 nil])
([nil nil ((1401 . 1415)) nil (26508 52555 915096 179000) 0 nil])
([nil nil ((#("graph_vertex" 0 1 (face font-lock-type-face fontified t c-is-sws t) 1 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1078) (undo-tree-id1495 . -11)) nil (26508 52555 915095 195000) 0 nil])
([nil nil ((1088 . 1090) (#("*" 0 1 (c-is-sws t fontified t)) . 1082) (1078 . 1081)) nil (26508 52555 915093 386000) 0 nil])
([nil nil ((#("deextract_min" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 13 (face font-lock-function-name-face fontified t)) . 1088) (undo-tree-id1493 . -12) (undo-tree-id1494 . 11)) nil (26508 52555 915091 953000) 0 nil])
([nil nil ((1088 . 1092)) nil (26508 52555 915073 896000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1084) (#("n" 0 1 (face font-lock-type-face fontified t)) . 1084) (#("i" 0 1 (face font-lock-type-face c-is-sws t fontified t)) . 1084) (1078 . 1084) (t 26508 52555 972384 641000)) nil (26508 52689 569532 754000) 0 nil])
([nil nil ((#("CONTAINERS" 0 10 (fontified nil)) . -1646) (1656 . 1659) (#("CONTAINERS" 0 10 (c-in-sws t face font-lock-variable-name-face fontified nil)) . -23) (33 . 36) (#("CONTAINERS" 0 10 (c-in-sws t fontified t)) . -9) (t 26508 52706 292015 681000) (19 . 22) (t 26508 52706 292015 681000)) nil (26517 62757 316359 6000) 0 nil])
([nil current ((63 . 64) (#("e" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 63) (t 26569 47624 170945 223000)) nil (26584 34780 256528 658000) 0 nil])
nil
